{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/components/Menu/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Menu as UikitMenu } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport useTheme from 'hooks/useTheme';\nimport { usePriceCakeBusd } from 'state/farms/hooks';\nimport { useProfile } from 'state/profile/hooks';\nimport config from './config';\nimport UserMenu from './UserMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Menu = props => {\n  _s();\n\n  var _profile$nft;\n\n  const {\n    isDark,\n    toggleTheme\n  } = useTheme();\n  const cakePriceUsd = usePriceCakeBusd();\n  const {\n    profile\n  } = useProfile();\n  const {\n    currentLanguage,\n    setLanguage,\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(UikitMenu, {\n    userMenu: /*#__PURE__*/_jsxDEV(UserMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this),\n    setLang: setLanguage,\n    cakePriceUsd: cakePriceUsd.toNumber(),\n    links: config(t),\n    profile: {\n      username: profile === null || profile === void 0 ? void 0 : profile.username,\n      image: (profile === null || profile === void 0 ? void 0 : profile.nft) ? `/images/nfts/${(_profile$nft = profile.nft) === null || _profile$nft === void 0 ? void 0 : _profile$nft.images.sm}` : undefined,\n      profileLink: '/profile',\n      noProfileLink: '/profile',\n      showPip: !(profile === null || profile === void 0 ? void 0 : profile.username)\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Menu, \"p7bKe/M8196tmVoLMcCDjd3Yyko=\", false, function () {\n  return [useTheme, usePriceCakeBusd, useProfile, useTranslation];\n});\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/components/Menu/index.tsx"],"names":["React","Menu","UikitMenu","useTranslation","useTheme","usePriceCakeBusd","useProfile","config","UserMenu","props","isDark","toggleTheme","cakePriceUsd","profile","currentLanguage","setLanguage","t","toNumber","username","image","nft","images","sm","undefined","profileLink","noProfileLink","showPip"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAI,IAAIC,SAAjB,QAAkC,oBAAlC;AAEA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMP,IAAI,GAAIQ,KAAD,IAAW;AAAA;;AAAA;;AACtB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA0BP,QAAQ,EAAxC;AACA,QAAMQ,YAAY,GAAGP,gBAAgB,EAArC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAcP,UAAU,EAA9B;AACA,QAAM;AAAEQ,IAAAA,eAAF;AAAmBC,IAAAA,WAAnB;AAAgCC,IAAAA;AAAhC,MAAsCb,cAAc,EAA1D;AAEA,sBACE,QAAC,SAAD;AACE,IAAA,QAAQ,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADZ;AAME,IAAA,OAAO,EAAEY,WANX;AAOE,IAAA,YAAY,EAAEH,YAAY,CAACK,QAAb,EAPhB;AAQE,IAAA,KAAK,EAAEV,MAAM,CAACS,CAAD,CARf;AASE,IAAA,OAAO,EAAE;AACPE,MAAAA,QAAQ,EAAEL,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEK,QADZ;AAEPC,MAAAA,KAAK,EAAE,CAAAN,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEO,GAAT,IAAgB,gBAAD,gBAAgBP,OAAO,CAACO,GAAxB,iDAAgB,aAAaC,MAAb,CAAoBC,EAAG,EAAtD,GAA0DC,SAF1D;AAGPC,MAAAA,WAAW,EAAE,UAHN;AAIPC,MAAAA,aAAa,EAAE,UAJR;AAKPC,MAAAA,OAAO,EAAE,EAACb,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEK,QAAV;AALF,KATX;AAAA,OAgBMT;AAhBN;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA1BD;;GAAMR,I;UAC4BG,Q,EACXC,gB,EACDC,U,EACwBH,c;;;KAJxCF,I;AA4BN,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport config from './config'\nimport UserMenu from './UserMenu'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      userMenu={<UserMenu />}\n\n\n\n  \n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n"]},"metadata":{},"sourceType":"module"}