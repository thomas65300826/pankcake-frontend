{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/pancake-frontend/src/views/FarmAuction/components/AuctionDetailsCard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Text, Heading, Card, CardHeader, CardBody, Flex, Spinner, Skeleton, Tag, Button, CheckmarkCircleIcon, useModal } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { AuctionStatus } from 'config/constants/types';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport PlaceBidModal from '../PlaceBidModal';\nimport { AuctionSchedule } from './AuctionSchedule';\nimport CannotBidMessage from './CannotBidMessage';\nimport AuctionFooter from './AuctionFooter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AuctionDetailsCard = styled(Card)`\n  flex: 1;\n`;\n_c = AuctionDetailsCard;\n\nconst AuctionDetails = ({\n  auction,\n  conncetedBidder,\n  refreshBidders\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [onPresentPlaceBid] = useModal( /*#__PURE__*/_jsxDEV(PlaceBidModal, {\n    conncetedBidder: conncetedBidder,\n    refreshBidders: refreshBidders,\n    initialBidAmount: auction === null || auction === void 0 ? void 0 : auction.initialBidAmount\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this));\n\n  if (!auction) {\n    return /*#__PURE__*/_jsxDEV(AuctionDetailsCard, {\n      mb: ['24px', null, null, '0'],\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          children: t('Current Auction')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n  const getBidSection = () => {\n    const notConnectedOrNotWhitelisted = !conncetedBidder || conncetedBidder && !conncetedBidder.isWhitelisted;\n    const whitelistedAndReadyToBid = !notConnectedOrNotWhitelisted && conncetedBidder.bidderData;\n\n    if (notConnectedOrNotWhitelisted || auction.status !== AuctionStatus.Open) {\n      return /*#__PURE__*/_jsxDEV(CannotBidMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (whitelistedAndReadyToBid) {\n      const {\n        amount,\n        position\n      } = conncetedBidder.bidderData;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Tag, {\n          outline: true,\n          variant: \"success\",\n          startIcon: /*#__PURE__*/_jsxDEV(CheckmarkCircleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 53\n          }, this),\n          children: t('Connected as %projectName%', {\n            projectName: conncetedBidder.bidderData.tokenName\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"space-between\",\n          width: \"100%\",\n          pt: \"24px\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            small: true,\n            color: \"textSubtle\",\n            children: t('Your existing bid')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            small: true,\n            children: [getBalanceNumber(amount).toLocaleString(), \" CAKE\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"space-between\",\n          width: \"100%\",\n          pt: \"8px\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            small: true,\n            color: \"textSubtle\",\n            children: t('Your position')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            small: true,\n            children: position ? `#${position}` : '-'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          my: \"24px\",\n          width: \"100%\",\n          onClick: onPresentPlaceBid,\n          children: t('Place bid')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          color: \"textSubtle\",\n          small: true,\n          children: t('If your bid is unsuccessful, youâ€™ll be able to reclaim your CAKE after the auction.')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n        width: \"200px\",\n        height: \"28px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        width: \"100%\",\n        pt: \"24px\",\n        px: \"8px\",\n        children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n          width: \"120px\",\n          height: \"24px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          width: \"86px\",\n          height: \"24px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        width: \"100%\",\n        pt: \"8px\",\n        px: \"8px\",\n        children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n          width: \"96px\",\n          height: \"24px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          width: \"42px\",\n          height: \"24px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  const cardTitle = auction.status === AuctionStatus.Closed ? t('Next Auction') : t('Current Auction');\n  return /*#__PURE__*/_jsxDEV(AuctionDetailsCard, {\n    mb: ['24px', null, null, '0'],\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(Heading, {\n        children: cardTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(AuctionSchedule, {\n        auction: auction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        mt: \"24px\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: getBidSection()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AuctionFooter, {\n      auction: auction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuctionDetails, \"jpmvMzhqmDsdUUGRfnx/ltkh5V0=\", false, function () {\n  return [useTranslation, useModal];\n});\n\n_c2 = AuctionDetails;\nexport default AuctionDetails;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AuctionDetailsCard\");\n$RefreshReg$(_c2, \"AuctionDetails\");","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/src/views/FarmAuction/components/AuctionDetailsCard/index.tsx"],"names":["React","styled","Text","Heading","Card","CardHeader","CardBody","Flex","Spinner","Skeleton","Tag","Button","CheckmarkCircleIcon","useModal","useTranslation","AuctionStatus","getBalanceNumber","PlaceBidModal","AuctionSchedule","CannotBidMessage","AuctionFooter","AuctionDetailsCard","AuctionDetails","auction","conncetedBidder","refreshBidders","t","onPresentPlaceBid","initialBidAmount","getBidSection","notConnectedOrNotWhitelisted","isWhitelisted","whitelistedAndReadyToBid","bidderData","status","Open","amount","position","projectName","tokenName","toLocaleString","cardTitle","Closed"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport {\n  Text,\n  Heading,\n  Card,\n  CardHeader,\n  CardBody,\n  Flex,\n  Spinner,\n  Skeleton,\n  Tag,\n  Button,\n  CheckmarkCircleIcon,\n  useModal,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus, ConnectedBidder } from 'config/constants/types'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport PlaceBidModal from '../PlaceBidModal'\nimport { AuctionSchedule } from './AuctionSchedule'\nimport CannotBidMessage from './CannotBidMessage'\nimport AuctionFooter from './AuctionFooter'\n\nconst AuctionDetailsCard = styled(Card)`\n  flex: 1;\n`\n\ninterface AuctionDetailsProps {\n  auction: Auction\n  conncetedBidder: ConnectedBidder\n  refreshBidders: () => void\n}\n\nconst AuctionDetails: React.FC<AuctionDetailsProps> = ({ auction, conncetedBidder, refreshBidders }) => {\n  const { t } = useTranslation()\n\n  const [onPresentPlaceBid] = useModal(\n    <PlaceBidModal\n      conncetedBidder={conncetedBidder}\n      refreshBidders={refreshBidders}\n      initialBidAmount={auction?.initialBidAmount}\n    />,\n  )\n\n  if (!auction) {\n    return (\n      <AuctionDetailsCard mb={['24px', null, null, '0']}>\n        <CardHeader>\n          <Heading>{t('Current Auction')}</Heading>\n        </CardHeader>\n        <CardBody>\n          <Flex justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n            <Spinner />\n          </Flex>\n        </CardBody>\n      </AuctionDetailsCard>\n    )\n  }\n\n  const getBidSection = () => {\n    const notConnectedOrNotWhitelisted = !conncetedBidder || (conncetedBidder && !conncetedBidder.isWhitelisted)\n    const whitelistedAndReadyToBid = !notConnectedOrNotWhitelisted && conncetedBidder.bidderData\n    if (notConnectedOrNotWhitelisted || auction.status !== AuctionStatus.Open) {\n      return <CannotBidMessage />\n    }\n    if (whitelistedAndReadyToBid) {\n      const { amount, position } = conncetedBidder.bidderData\n      return (\n        <>\n          <Tag outline variant=\"success\" startIcon={<CheckmarkCircleIcon />}>\n            {t('Connected as %projectName%', { projectName: conncetedBidder.bidderData.tokenName })}\n          </Tag>\n          <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"24px\">\n            <Text small color=\"textSubtle\">\n              {t('Your existing bid')}\n            </Text>\n            <Text small>{getBalanceNumber(amount).toLocaleString()} CAKE</Text>\n          </Flex>\n          <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\">\n            <Text small color=\"textSubtle\">\n              {t('Your position')}\n            </Text>\n            <Text small>{position ? `#${position}` : '-'}</Text>\n          </Flex>\n          <Button my=\"24px\" width=\"100%\" onClick={onPresentPlaceBid}>\n            {t('Place bid')}\n          </Button>\n          <Text color=\"textSubtle\" small>\n            {t('If your bid is unsuccessful, youâ€™ll be able to reclaim your CAKE after the auction.')}\n          </Text>\n        </>\n      )\n    }\n    return (\n      <>\n        <Skeleton width=\"200px\" height=\"28px\" />\n        <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"24px\" px=\"8px\">\n          <Skeleton width=\"120px\" height=\"24px\" />\n          <Skeleton width=\"86px\" height=\"24px\" />\n        </Flex>\n        <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\" px=\"8px\">\n          <Skeleton width=\"96px\" height=\"24px\" />\n          <Skeleton width=\"42px\" height=\"24px\" />\n        </Flex>\n      </>\n    )\n  }\n\n  const cardTitle = auction.status === AuctionStatus.Closed ? t('Next Auction') : t('Current Auction')\n\n  return (\n    <AuctionDetailsCard mb={['24px', null, null, '0']}>\n      <CardHeader>\n        <Heading>{cardTitle}</Heading>\n      </CardHeader>\n      <CardBody>\n        <AuctionSchedule auction={auction} />\n        <Flex mt=\"24px\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">\n          {getBidSection()}\n        </Flex>\n      </CardBody>\n      <AuctionFooter auction={auction} />\n    </AuctionDetailsCard>\n  )\n}\n\nexport default AuctionDetails\n"]},"metadata":{},"sourceType":"module"}