{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/views/Home/components/MetricsSection/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Heading, Flex, Text, Skeleton, ChartIcon, CommunityIcon, SwapIcon } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { useGetStats } from 'hooks/api';\nimport useTheme from 'hooks/useTheme';\nimport { formatLocalisedCompactNumber } from 'utils/formatBalance';\nimport IconCard from '../IconCard';\nimport StatCardContent from './StatCardContent';\nimport GradientLogo from '../GradientLogoSvg'; // Values fetched from bitQuery effective 28/7/21\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst txCount = 30673865;\nconst addressCount = 1966700;\n\nconst Stats = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const data = useGetStats();\n  const {\n    theme\n  } = useTheme();\n  const tvlString = data ? formatLocalisedCompactNumber(data.tvl) : '-';\n  const trades = formatLocalisedCompactNumber(txCount);\n  const users = formatLocalisedCompactNumber(addressCount);\n  const tvlText = t('And those users are now entrusting the platform with over $%tvl% in funds.', {\n    tvl: tvlString\n  });\n  const [entrusting, inFunds] = tvlText.split(tvlString);\n  const UsersCardData = {\n    icon: /*#__PURE__*/_jsxDEV(CommunityIcon, {\n      color: \"secondary\",\n      width: \"36px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this),\n    background: theme.colors.background,\n    borderColor: theme.colors.cardBorder\n  };\n  const TradesCardData = {\n    icon: /*#__PURE__*/_jsxDEV(SwapIcon, {\n      color: \"primary\",\n      width: \"36px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this),\n    background: theme.colors.background,\n    borderColor: theme.colors.cardBorder\n  };\n  const StakedCardData = {\n    icon: /*#__PURE__*/_jsxDEV(ChartIcon, {\n      color: \"failure\",\n      width: \"36px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this),\n    background: theme.colors.background,\n    borderColor: theme.colors.cardBorder\n  };\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(GradientLogo, {\n      height: \"48px\",\n      width: \"48px\",\n      mb: \"24px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      textAlign: \"center\",\n      scale: \"xl\",\n      children: t('Used by millions.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      textAlign: \"center\",\n      scale: \"xl\",\n      mb: \"32px\",\n      children: t('Trusted with billions.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      textAlign: \"center\",\n      color: \"textSubtle\",\n      children: t('PancakeSwap has the most users of any decentralized platform, ever.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flexWrap: \"wrap\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        display: \"inline\",\n        textAlign: \"center\",\n        color: \"textSubtle\",\n        mb: \"20px\",\n        children: [entrusting, /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: tvlString\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(Skeleton, {\n            display: \"inline-block\",\n            height: 16,\n            width: 70,\n            mt: \"2px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 40\n          }, this)\n        }, void 0, false), inFunds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      textAlign: \"center\",\n      color: \"textSubtle\",\n      bold: true,\n      mb: \"32px\",\n      children: t('Will you join them?')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: ['column', null, null, 'row'],\n      children: [/*#__PURE__*/_jsxDEV(IconCard, { ...UsersCardData,\n        mr: [null, null, null, '16px'],\n        mb: ['16px', null, null, '0'],\n        children: /*#__PURE__*/_jsxDEV(StatCardContent, {\n          headingText: t('%users% users', {\n            users\n          }),\n          bodyText: t('in the last 30 days'),\n          highlightColor: theme.colors.secondary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconCard, { ...TradesCardData,\n        mr: [null, null, null, '16px'],\n        mb: ['16px', null, null, '0'],\n        children: /*#__PURE__*/_jsxDEV(StatCardContent, {\n          headingText: t('%trades% trades', {\n            trades\n          }),\n          bodyText: t('made in the last 30 days'),\n          highlightColor: theme.colors.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconCard, { ...StakedCardData,\n        children: /*#__PURE__*/_jsxDEV(StatCardContent, {\n          headingText: t('$%tvl% staked', {\n            tvl: tvlString\n          }),\n          bodyText: t('Total Value Locked'),\n          highlightColor: theme.colors.failure\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Stats, \"Q0RUHC/iuaHbk/6EkGUHq72bmDw=\", false, function () {\n  return [useTranslation, useGetStats, useTheme];\n});\n\n_c = Stats;\nexport default Stats;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"sources":["/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/views/Home/components/MetricsSection/index.tsx"],"names":["React","Heading","Flex","Text","Skeleton","ChartIcon","CommunityIcon","SwapIcon","useTranslation","useGetStats","useTheme","formatLocalisedCompactNumber","IconCard","StatCardContent","GradientLogo","txCount","addressCount","Stats","t","data","theme","tvlString","tvl","trades","users","tvlText","entrusting","inFunds","split","UsersCardData","icon","background","colors","borderColor","cardBorder","TradesCardData","StakedCardData","secondary","primary","failure"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Heading, Flex, Text, Skeleton, ChartIcon, CommunityIcon, SwapIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useGetStats } from 'hooks/api'\nimport useTheme from 'hooks/useTheme'\nimport { formatLocalisedCompactNumber } from 'utils/formatBalance'\nimport IconCard, { IconCardData } from '../IconCard'\nimport StatCardContent from './StatCardContent'\nimport GradientLogo from '../GradientLogoSvg'\n\n// Values fetched from bitQuery effective 28/7/21\nconst txCount = 30673865\nconst addressCount = 1966700\n\nconst Stats = () => {\n  const { t } = useTranslation()\n  const data = useGetStats()\n  const { theme } = useTheme()\n\n  const tvlString = data ? formatLocalisedCompactNumber(data.tvl) : '-'\n  const trades = formatLocalisedCompactNumber(txCount)\n  const users = formatLocalisedCompactNumber(addressCount)\n\n  const tvlText = t('And those users are now entrusting the platform with over $%tvl% in funds.', { tvl: tvlString })\n  const [entrusting, inFunds] = tvlText.split(tvlString)\n\n  const UsersCardData: IconCardData = {\n    icon: <CommunityIcon color=\"secondary\" width=\"36px\" />,\n    background: theme.colors.background,\n    borderColor: theme.colors.cardBorder,\n  }\n\n  const TradesCardData: IconCardData = {\n    icon: <SwapIcon color=\"primary\" width=\"36px\" />,\n    background: theme.colors.background,\n    borderColor: theme.colors.cardBorder,\n  }\n\n  const StakedCardData: IconCardData = {\n    icon: <ChartIcon color=\"failure\" width=\"36px\" />,\n    background: theme.colors.background,\n    borderColor: theme.colors.cardBorder,\n  }\n\n  return (\n    <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\n      <GradientLogo height=\"48px\" width=\"48px\" mb=\"24px\" />\n      <Heading textAlign=\"center\" scale=\"xl\">\n        {t('Used by millions.')}\n      </Heading>\n      <Heading textAlign=\"center\" scale=\"xl\" mb=\"32px\">\n        {t('Trusted with billions.')}\n      </Heading>\n      <Text textAlign=\"center\" color=\"textSubtle\">\n        {t('PancakeSwap has the most users of any decentralized platform, ever.')}\n      </Text>\n      <Flex flexWrap=\"wrap\">\n        <Text display=\"inline\" textAlign=\"center\" color=\"textSubtle\" mb=\"20px\">\n          {entrusting}\n          <>{data ? <>{tvlString}</> : <Skeleton display=\"inline-block\" height={16} width={70} mt=\"2px\" />}</>\n          {inFunds}\n        </Text>\n      </Flex>\n\n      <Text textAlign=\"center\" color=\"textSubtle\" bold mb=\"32px\">\n        {t('Will you join them?')}\n      </Text>\n\n      <Flex flexDirection={['column', null, null, 'row']}>\n        <IconCard {...UsersCardData} mr={[null, null, null, '16px']} mb={['16px', null, null, '0']}>\n          <StatCardContent\n            headingText={t('%users% users', { users })}\n            bodyText={t('in the last 30 days')}\n            highlightColor={theme.colors.secondary}\n          />\n        </IconCard>\n        <IconCard {...TradesCardData} mr={[null, null, null, '16px']} mb={['16px', null, null, '0']}>\n          <StatCardContent\n            headingText={t('%trades% trades', { trades })}\n            bodyText={t('made in the last 30 days')}\n            highlightColor={theme.colors.primary}\n          />\n        </IconCard>\n        <IconCard {...StakedCardData}>\n          <StatCardContent\n            headingText={t('$%tvl% staked', { tvl: tvlString })}\n            bodyText={t('Total Value Locked')}\n            highlightColor={theme.colors.failure}\n          />\n        </IconCard>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Stats\n"]},"metadata":{},"sourceType":"module"}