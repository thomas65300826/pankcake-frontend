{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/pancake-frontend/pankcake-frontend/src/views/FarmAuction/components/NotWhitelistedNotice.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Text, Flex, Message, Box, HelpIcon } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotWhitelistedNotice = ({\n  conncetedBidder,\n  auction\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n\n  if (conncetedBidder && conncetedBidder.isWhitelisted || !auction) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    mb: \"24px\",\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"warning\",\n      icon: /*#__PURE__*/_jsxDEV(HelpIcon, {\n        width: \"24px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 40\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        maxWidth: \"800px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          children: t('Notice')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: t('This page is a functional page, for projects to bid for farms.')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: t('If you’re not a whitelisted project, you won’t be able to participate, but you can still view the auction bids in real time!')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: t('Connect a whitelisted project wallet to participate in Auctions.')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NotWhitelistedNotice, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = NotWhitelistedNotice;\nexport default NotWhitelistedNotice;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotWhitelistedNotice\");","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/pankcake-frontend/src/views/FarmAuction/components/NotWhitelistedNotice.tsx"],"names":["React","Text","Flex","Message","Box","HelpIcon","useTranslation","NotWhitelistedNotice","conncetedBidder","auction","t","isWhitelisted"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,OAArB,EAA8BC,GAA9B,EAAmCC,QAAnC,QAAmD,oBAAnD;AAEA,SAASC,cAAT,QAA+B,uBAA/B;;;AAEA,MAAMC,oBAAsF,GAAG,CAAC;AAC9FC,EAAAA,eAD8F;AAE9FC,EAAAA;AAF8F,CAAD,KAGzF;AAAA;;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAQJ,cAAc,EAA5B;;AACA,MAAKE,eAAe,IAAIA,eAAe,CAACG,aAApC,IAAsD,CAACF,OAA3D,EAAoE;AAClE,WAAO,IAAP;AACD;;AACD,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAC,MAAT;AAAgB,IAAA,cAAc,EAAC,QAA/B;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,SAAjB;AAA2B,MAAA,IAAI,eAAE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAAjC;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,QAAQ,EAAC,OAAd;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,oBAAYC,CAAC,CAAC,QAAD;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAA,oBAAOA,CAAC,CAAC,gEAAD;AAAR;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,IAAD;AAAA,oBACGA,CAAC,CACA,8HADA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHF,eAQE,QAAC,IAAD;AAAA,oBAAOA,CAAC,CAAC,kEAAD;AAAR;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAxBD;;GAAMH,oB;UAIUD,c;;;KAJVC,oB;AA0BN,eAAeA,oBAAf","sourcesContent":["import React from 'react'\nimport { Text, Flex, Message, Box, HelpIcon } from '@pancakeswap/uikit'\nimport { Auction, ConnectedBidder } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\n\nconst NotWhitelistedNotice: React.FC<{ conncetedBidder: ConnectedBidder; auction: Auction }> = ({\n  conncetedBidder,\n  auction,\n}) => {\n  const { t } = useTranslation()\n  if ((conncetedBidder && conncetedBidder.isWhitelisted) || !auction) {\n    return null\n  }\n  return (\n    <Flex mb=\"24px\" justifyContent=\"center\">\n      <Message variant=\"warning\" icon={<HelpIcon width=\"24px\" />}>\n        <Box maxWidth=\"800px\">\n          <Text bold>{t('Notice')}</Text>\n          <Text>{t('This page is a functional page, for projects to bid for farms.')}</Text>\n          <Text>\n            {t(\n              'If you’re not a whitelisted project, you won’t be able to participate, but you can still view the auction bids in real time!',\n            )}\n          </Text>\n          <Text>{t('Connect a whitelisted project wallet to participate in Auctions.')}</Text>\n        </Box>\n      </Message>\n    </Flex>\n  )\n}\n\nexport default NotWhitelistedNotice\n"]},"metadata":{},"sourceType":"module"}