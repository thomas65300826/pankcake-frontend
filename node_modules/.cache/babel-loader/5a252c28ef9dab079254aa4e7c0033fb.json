{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/views/TradingCompetition/components/Countdown/Timer.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Flex, Heading, Text, Link, useTooltip } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { getBscScanLink } from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledTimerFlex = styled(Flex)`\n  ${({\n  theme,\n  showTooltip\n}) => showTooltip ? ` border-bottom: 1px dashed ${theme.colors.textSubtle};` : ``}\n  div:last-of-type {\n    margin-right: 0;\n  }\n`;\n_c = StyledTimerFlex;\n\nconst Timer = ({\n  minutes,\n  hours,\n  days,\n  showTooltip,\n  HeadingTextComponent,\n  BodyTextComponent\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(StyledTimerFlex, {\n    alignItems: \"flex-end\",\n    showTooltip: showTooltip,\n    children: [Boolean(days) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HeadingTextComponent, {\n        mr: \"2px\",\n        children: days\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BodyTextComponent, {\n        mr: \"16px\",\n        children: t('d')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), Boolean(hours) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HeadingTextComponent, {\n        mr: \"2px\",\n        children: hours\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BodyTextComponent, {\n        mr: \"16px\",\n        children: t('h')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), Boolean(minutes) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HeadingTextComponent, {\n        mr: \"2px\",\n        children: minutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BodyTextComponent, {\n        children: t('m')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c2 = Timer;\n\nconst DefaultHeadingTextComponent = ({\n  children,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(Heading, {\n  scale: \"lg\",\n  ...props,\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 3\n}, this);\n\n_c3 = DefaultHeadingTextComponent;\n\nconst DefaultBodyTextComponent = ({\n  children,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(Text, {\n  fontSize: \"16px\",\n  fontWeight: \"600\",\n  ...props,\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 60,\n  columnNumber: 3\n}, this);\n\n_c4 = DefaultBodyTextComponent;\n\nconst TooltipContent = ({\n  blockNumber,\n  t\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(Text, {\n    color: \"body\",\n    mb: \"10px\",\n    fontWeight: \"600\",\n    children: t('Block %num%', {\n      num: blockNumber\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Link, {\n    external: true,\n    href: getBscScanLink(blockNumber, 'block'),\n    children: t('View on BscScan')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n\n_c5 = TooltipContent;\n\nconst Wrapper = ({\n  prefix,\n  suffix,\n  minutes,\n  hours,\n  days,\n  blockNumber,\n  showTooltip = false,\n  HeadingTextComponent = DefaultHeadingTextComponent,\n  BodyTextComponent = DefaultBodyTextComponent\n}) => {\n  _s2();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip( /*#__PURE__*/_jsxDEV(TooltipContent, {\n    blockNumber: blockNumber,\n    t: t\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 61\n  }, this), {\n    placement: 'bottom'\n  });\n  const shouldDisplayTooltip = showTooltip && tooltipVisible;\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    alignItems: \"flex-end\",\n    position: \"relative\",\n    children: [prefix && /*#__PURE__*/_jsxDEV(BodyTextComponent, {\n      mr: \"16px\",\n      children: prefix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: targetRef,\n      children: [/*#__PURE__*/_jsxDEV(Timer, {\n        minutes: minutes,\n        hours: hours,\n        days: days,\n        HeadingTextComponent: HeadingTextComponent,\n        BodyTextComponent: BodyTextComponent,\n        showTooltip: showTooltip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), shouldDisplayTooltip && tooltip]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), suffix && /*#__PURE__*/_jsxDEV(BodyTextComponent, {\n      ml: \"16px\",\n      children: suffix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Wrapper, \"GSMeUTDR148KmhQO/xuGuRK/xHM=\", false, function () {\n  return [useTranslation, useTooltip];\n});\n\n_c6 = Wrapper;\nexport default Wrapper;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"StyledTimerFlex\");\n$RefreshReg$(_c2, \"Timer\");\n$RefreshReg$(_c3, \"DefaultHeadingTextComponent\");\n$RefreshReg$(_c4, \"DefaultBodyTextComponent\");\n$RefreshReg$(_c5, \"TooltipContent\");\n$RefreshReg$(_c6, \"Wrapper\");","map":{"version":3,"sources":["/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/views/TradingCompetition/components/Countdown/Timer.tsx"],"names":["React","styled","Flex","Heading","Text","Link","useTooltip","useTranslation","getBscScanLink","StyledTimerFlex","theme","showTooltip","colors","textSubtle","Timer","minutes","hours","days","HeadingTextComponent","BodyTextComponent","t","Boolean","DefaultHeadingTextComponent","children","props","DefaultBodyTextComponent","TooltipContent","blockNumber","num","Wrapper","prefix","suffix","targetRef","tooltip","tooltipVisible","placement","shouldDisplayTooltip"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text, Link, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { ContextApi } from 'contexts/Localization/types'\nimport { getBscScanLink } from 'utils'\n\nexport interface TimerProps {\n  prefix?: string\n  suffix?: string\n  minutes?: number\n  hours?: number\n  days?: number\n  showTooltip?: boolean\n  blockNumber?: number\n  HeadingTextComponent?: React.ElementType\n  BodyTextComponent?: React.ElementType\n}\n\nconst StyledTimerFlex = styled(Flex)<{ showTooltip?: boolean }>`\n  ${({ theme, showTooltip }) => (showTooltip ? ` border-bottom: 1px dashed ${theme.colors.textSubtle};` : ``)}\n  div:last-of-type {\n    margin-right: 0;\n  }\n`\n\nconst Timer = ({ minutes, hours, days, showTooltip, HeadingTextComponent, BodyTextComponent }) => {\n  const { t } = useTranslation()\n\n  return (\n    <StyledTimerFlex alignItems=\"flex-end\" showTooltip={showTooltip}>\n      {Boolean(days) && (\n        <>\n          <HeadingTextComponent mr=\"2px\">{days}</HeadingTextComponent>\n          <BodyTextComponent mr=\"16px\">{t('d')}</BodyTextComponent>\n        </>\n      )}\n      {Boolean(hours) && (\n        <>\n          <HeadingTextComponent mr=\"2px\">{hours}</HeadingTextComponent>\n          <BodyTextComponent mr=\"16px\">{t('h')}</BodyTextComponent>\n        </>\n      )}\n      {Boolean(minutes) && (\n        <>\n          <HeadingTextComponent mr=\"2px\">{minutes}</HeadingTextComponent>\n          <BodyTextComponent>{t('m')}</BodyTextComponent>\n        </>\n      )}\n    </StyledTimerFlex>\n  )\n}\n\nconst DefaultHeadingTextComponent = ({ children, ...props }) => (\n  <Heading scale=\"lg\" {...props}>\n    {children}\n  </Heading>\n)\nconst DefaultBodyTextComponent = ({ children, ...props }) => (\n  <Text fontSize=\"16px\" fontWeight=\"600\" {...props}>\n    {children}\n  </Text>\n)\n\nconst TooltipContent = ({ blockNumber, t }: { blockNumber: number; t: ContextApi['t'] }): JSX.Element => (\n  <>\n    <Text color=\"body\" mb=\"10px\" fontWeight=\"600\">\n      {t('Block %num%', { num: blockNumber })}\n    </Text>\n    <Link external href={getBscScanLink(blockNumber, 'block')}>\n      {t('View on BscScan')}\n    </Link>\n  </>\n)\n\nconst Wrapper: React.FC<TimerProps> = ({\n  prefix,\n  suffix,\n  minutes,\n  hours,\n  days,\n  blockNumber,\n  showTooltip = false,\n  HeadingTextComponent = DefaultHeadingTextComponent,\n  BodyTextComponent = DefaultBodyTextComponent,\n}) => {\n  const { t } = useTranslation()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipContent blockNumber={blockNumber} t={t} />, {\n    placement: 'bottom',\n  })\n  const shouldDisplayTooltip = showTooltip && tooltipVisible\n  return (\n    <Flex alignItems=\"flex-end\" position=\"relative\">\n      {prefix && <BodyTextComponent mr=\"16px\">{prefix}</BodyTextComponent>}\n      <div ref={targetRef}>\n        <Timer\n          minutes={minutes}\n          hours={hours}\n          days={days}\n          HeadingTextComponent={HeadingTextComponent}\n          BodyTextComponent={BodyTextComponent}\n          showTooltip={showTooltip}\n        />\n        {shouldDisplayTooltip && tooltip}\n      </div>\n      {suffix && <BodyTextComponent ml=\"16px\">{suffix}</BodyTextComponent>}\n    </Flex>\n  )\n}\n\nexport default Wrapper\n"]},"metadata":{},"sourceType":"module"}