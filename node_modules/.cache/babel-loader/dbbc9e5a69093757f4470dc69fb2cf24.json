{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/views/FarmAuction/components/AuctionDetailsCard/CannotBidMessage.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Text, Flex, HelpIcon, useTooltip } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CannotBidMessage = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    tooltip,\n    targetRef,\n    tooltipVisible\n  } = useTooltip( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      mb: \"16px\",\n      children: t('Only whitelisted project wallets can bid in the auction to create Community Farms.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      mb: \"16px\",\n      children: t('Bidding is only possible while the auction is live.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: t('If you’re sure your project should be able to bid in this auction, make sure you’re connected with the correct (whitelisted) wallet.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true), {\n    placement: 'bottom'\n  });\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      color: \"textSubtle\",\n      small: true,\n      mr: \"8px\",\n      children: t('Why cant I bid for a farm?')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      ref: targetRef,\n      children: /*#__PURE__*/_jsxDEV(HelpIcon, {\n        color: \"textSubtle\",\n        height: \"16px\",\n        width: \"16px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), tooltipVisible && tooltip]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CannotBidMessage, \"TRBFy27WTIhJBywSiyEideHB92Q=\", false, function () {\n  return [useTranslation, useTooltip];\n});\n\n_c = CannotBidMessage;\nexport default CannotBidMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CannotBidMessage\");","map":{"version":3,"sources":["/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/views/FarmAuction/components/AuctionDetailsCard/CannotBidMessage.tsx"],"names":["React","Text","Flex","HelpIcon","useTooltip","useTranslation","CannotBidMessage","t","tooltip","targetRef","tooltipVisible","placement"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,QAArB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SAASC,cAAT,QAA+B,uBAA/B;;;;AAEA,MAAMC,gBAA0B,GAAG,MAAM;AAAA;;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAQF,cAAc,EAA5B;AACA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA;AAAtB,MAAyCN,UAAU,eACvD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,MAAT;AAAA,gBAAiBG,CAAC,CAAC,oFAAD;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,MAAT;AAAA,gBAAiBA,CAAC,CAAC,qDAAD;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAA,gBACGA,CAAC,CACA,sIADA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADuD,EAUvD;AAAEI,IAAAA,SAAS,EAAE;AAAb,GAVuD,CAAzD;AAYA,sBACE,QAAC,IAAD;AAAM,IAAA,cAAc,EAAC,QAArB;AAA8B,IAAA,UAAU,EAAC,QAAzC;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,YAAZ;AAAyB,MAAA,KAAK,MAA9B;AAA+B,MAAA,EAAE,EAAC,KAAlC;AAAA,gBACGJ,CAAC,CAAC,4BAAD;AADJ;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAM,MAAA,GAAG,EAAEE,SAAX;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAC,YAAhB;AAA6B,QAAA,MAAM,EAAC,MAApC;AAA2C,QAAA,KAAK,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,EAOGC,cAAc,IAAIF,OAPrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAzBD;;GAAMF,gB;UACUD,c,EACiCD,U;;;KAF3CE,gB;AA2BN,eAAeA,gBAAf","sourcesContent":["import React from 'react'\nimport { Text, Flex, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CannotBidMessage: React.FC = () => {\n  const { t } = useTranslation()\n  const { tooltip, targetRef, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"16px\">{t('Only whitelisted project wallets can bid in the auction to create Community Farms.')}</Text>\n      <Text mb=\"16px\">{t('Bidding is only possible while the auction is live.')}</Text>\n      <Text>\n        {t(\n          'If you’re sure your project should be able to bid in this auction, make sure you’re connected with the correct (whitelisted) wallet.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom' },\n  )\n  return (\n    <Flex justifyContent=\"center\" alignItems=\"center\">\n      <Text color=\"textSubtle\" small mr=\"8px\">\n        {t('Why cant I bid for a farm?')}\n      </Text>\n      <span ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" height=\"16px\" width=\"16px\" />\n      </span>\n      {tooltipVisible && tooltip}\n    </Flex>\n  )\n}\n\nexport default CannotBidMessage\n"]},"metadata":{},"sourceType":"module"}