{"ast":null,"code":"import BigNumber from 'bignumber.js';\nimport { getCakeVaultContract } from 'utils/contractHelpers';\nconst cakeVaultContract = getCakeVaultContract();\n\nconst fetchVaultUser = async account => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account);\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON()\n    };\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null\n    };\n  }\n};\n\nexport default fetchVaultUser;","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/src/state/pools/fetchVaultUser.ts"],"names":["BigNumber","getCakeVaultContract","cakeVaultContract","fetchVaultUser","account","userContractResponse","userInfo","isLoading","userShares","shares","toString","toJSON","lastDepositedTime","lastUserActionTime","cakeAtLastUserAction","error"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,SAASC,oBAAT,QAAqC,uBAArC;AAEA,MAAMC,iBAAiB,GAAGD,oBAAoB,EAA9C;;AAEA,MAAME,cAAc,GAAG,MAAOC,OAAP,IAA2B;AAChD,MAAI;AACF,UAAMC,oBAAoB,GAAG,MAAMH,iBAAiB,CAACI,QAAlB,CAA2BF,OAA3B,CAAnC;AACA,WAAO;AACLG,MAAAA,SAAS,EAAE,KADN;AAELC,MAAAA,UAAU,EAAE,IAAIR,SAAJ,CAAcK,oBAAoB,CAACI,MAArB,CAA4BC,QAA5B,EAAd,EAAsDC,MAAtD,EAFP;AAGLC,MAAAA,iBAAiB,EAAEP,oBAAoB,CAACO,iBAArB,CAAuCF,QAAvC,EAHd;AAILG,MAAAA,kBAAkB,EAAER,oBAAoB,CAACQ,kBAArB,CAAwCH,QAAxC,EAJf;AAKLI,MAAAA,oBAAoB,EAAE,IAAId,SAAJ,CAAcK,oBAAoB,CAACS,oBAArB,CAA0CJ,QAA1C,EAAd,EAAoEC,MAApE;AALjB,KAAP;AAOD,GATD,CASE,OAAOI,KAAP,EAAc;AACd,WAAO;AACLR,MAAAA,SAAS,EAAE,IADN;AAELC,MAAAA,UAAU,EAAE,IAFP;AAGLI,MAAAA,iBAAiB,EAAE,IAHd;AAILC,MAAAA,kBAAkB,EAAE,IAJf;AAKLC,MAAAA,oBAAoB,EAAE;AALjB,KAAP;AAOD;AACF,CAnBD;;AAqBA,eAAeX,cAAf","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n"]},"metadata":{},"sourceType":"module"}