{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { lazy } from 'react';\nimport BigNumber from 'bignumber.js';\nimport useEagerConnect from 'hooks/useEagerConnect';\nimport { usePollBlockNumber } from 'state/block/hooks';\nimport { usePollCoreFarmData } from 'state/farms/hooks';\nimport { useFetchProfile } from 'state/profile/hooks';\nimport UserMenu from './components/Menu/UserMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = /*#__PURE__*/lazy(_c = () => import('./views/Home'));\n_c2 = Home;\nconst Farms = /*#__PURE__*/lazy(_c3 = () => import('./views/Farms'));\n_c4 = Farms;\nconst FarmAuction = /*#__PURE__*/lazy(_c5 = () => import('./views/FarmAuction'));\n_c6 = FarmAuction;\nconst Lottery = /*#__PURE__*/lazy(_c7 = () => import('./views/Lottery'));\n_c8 = Lottery;\nconst Ifos = /*#__PURE__*/lazy(_c9 = () => import('./views/Ifos'));\n_c10 = Ifos;\nconst NotFound = /*#__PURE__*/lazy(_c11 = () => import('./views/NotFound'));\n_c12 = NotFound;\nconst Collectibles = /*#__PURE__*/lazy(_c13 = () => import('./views/Collectibles'));\n_c14 = Collectibles;\nconst Teams = /*#__PURE__*/lazy(_c15 = () => import('./views/Teams'));\n_c16 = Teams;\nconst Team = /*#__PURE__*/lazy(_c17 = () => import('./views/Teams/Team'));\n_c18 = Team;\nconst Profile = /*#__PURE__*/lazy(_c19 = () => import('./views/Profile'));\n_c20 = Profile;\nconst TradingCompetition = /*#__PURE__*/lazy(_c21 = () => import('./views/TradingCompetition'));\n_c22 = TradingCompetition;\nconst Predictions = /*#__PURE__*/lazy(_c23 = () => import('./views/Predictions'));\n_c24 = Predictions;\nconst Voting = /*#__PURE__*/lazy(_c25 = () => import('./views/Voting'));\n_c26 = Voting;\nconst Proposal = /*#__PURE__*/lazy(_c27 = () => import('./views/Voting/Proposal'));\n_c28 = Proposal;\nconst CreateProposal = /*#__PURE__*/lazy(_c29 = () => import('./views/Voting/CreateProposal'));\n_c30 = CreateProposal;\nconst AddLiquidity = /*#__PURE__*/lazy(_c31 = () => import('./views/AddLiquidity'));\n_c32 = AddLiquidity;\nconst Liquidity = /*#__PURE__*/lazy(_c33 = () => import('./views/Pool'));\n_c34 = Liquidity;\nconst PoolFinder = /*#__PURE__*/lazy(_c35 = () => import('./views/PoolFinder'));\n_c36 = PoolFinder;\nconst RemoveLiquidity = /*#__PURE__*/lazy(_c37 = () => import('./views/RemoveLiquidity')); // This config is required for number formatting\n\n_c38 = RemoveLiquidity;\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80\n});\n\nconst App = () => {\n  _s();\n\n  usePollBlockNumber();\n  useEagerConnect();\n  useFetchProfile();\n  usePollCoreFarmData();\n  return /*#__PURE__*/_jsxDEV(UserMenu, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 4\n  }, this);\n};\n\n_s(App, \"Kog3ErIaotJp02cM3AJGdYPy/vo=\", false, function () {\n  return [usePollBlockNumber, useEagerConnect, useFetchProfile, usePollCoreFarmData];\n});\n\n_c39 = App;\nexport default _c40 = /*#__PURE__*/React.memo(App);\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26, _c27, _c28, _c29, _c30, _c31, _c32, _c33, _c34, _c35, _c36, _c37, _c38, _c39, _c40;\n\n$RefreshReg$(_c, \"Home$lazy\");\n$RefreshReg$(_c2, \"Home\");\n$RefreshReg$(_c3, \"Farms$lazy\");\n$RefreshReg$(_c4, \"Farms\");\n$RefreshReg$(_c5, \"FarmAuction$lazy\");\n$RefreshReg$(_c6, \"FarmAuction\");\n$RefreshReg$(_c7, \"Lottery$lazy\");\n$RefreshReg$(_c8, \"Lottery\");\n$RefreshReg$(_c9, \"Ifos$lazy\");\n$RefreshReg$(_c10, \"Ifos\");\n$RefreshReg$(_c11, \"NotFound$lazy\");\n$RefreshReg$(_c12, \"NotFound\");\n$RefreshReg$(_c13, \"Collectibles$lazy\");\n$RefreshReg$(_c14, \"Collectibles\");\n$RefreshReg$(_c15, \"Teams$lazy\");\n$RefreshReg$(_c16, \"Teams\");\n$RefreshReg$(_c17, \"Team$lazy\");\n$RefreshReg$(_c18, \"Team\");\n$RefreshReg$(_c19, \"Profile$lazy\");\n$RefreshReg$(_c20, \"Profile\");\n$RefreshReg$(_c21, \"TradingCompetition$lazy\");\n$RefreshReg$(_c22, \"TradingCompetition\");\n$RefreshReg$(_c23, \"Predictions$lazy\");\n$RefreshReg$(_c24, \"Predictions\");\n$RefreshReg$(_c25, \"Voting$lazy\");\n$RefreshReg$(_c26, \"Voting\");\n$RefreshReg$(_c27, \"Proposal$lazy\");\n$RefreshReg$(_c28, \"Proposal\");\n$RefreshReg$(_c29, \"CreateProposal$lazy\");\n$RefreshReg$(_c30, \"CreateProposal\");\n$RefreshReg$(_c31, \"AddLiquidity$lazy\");\n$RefreshReg$(_c32, \"AddLiquidity\");\n$RefreshReg$(_c33, \"Liquidity$lazy\");\n$RefreshReg$(_c34, \"Liquidity\");\n$RefreshReg$(_c35, \"PoolFinder$lazy\");\n$RefreshReg$(_c36, \"PoolFinder\");\n$RefreshReg$(_c37, \"RemoveLiquidity$lazy\");\n$RefreshReg$(_c38, \"RemoveLiquidity\");\n$RefreshReg$(_c39, \"App\");\n$RefreshReg$(_c40, \"%default%\");","map":{"version":3,"sources":["/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/App.tsx"],"names":["React","lazy","BigNumber","useEagerConnect","usePollBlockNumber","usePollCoreFarmData","useFetchProfile","UserMenu","Home","Farms","FarmAuction","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","Voting","Proposal","CreateProposal","AddLiquidity","Liquidity","PoolFinder","RemoveLiquidity","config","EXPONENTIAL_AT","DECIMAL_PLACES","App","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AAGA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AACA,SAASC,mBAAT,QAAoC,mBAApC;AACA,SAASC,eAAT,QAAgC,qBAAhC;AAaA,OAAOC,QAAP,MAAqB,4BAArB;;AAUA;AACA;AACA,MAAMC,IAAI,gBAAGP,IAAI,MAAC,MAAM,OAAO,cAAP,CAAP,CAAjB;MAAMO,I;AACN,MAAMC,KAAK,gBAAGR,IAAI,OAAC,MAAM,OAAO,eAAP,CAAP,CAAlB;MAAMQ,K;AACN,MAAMC,WAAW,gBAAGT,IAAI,OAAC,MAAM,OAAO,qBAAP,CAAP,CAAxB;MAAMS,W;AACN,MAAMC,OAAO,gBAAGV,IAAI,OAAC,MAAM,OAAO,iBAAP,CAAP,CAApB;MAAMU,O;AACN,MAAMC,IAAI,gBAAGX,IAAI,OAAC,MAAM,OAAO,cAAP,CAAP,CAAjB;OAAMW,I;AACN,MAAMC,QAAQ,gBAAGZ,IAAI,QAAC,MAAM,OAAO,kBAAP,CAAP,CAArB;OAAMY,Q;AACN,MAAMC,YAAY,gBAAGb,IAAI,QAAC,MAAM,OAAO,sBAAP,CAAP,CAAzB;OAAMa,Y;AACN,MAAMC,KAAK,gBAAGd,IAAI,QAAC,MAAM,OAAO,eAAP,CAAP,CAAlB;OAAMc,K;AACN,MAAMC,IAAI,gBAAGf,IAAI,QAAC,MAAM,OAAO,oBAAP,CAAP,CAAjB;OAAMe,I;AACN,MAAMC,OAAO,gBAAGhB,IAAI,QAAC,MAAM,OAAO,iBAAP,CAAP,CAApB;OAAMgB,O;AACN,MAAMC,kBAAkB,gBAAGjB,IAAI,QAAC,MAAM,OAAO,4BAAP,CAAP,CAA/B;OAAMiB,kB;AACN,MAAMC,WAAW,gBAAGlB,IAAI,QAAC,MAAM,OAAO,qBAAP,CAAP,CAAxB;OAAMkB,W;AACN,MAAMC,MAAM,gBAAGnB,IAAI,QAAC,MAAM,OAAO,gBAAP,CAAP,CAAnB;OAAMmB,M;AACN,MAAMC,QAAQ,gBAAGpB,IAAI,QAAC,MAAM,OAAO,yBAAP,CAAP,CAArB;OAAMoB,Q;AACN,MAAMC,cAAc,gBAAGrB,IAAI,QAAC,MAAM,OAAO,+BAAP,CAAP,CAA3B;OAAMqB,c;AACN,MAAMC,YAAY,gBAAGtB,IAAI,QAAC,MAAM,OAAO,sBAAP,CAAP,CAAzB;OAAMsB,Y;AACN,MAAMC,SAAS,gBAAGvB,IAAI,QAAC,MAAM,OAAO,cAAP,CAAP,CAAtB;OAAMuB,S;AACN,MAAMC,UAAU,gBAAGxB,IAAI,QAAC,MAAM,OAAO,oBAAP,CAAP,CAAvB;OAAMwB,U;AACN,MAAMC,eAAe,gBAAGzB,IAAI,QAAC,MAAM,OAAO,yBAAP,CAAP,CAA5B,C,CAEA;;OAFMyB,e;AAGNxB,SAAS,CAACyB,MAAV,CAAiB;AACfC,EAAAA,cAAc,EAAE,IADD;AAEfC,EAAAA,cAAc,EAAE;AAFD,CAAjB;;AAKA,MAAMC,GAAa,GAAG,MAAM;AAAA;;AAC1B1B,EAAAA,kBAAkB;AAClBD,EAAAA,eAAe;AACfG,EAAAA,eAAe;AACfD,EAAAA,mBAAmB;AAEnB,sBACC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UADD;AAGD,CATD;;GAAMyB,G;UACJ1B,kB,EACAD,e,EACAG,e,EACAD,mB;;;OAJIyB,G;AAWN,mCAAe9B,KAAK,CAAC+B,IAAN,CAAWD,GAAX,CAAf","sourcesContent":["import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport Swap from './views/Swap'\n\nimport UserMenu from './components/Menu/UserMenu'\n\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\nconst Voting = lazy(() => import('./views/Voting'))\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n   <UserMenu />\n  )\n}\n\nexport default React.memo(App)\n"]},"metadata":{},"sourceType":"module"}