{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\n/* eslint-disable camelcase */\n\nexport const useGetStats = () => {\n  _s();\n\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://openapi.debank.com/v1/protocol?id=bsc_pancakeswap');\n        const responseData = await response.json();\n        setData(responseData);\n      } catch (error) {\n        console.error('Unable to fetch data:', error);\n      }\n    };\n\n    fetchData();\n  }, [setData]);\n  return data;\n};\n\n_s(useGetStats, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");","map":{"version":3,"sources":["/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/hooks/api.ts"],"names":["useEffect","useState","useGetStats","data","setData","fetchData","response","fetch","responseData","json","error","console"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA;;AAWA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAA2B,IAA3B,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2DAAD,CAA5B;AACA,cAAMC,YAA+B,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA9C;AAEAL,QAAAA,OAAO,CAACI,YAAD,CAAP;AACD,OALD,CAKE,OAAOE,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACD;AACF,KATD;;AAWAL,IAAAA,SAAS;AACV,GAbQ,EAaN,CAACD,OAAD,CAbM,CAAT;AAeA,SAAOD,IAAP;AACD,CAnBM;;GAAMD,W","sourcesContent":["import { useEffect, useState } from 'react'\n\n/* eslint-disable camelcase */\nexport interface DeBankTvlResponse {\n  id: string\n  chain: string\n  name: string\n  site_url: string\n  logo_url: string\n  has_supported_portfolio: boolean\n  tvl: number\n}\n\nexport const useGetStats = () => {\n  const [data, setData] = useState<DeBankTvlResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://openapi.debank.com/v1/protocol?id=bsc_pancakeswap')\n        const responseData: DeBankTvlResponse = await response.json()\n\n        setData(responseData)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  return data\n}\n"]},"metadata":{},"sourceType":"module"}