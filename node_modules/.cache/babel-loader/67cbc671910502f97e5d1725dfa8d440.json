{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/pancake-frontend/src/views/FarmAuction/components/AuctionCakeBurn.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Text, Flex, Skeleton, Box, Image } from '@pancakeswap/uikit';\nimport { useFarmAuctionContract } from 'hooks/useContract';\nimport { useTranslation } from 'contexts/Localization';\nimport { usePriceCakeBusd } from 'state/farms/hooks';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { ethersToBigNumber } from 'utils/bigNumber';\nimport Balance from 'components/Balance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuctionCakeBurn = () => {\n  _s();\n\n  const [burnedCakeAmount, setBurnedCakeAmount] = useState(0);\n  const {\n    t\n  } = useTranslation();\n  const farmAuctionContract = useFarmAuctionContract();\n  const cakePriceBusd = usePriceCakeBusd();\n  const burnedAmountAsUSD = cakePriceBusd.times(burnedCakeAmount);\n  useEffect(() => {\n    const fetchBurnedCakeAmount = async () => {\n      try {\n        const amount = await farmAuctionContract.totalCollected();\n        const amountAsBN = ethersToBigNumber(amount);\n        setBurnedCakeAmount(getBalanceNumber(amountAsBN));\n      } catch (error) {\n        console.error('Failed to fetch burned auction cake', error);\n      }\n    };\n\n    if (burnedCakeAmount === 0) {\n      fetchBurnedCakeAmount();\n    }\n  }, [burnedCakeAmount, farmAuctionContract]);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    flexDirection: ['column-reverse', null, 'row'],\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      flex: \"2\",\n      children: [burnedCakeAmount !== 0 ? /*#__PURE__*/_jsxDEV(Balance, {\n        fontSize: \"64px\",\n        bold: true,\n        value: burnedCakeAmount,\n        decimals: 0,\n        unit: \" CAKE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        width: \"256px\",\n        height: \"64px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        textTransform: \"uppercase\",\n        fontSize: \"64px\",\n        bold: true,\n        color: \"secondary\",\n        children: t('Burned')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"24px\",\n        bold: true,\n        children: t('through community auctions so far!')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), !burnedAmountAsUSD.isNaN() && !burnedAmountAsUSD.isZero() ? /*#__PURE__*/_jsxDEV(Text, {\n        color: \"textSubtle\",\n        children: [\"~$\", burnedAmountAsUSD.toNumber().toLocaleString('en', {\n          maximumFractionDigits: 0\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        width: \"128px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flex: \"1\",\n      alignSelf: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        width: \"350px\",\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          width: 350,\n          height: 320,\n          src: \"/images/burnt-cake.png\",\n          alt: t('Burnt CAKE')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuctionCakeBurn, \"JMrJ5lBVVAcnEPGexG4r6v2xRaU=\", false, function () {\n  return [useTranslation, useFarmAuctionContract, usePriceCakeBusd];\n});\n\n_c = AuctionCakeBurn;\nexport default AuctionCakeBurn;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuctionCakeBurn\");","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/src/views/FarmAuction/components/AuctionCakeBurn.tsx"],"names":["React","useState","useEffect","Text","Flex","Skeleton","Box","Image","useFarmAuctionContract","useTranslation","usePriceCakeBusd","getBalanceNumber","ethersToBigNumber","Balance","AuctionCakeBurn","burnedCakeAmount","setBurnedCakeAmount","t","farmAuctionContract","cakePriceBusd","burnedAmountAsUSD","times","fetchBurnedCakeAmount","amount","totalCollected","amountAsBN","error","console","isNaN","isZero","toNumber","toLocaleString","maximumFractionDigits"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,QAArB,EAA+BC,GAA/B,EAAoCC,KAApC,QAAiD,oBAAjD;AACA,SAASC,sBAAT,QAAuC,mBAAvC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,MAAMC,eAAyB,GAAG,MAAM;AAAA;;AACtC,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0Cf,QAAQ,CAAC,CAAD,CAAxD;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAQR,cAAc,EAA5B;AACA,QAAMS,mBAAmB,GAAGV,sBAAsB,EAAlD;AACA,QAAMW,aAAa,GAAGT,gBAAgB,EAAtC;AAEA,QAAMU,iBAAiB,GAAGD,aAAa,CAACE,KAAd,CAAoBN,gBAApB,CAA1B;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,qBAAqB,GAAG,YAAY;AACxC,UAAI;AACF,cAAMC,MAAM,GAAG,MAAML,mBAAmB,CAACM,cAApB,EAArB;AACA,cAAMC,UAAU,GAAGb,iBAAiB,CAACW,MAAD,CAApC;AACAP,QAAAA,mBAAmB,CAACL,gBAAgB,CAACc,UAAD,CAAjB,CAAnB;AACD,OAJD,CAIE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc,qCAAd,EAAqDA,KAArD;AACD;AACF,KARD;;AASA,QAAIX,gBAAgB,KAAK,CAAzB,EAA4B;AAC1BO,MAAAA,qBAAqB;AACtB;AACF,GAbQ,EAaN,CAACP,gBAAD,EAAmBG,mBAAnB,CAbM,CAAT;AAcA,sBACE,QAAC,IAAD;AAAM,IAAA,aAAa,EAAE,CAAC,gBAAD,EAAmB,IAAnB,EAAyB,KAAzB,CAArB;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,aAAa,EAAC,QAApB;AAA6B,MAAA,IAAI,EAAC,GAAlC;AAAA,iBACGH,gBAAgB,KAAK,CAArB,gBACC,QAAC,OAAD;AAAS,QAAA,QAAQ,EAAC,MAAlB;AAAyB,QAAA,IAAI,MAA7B;AAA8B,QAAA,KAAK,EAAEA,gBAArC;AAAuD,QAAA,QAAQ,EAAE,CAAjE;AAAoE,QAAA,IAAI,EAAC;AAAzE;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC,QAAC,QAAD;AAAU,QAAA,KAAK,EAAC,OAAhB;AAAwB,QAAA,MAAM,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,cAJJ,eAME,QAAC,IAAD;AAAM,QAAA,aAAa,EAAC,WAApB;AAAgC,QAAA,QAAQ,EAAC,MAAzC;AAAgD,QAAA,IAAI,MAApD;AAAqD,QAAA,KAAK,EAAC,WAA3D;AAAA,kBACGE,CAAC,CAAC,QAAD;AADJ;AAAA;AAAA;AAAA;AAAA,cANF,eASE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAC,MAAf;AAAsB,QAAA,IAAI,MAA1B;AAAA,kBACGA,CAAC,CAAC,oCAAD;AADJ;AAAA;AAAA;AAAA;AAAA,cATF,EAYG,CAACG,iBAAiB,CAACQ,KAAlB,EAAD,IAA8B,CAACR,iBAAiB,CAACS,MAAlB,EAA/B,gBACC,QAAC,IAAD;AAAM,QAAA,KAAK,EAAC,YAAZ;AAAA,yBACKT,iBAAiB,CAACU,QAAlB,GAA6BC,cAA7B,CAA4C,IAA5C,EAAkD;AAAEC,UAAAA,qBAAqB,EAAE;AAAzB,SAAlD,CADL;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAKC,QAAC,QAAD;AAAU,QAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAqBE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAe,MAAA,SAAS,EAAC,QAAzB;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAC,OAAX;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAE,GAAd;AAAmB,UAAA,MAAM,EAAE,GAA3B;AAAgC,UAAA,GAAG,EAAC,wBAApC;AAA6D,UAAA,GAAG,EAAEf,CAAC,CAAC,YAAD;AAAnE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAnDD;;GAAMH,e;UAEUL,c,EACcD,sB,EACNE,gB;;;KAJlBI,e;AAqDN,eAAeA,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Text, Flex, Skeleton, Box, Image } from '@pancakeswap/uikit'\nimport { useFarmAuctionContract } from 'hooks/useContract'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { ethersToBigNumber } from 'utils/bigNumber'\nimport Balance from 'components/Balance'\n\nconst AuctionCakeBurn: React.FC = () => {\n  const [burnedCakeAmount, setBurnedCakeAmount] = useState(0)\n  const { t } = useTranslation()\n  const farmAuctionContract = useFarmAuctionContract()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const burnedAmountAsUSD = cakePriceBusd.times(burnedCakeAmount)\n\n  useEffect(() => {\n    const fetchBurnedCakeAmount = async () => {\n      try {\n        const amount = await farmAuctionContract.totalCollected()\n        const amountAsBN = ethersToBigNumber(amount)\n        setBurnedCakeAmount(getBalanceNumber(amountAsBN))\n      } catch (error) {\n        console.error('Failed to fetch burned auction cake', error)\n      }\n    }\n    if (burnedCakeAmount === 0) {\n      fetchBurnedCakeAmount()\n    }\n  }, [burnedCakeAmount, farmAuctionContract])\n  return (\n    <Flex flexDirection={['column-reverse', null, 'row']}>\n      <Flex flexDirection=\"column\" flex=\"2\">\n        {burnedCakeAmount !== 0 ? (\n          <Balance fontSize=\"64px\" bold value={burnedCakeAmount} decimals={0} unit=\" CAKE\" />\n        ) : (\n          <Skeleton width=\"256px\" height=\"64px\" />\n        )}\n        <Text textTransform=\"uppercase\" fontSize=\"64px\" bold color=\"secondary\">\n          {t('Burned')}\n        </Text>\n        <Text fontSize=\"24px\" bold>\n          {t('through community auctions so far!')}\n        </Text>\n        {!burnedAmountAsUSD.isNaN() && !burnedAmountAsUSD.isZero() ? (\n          <Text color=\"textSubtle\">\n            ~${burnedAmountAsUSD.toNumber().toLocaleString('en', { maximumFractionDigits: 0 })}\n          </Text>\n        ) : (\n          <Skeleton width=\"128px\" />\n        )}\n      </Flex>\n      <Flex flex=\"1\" alignSelf=\"center\">\n        <Box width=\"350px\">\n          <Image width={350} height={320} src=\"/images/burnt-cake.png\" alt={t('Burnt CAKE')} />\n        </Box>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default AuctionCakeBurn\n"]},"metadata":{},"sourceType":"module"}