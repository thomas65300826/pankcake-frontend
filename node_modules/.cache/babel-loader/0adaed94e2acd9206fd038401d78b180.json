{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/pancake-frontend/src/views/Predictions/components/CardFlip.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Front = styled.div`\n  align-items: center;\n  backface-visibility: hidden;\n  display: flex;\n  height: 100%;\n  left: 0;\n  position: absolute;\n  top: 0;\n  transition: z-index 600ms;\n  width: 100%;\n\n  & > div {\n    flex: 1;\n  }\n`;\n_c = Front;\nconst Back = styled(Front)`\n  transform: rotateY(180deg);\n`;\n_c2 = Back;\nconst Inner = styled.div`\n  height: 100%;\n  position: relative;\n  transform: rotateY(${({\n  isFlipped\n}) => isFlipped ? 180 : 0}deg);\n  transform-style: preserve-3d;\n  transition: transform 600ms;\n\n  ${Front} {\n    z-index: ${({\n  isFlipped\n}) => isFlipped ? 5 : 10};\n  }\n\n  ${Back} {\n    z-index: ${({\n  isFlipped\n}) => isFlipped ? 10 : 5};\n  }\n`;\n_c3 = Inner;\nconst StyledCardFlip = styled.div`\n  perspective: 1000px;\n  z-index: auto;\n`;\n_c4 = StyledCardFlip;\n\nconst getComponents = children => {\n  if (children.length !== 2) {\n    throw new Error('CardFlip: Two children are required');\n  }\n\n  return children;\n};\n\nconst CardFlip = ({\n  isFlipped,\n  height,\n  children\n}) => {\n  const [front, back] = getComponents(children);\n  return /*#__PURE__*/_jsxDEV(StyledCardFlip, {\n    style: {\n      height\n    },\n    children: /*#__PURE__*/_jsxDEV(Inner, {\n      isFlipped: isFlipped,\n      children: [/*#__PURE__*/_jsxDEV(Front, {\n        children: front\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Back, {\n        children: back\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = CardFlip;\nexport default CardFlip;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Front\");\n$RefreshReg$(_c2, \"Back\");\n$RefreshReg$(_c3, \"Inner\");\n$RefreshReg$(_c4, \"StyledCardFlip\");\n$RefreshReg$(_c5, \"CardFlip\");","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/src/views/Predictions/components/CardFlip.tsx"],"names":["React","styled","Front","div","Back","Inner","isFlipped","StyledCardFlip","getComponents","children","length","Error","CardFlip","height","front","back"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAQA,MAAMC,KAAK,GAAGD,MAAM,CAACE,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;KAAMD,K;AAgBN,MAAME,IAAI,GAAGH,MAAM,CAACC,KAAD,CAAQ;AAC3B;AACA,CAFA;MAAME,I;AAIN,MAAMC,KAAK,GAAGJ,MAAM,CAACE,GAA+C;AACpE;AACA;AACA,uBAAuB,CAAC;AAAEG,EAAAA;AAAF,CAAD,KAAoBA,SAAS,GAAG,GAAH,GAAS,CAAG;AAChE;AACA;AACA;AACA,IAAIJ,KAAM;AACV,eAAe,CAAC;AAAEI,EAAAA;AAAF,CAAD,KAAoBA,SAAS,GAAG,CAAH,GAAO,EAAI;AACvD;AACA;AACA,IAAIF,IAAK;AACT,eAAe,CAAC;AAAEE,EAAAA;AAAF,CAAD,KAAoBA,SAAS,GAAG,EAAH,GAAQ,CAAG;AACvD;AACA,CAdA;MAAMD,K;AAgBN,MAAME,cAAc,GAAGN,MAAM,CAACE,GAAI;AAClC;AACA;AACA,CAHA;MAAMI,c;;AAKN,MAAMC,aAAa,GAAIC,QAAD,IAAyC;AAC7D,MAAIA,QAAQ,CAACC,MAAT,KAAoB,CAAxB,EAA2B;AACzB,UAAM,IAAIC,KAAJ,CAAU,qCAAV,CAAN;AACD;;AAED,SAAOF,QAAP;AACD,CAND;;AAQA,MAAMG,QAAiC,GAAG,CAAC;AAAEN,EAAAA,SAAF;AAAaO,EAAAA,MAAb;AAAqBJ,EAAAA;AAArB,CAAD,KAAqC;AAC7E,QAAM,CAACK,KAAD,EAAQC,IAAR,IAAgBP,aAAa,CAACC,QAAD,CAAnC;AAEA,sBACE,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAE;AAAEI,MAAAA;AAAF,KAAvB;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEP,SAAlB;AAAA,8BACE,QAAC,KAAD;AAAA,kBAAQQ;AAAR;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAA,kBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAXD;;MAAMH,Q;AAaN,eAAeA,QAAf","sourcesContent":["import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\ninterface CardFlipProps {\n  isFlipped: boolean\n  height: string\n  children: [ReactNode, ReactNode]\n}\n\nconst Front = styled.div`\n  align-items: center;\n  backface-visibility: hidden;\n  display: flex;\n  height: 100%;\n  left: 0;\n  position: absolute;\n  top: 0;\n  transition: z-index 600ms;\n  width: 100%;\n\n  & > div {\n    flex: 1;\n  }\n`\n\nconst Back = styled(Front)`\n  transform: rotateY(180deg);\n`\n\nconst Inner = styled.div<{ isFlipped: CardFlipProps['isFlipped'] }>`\n  height: 100%;\n  position: relative;\n  transform: rotateY(${({ isFlipped }) => (isFlipped ? 180 : 0)}deg);\n  transform-style: preserve-3d;\n  transition: transform 600ms;\n\n  ${Front} {\n    z-index: ${({ isFlipped }) => (isFlipped ? 5 : 10)};\n  }\n\n  ${Back} {\n    z-index: ${({ isFlipped }) => (isFlipped ? 10 : 5)};\n  }\n`\n\nconst StyledCardFlip = styled.div`\n  perspective: 1000px;\n  z-index: auto;\n`\n\nconst getComponents = (children: CardFlipProps['children']) => {\n  if (children.length !== 2) {\n    throw new Error('CardFlip: Two children are required')\n  }\n\n  return children\n}\n\nconst CardFlip: React.FC<CardFlipProps> = ({ isFlipped, height, children }) => {\n  const [front, back] = getComponents(children)\n\n  return (\n    <StyledCardFlip style={{ height }}>\n      <Inner isFlipped={isFlipped}>\n        <Front>{front}</Front>\n        <Back>{back}</Back>\n      </Inner>\n    </StyledCardFlip>\n  )\n}\n\nexport default CardFlip\n"]},"metadata":{},"sourceType":"module"}