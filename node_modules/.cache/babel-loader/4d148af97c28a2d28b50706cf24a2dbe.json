{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/pancake-frontend/pankcake-frontend/src/views/Farms/components/FarmTable/Farm.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useFarmUser } from 'state/farms/hooks';\nimport { useTranslation } from 'contexts/Localization';\nimport { Text } from '@pancakeswap/uikit';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { TokenPairImage } from 'components/TokenImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`;\n_c = Container;\nconst TokenWrapper = styled.div`\n  padding-right: 8px;\n  width: 24px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    width: 40px;\n  }\n`;\n_c2 = TokenWrapper;\n\nconst Farm = ({\n  token,\n  quoteToken,\n  label,\n  pid\n}) => {\n  _s();\n\n  const {\n    stakedBalance\n  } = useFarmUser(pid);\n  const {\n    t\n  } = useTranslation();\n  const rawStakedBalance = getBalanceNumber(stakedBalance);\n\n  const handleRenderFarming = () => {\n    if (rawStakedBalance) {\n      return /*#__PURE__*/_jsxDEV(Text, {\n        color: \"secondary\",\n        fontSize: \"12px\",\n        bold: true,\n        textTransform: \"uppercase\",\n        children: t('Farming')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this);\n    }\n\n    return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(TokenWrapper, {\n      children: /*#__PURE__*/_jsxDEV(TokenPairImage, {\n        variant: \"inverted\",\n        primaryToken: token,\n        secondaryToken: quoteToken,\n        width: 40,\n        height: 40\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [handleRenderFarming(), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Farm, \"xjTTvXMRmfO6GvIoCtFKNKpbItM=\", false, function () {\n  return [useFarmUser, useTranslation];\n});\n\n_c3 = Farm;\nexport default Farm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"TokenWrapper\");\n$RefreshReg$(_c3, \"Farm\");","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/pankcake-frontend/src/views/Farms/components/FarmTable/Farm.tsx"],"names":["React","styled","useFarmUser","useTranslation","Text","getBalanceNumber","TokenPairImage","Container","div","theme","mediaQueries","sm","TokenWrapper","Farm","token","quoteToken","label","pid","stakedBalance","t","rawStakedBalance","handleRenderFarming"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AAEA,SAASC,cAAT,QAA+B,uBAA/B;;AASA,MAAMC,SAAS,GAAGN,MAAM,CAACO,GAAI;AAC7B;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA,CARA;KAAMJ,S;AAUN,MAAMK,YAAY,GAAGX,MAAM,CAACO,GAAI;AAChC;AACA;AACA;AACA,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA,CAPA;MAAMC,Y;;AASN,MAAMC,IAAwC,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,UAAT;AAAqBC,EAAAA,KAArB;AAA4BC,EAAAA;AAA5B,CAAD,KAAuC;AAAA;;AACtF,QAAM;AAAEC,IAAAA;AAAF,MAAoBhB,WAAW,CAACe,GAAD,CAArC;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAQhB,cAAc,EAA5B;AACA,QAAMiB,gBAAgB,GAAGf,gBAAgB,CAACa,aAAD,CAAzC;;AAEA,QAAMG,mBAAmB,GAAG,MAAmB;AAC7C,QAAID,gBAAJ,EAAsB;AACpB,0BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAC,WAAZ;AAAwB,QAAA,QAAQ,EAAC,MAAjC;AAAwC,QAAA,IAAI,MAA5C;AAA6C,QAAA,aAAa,EAAC,WAA3D;AAAA,kBACGD,CAAC,CAAC,SAAD;AADJ;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;AAED,WAAO,IAAP;AACD,GAVD;;AAYA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,YAAD;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAC,UAAxB;AAAmC,QAAA,YAAY,EAAEL,KAAjD;AAAwD,QAAA,cAAc,EAAEC,UAAxE;AAAoF,QAAA,KAAK,EAAE,EAA3F;AAA+F,QAAA,MAAM,EAAE;AAAvG;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,iBACGM,mBAAmB,EADtB,eAEE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,kBAAYL;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA5BD;;GAAMH,I;UACsBX,W,EACZC,c;;;MAFVU,I;AA8BN,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useFarmUser } from 'state/farms/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Token } from 'config/constants/types'\nimport { TokenPairImage } from 'components/TokenImage'\n\nexport interface FarmProps {\n  label: string\n  pid: number\n  token: Token\n  quoteToken: Token\n}\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst TokenWrapper = styled.div`\n  padding-right: 8px;\n  width: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 40px;\n  }\n`\n\nconst Farm: React.FunctionComponent<FarmProps> = ({ token, quoteToken, label, pid }) => {\n  const { stakedBalance } = useFarmUser(pid)\n  const { t } = useTranslation()\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n          {t('Farming')}\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <Container>\n      <TokenWrapper>\n        <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={40} height={40} />\n      </TokenWrapper>\n      <div>\n        {handleRenderFarming()}\n        <Text bold>{label}</Text>\n      </div>\n    </Container>\n  )\n}\n\nexport default Farm\n"]},"metadata":{},"sourceType":"module"}