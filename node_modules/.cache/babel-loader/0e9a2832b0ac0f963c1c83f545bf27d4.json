{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/views/Pools/components/BountyModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport { useWeb3React } from '@web3-react/core';\nimport styled from 'styled-components';\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { useCakeVaultContract } from 'hooks/useContract';\nimport useTheme from 'hooks/useTheme';\nimport useToast from 'hooks/useToast';\nimport { useTranslation } from 'contexts/Localization';\nimport ConnectWalletButton from 'components/ConnectWalletButton';\nimport Balance from 'components/Balance';\nimport { usePriceCakeBusd } from 'state/farms/hooks';\nimport { useCakeVault } from 'state/pools/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Divider = styled.div`\n  background-color: ${({\n  theme\n}) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`;\n_c = Divider;\n\nconst BountyModal = ({\n  onDismiss,\n  TooltipComponent\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n  const {\n    theme\n  } = useTheme();\n  const {\n    toastError,\n    toastSuccess\n  } = useToast();\n  const cakeVaultContract = useCakeVaultContract();\n  const [pendingTx, setPendingTx] = useState(false);\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      callFee\n    }\n  } = useCakeVault();\n  const cakePriceBusd = usePriceCakeBusd();\n  const callFeeAsDecimal = callFee / 100;\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18);\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd);\n  }, [cakePriceBusd, estimatedCakeBountyReward]);\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0);\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false;\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0;\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0;\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip( /*#__PURE__*/_jsxDEV(TooltipComponent, {\n    fee: callFee\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 61\n  }, this), {\n    placement: 'bottom',\n    tooltipPadding: {\n      right: 15\n    }\n  });\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true);\n\n    try {\n      const tx = await cakeVaultContract.harvest({\n        gasLimit: 300000\n      });\n      const receipt = await tx.wait();\n\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('CAKE bounty has been sent to your wallet.'));\n        setPendingTx(false);\n        onDismiss();\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));\n      setPendingTx(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: t('Claim Bounty'),\n    onDismiss: onDismiss,\n    headerBackground: theme.colors.gradients.cardHeader,\n    children: [tooltipVisible && tooltip, /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"flex-start\",\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: t('You’ll claim')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        flexDirection: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(Balance, {\n          bold: true,\n          value: cakeBountyToDisplay,\n          decimals: 7,\n          unit: \" CAKE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          color: \"textSubtle\",\n          children: /*#__PURE__*/_jsxDEV(Balance, {\n            fontSize: \"12px\",\n            color: \"textSubtle\",\n            value: dollarBountyToDisplay,\n            decimals: 2,\n            unit: \" USD\",\n            prefix: \"~\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"14px\",\n        color: \"textSubtle\",\n        children: t('Pool total pending yield')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Balance, {\n        color: \"textSubtle\",\n        value: totalYieldToDisplay,\n        unit: \" CAKE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      mb: \"24px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"14px\",\n        color: \"textSubtle\",\n        children: t('Bounty')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"14px\",\n        color: \"textSubtle\",\n        children: [callFeeAsDecimal, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), account ? /*#__PURE__*/_jsxDEV(Button, {\n      isLoading: pendingTx,\n      disabled: !dollarBountyToDisplay || !cakeBountyToDisplay || !callFee,\n      endIcon: pendingTx ? /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n        spin: true,\n        color: \"currentColor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 32\n      }, this) : null,\n      onClick: handleConfirmClick,\n      mb: \"28px\",\n      id: \"autoCakeConfirmBounty\",\n      children: pendingTx ? t('Confirming') : t('Confirm')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ConnectWalletButton, {\n      mb: \"28px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"16px\",\n        bold: true,\n        color: \"textSubtle\",\n        mr: \"4px\",\n        children: t('What’s this?')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        ref: targetRef,\n        children: /*#__PURE__*/_jsxDEV(HelpIcon, {\n          color: \"textSubtle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BountyModal, \"wBGptB74zR2dl0VW1sITmz06MiQ=\", false, function () {\n  return [useTranslation, useWeb3React, useTheme, useToast, useCakeVaultContract, useCakeVault, usePriceCakeBusd, useTooltip];\n});\n\n_c2 = BountyModal;\nexport default BountyModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Divider\");\n$RefreshReg$(_c2, \"BountyModal\");","map":{"version":3,"sources":["/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/views/Pools/components/BountyModal.tsx"],"names":["React","useMemo","useState","BigNumber","useWeb3React","styled","Modal","Text","Flex","Button","HelpIcon","AutoRenewIcon","useTooltip","getBalanceNumber","useCakeVaultContract","useTheme","useToast","useTranslation","ConnectWalletButton","Balance","usePriceCakeBusd","useCakeVault","Divider","div","theme","colors","backgroundDisabled","BountyModal","onDismiss","TooltipComponent","t","account","toastError","toastSuccess","cakeVaultContract","pendingTx","setPendingTx","estimatedCakeBountyReward","totalPendingCakeHarvest","fees","callFee","cakePriceBusd","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","multipliedBy","hasFetchedDollarBounty","gte","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","targetRef","tooltip","tooltipVisible","placement","tooltipPadding","right","handleConfirmClick","tx","harvest","gasLimit","receipt","wait","status","error","gradients","cardHeader"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Balance from 'components/Balance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await cakeVaultContract.harvest({ gasLimit: 300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('CAKE bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" CAKE\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" CAKE\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n          id=\"autoCakeConfirmBounty\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <ConnectWalletButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n"]},"metadata":{},"sourceType":"module"}