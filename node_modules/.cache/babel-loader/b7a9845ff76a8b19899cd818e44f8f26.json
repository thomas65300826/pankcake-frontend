{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/pancake-frontend/pankcake-frontend/src/views/Profile/components/AchievementTitle.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Text } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AchievementTitle = ({\n  title,\n  ...props\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n\n  if (typeof title === 'string') {\n    return /*#__PURE__*/_jsxDEV(Text, {\n      bold: true,\n      ...props,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n  const {\n    key,\n    data = {}\n  } = title;\n  return /*#__PURE__*/_jsxDEV(Text, {\n    bold: true,\n    ...props,\n    children: t(key, data)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AchievementTitle, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = AchievementTitle;\nexport default AchievementTitle;\n\nvar _c;\n\n$RefreshReg$(_c, \"AchievementTitle\");","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/pankcake-frontend/src/views/Profile/components/AchievementTitle.tsx"],"names":["React","Text","useTranslation","AchievementTitle","title","props","t","key","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAgC,oBAAhC;AACA,SAASC,cAAT,QAA+B,uBAA/B;;;AAOA,MAAMC,gBAAiD,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAAD,KAAyB;AAAA;;AACjF,QAAM;AAAEC,IAAAA;AAAF,MAAQJ,cAAc,EAA5B;;AAEA,MAAI,OAAOE,KAAP,KAAiB,QAArB,EAA+B;AAC7B,wBACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA,SAAeC,KAAf;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,QAAM;AAAEG,IAAAA,GAAF;AAAOC,IAAAA,IAAI,GAAG;AAAd,MAAqBJ,KAA3B;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA,OAAeC,KAAf;AAAA,cACGC,CAAC,CAACC,GAAD,EAAMC,IAAN;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAlBD;;GAAML,gB;UACUD,c;;;KADVC,gB;AAoBN,eAAeA,gBAAf","sourcesContent":["import React from 'react'\nimport { Text, TextProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { TranslatableText as AchievementTitleType } from 'state/types'\n\ninterface AchievementTitleProps extends TextProps {\n  title: AchievementTitleType\n}\n\nconst AchievementTitle: React.FC<AchievementTitleProps> = ({ title, ...props }) => {\n  const { t } = useTranslation()\n\n  if (typeof title === 'string') {\n    return (\n      <Text bold {...props}>\n        {title}\n      </Text>\n    )\n  }\n\n  const { key, data = {} } = title\n\n  return (\n    <Text bold {...props}>\n      {t(key, data)}\n    </Text>\n  )\n}\n\nexport default AchievementTitle\n"]},"metadata":{},"sourceType":"module"}