{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/pancake-frontend/src/views/Ifos/components/IfoFoldableCard/IfoPoolCard/IfoCardActions.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTranslation } from 'contexts/Localization';\nimport { Button } from '@pancakeswap/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { Link } from 'react-router-dom';\nimport ConnectWalletButton from 'components/ConnectWalletButton';\nimport ContributeButton from './ContributeButton';\nimport ClaimButton from './ClaimButton';\nimport { SkeletonCardActions } from './Skeletons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst IfoCardActions = ({\n  poolId,\n  ifo,\n  publicIfoData,\n  walletIfoData,\n  hasProfile,\n  isLoading\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n  const userPoolCharacteristics = walletIfoData[poolId];\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(SkeletonCardActions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!account) {\n    return /*#__PURE__*/_jsxDEV(ConnectWalletButton, {\n      width: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!hasProfile) {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      as: Link,\n      to: \"/profile\",\n      width: \"100%\",\n      children: t('Activate your Profile')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [publicIfoData.status === 'live' && /*#__PURE__*/_jsxDEV(ContributeButton, {\n      poolId: poolId,\n      ifo: ifo,\n      publicIfoData: publicIfoData,\n      walletIfoData: walletIfoData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), publicIfoData.status === 'finished' && !userPoolCharacteristics.hasClaimed && (userPoolCharacteristics.offeringAmountInToken.isGreaterThan(0) || userPoolCharacteristics.refundingAmountInLP.isGreaterThan(0)) && /*#__PURE__*/_jsxDEV(ClaimButton, {\n      poolId: poolId,\n      ifoVersion: ifo.version,\n      walletIfoData: walletIfoData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(IfoCardActions, \"BMrHDyyq4uC6OiQr4QtbrPp+6H8=\", false, function () {\n  return [useTranslation, useWeb3React];\n});\n\n_c = IfoCardActions;\nexport default IfoCardActions;\n\nvar _c;\n\n$RefreshReg$(_c, \"IfoCardActions\");","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/src/views/Ifos/components/IfoFoldableCard/IfoPoolCard/IfoCardActions.tsx"],"names":["React","useTranslation","Button","useWeb3React","Link","ConnectWalletButton","ContributeButton","ClaimButton","SkeletonCardActions","IfoCardActions","poolId","ifo","publicIfoData","walletIfoData","hasProfile","isLoading","t","account","userPoolCharacteristics","status","hasClaimed","offeringAmountInToken","isGreaterThan","refundingAmountInLP","version"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;AAGA,OAAOC,mBAAP,MAAgC,gCAAhC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,mBAAT,QAAoC,aAApC;;;;AAWA,MAAMC,cAA+B,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,GAAV;AAAeC,EAAAA,aAAf;AAA8BC,EAAAA,aAA9B;AAA6CC,EAAAA,UAA7C;AAAyDC,EAAAA;AAAzD,CAAD,KAA0E;AAAA;;AAChH,QAAM;AAAEC,IAAAA;AAAF,MAAQf,cAAc,EAA5B;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAcd,YAAY,EAAhC;AACA,QAAMe,uBAAuB,GAAGL,aAAa,CAACH,MAAD,CAA7C;;AAEA,MAAIK,SAAJ,EAAe;AACb,wBAAO,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAI,CAACE,OAAL,EAAc;AACZ,wBAAO,QAAC,mBAAD;AAAqB,MAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAI,CAACH,UAAL,EAAiB;AACf,wBACE,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAEV,IAAZ;AAAkB,MAAA,EAAE,EAAC,UAArB;AAAgC,MAAA,KAAK,EAAC,MAAtC;AAAA,gBACGY,CAAC,CAAC,uBAAD;AADJ;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE;AAAA,eACGJ,aAAa,CAACO,MAAd,KAAyB,MAAzB,iBACC,QAAC,gBAAD;AAAkB,MAAA,MAAM,EAAET,MAA1B;AAAkC,MAAA,GAAG,EAAEC,GAAvC;AAA4C,MAAA,aAAa,EAAEC,aAA3D;AAA0E,MAAA,aAAa,EAAEC;AAAzF;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIGD,aAAa,CAACO,MAAd,KAAyB,UAAzB,IACC,CAACD,uBAAuB,CAACE,UAD1B,KAEEF,uBAAuB,CAACG,qBAAxB,CAA8CC,aAA9C,CAA4D,CAA5D,KACCJ,uBAAuB,CAACK,mBAAxB,CAA4CD,aAA5C,CAA0D,CAA1D,CAHH,kBAIG,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEZ,MAArB;AAA6B,MAAA,UAAU,EAAEC,GAAG,CAACa,OAA7C;AAAsD,MAAA,aAAa,EAAEX;AAArE;AAAA;AAAA;AAAA;AAAA,YARN;AAAA,kBADF;AAaD,CAlCD;;GAAMJ,c;UACUR,c,EACME,Y;;;KAFhBM,c;AAoCN,eAAeA,cAAf","sourcesContent":["import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Button } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { Link } from 'react-router-dom'\nimport { Ifo, PoolIds } from 'config/constants/types'\nimport { WalletIfoData, PublicIfoData } from 'views/Ifos/types'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport ContributeButton from './ContributeButton'\nimport ClaimButton from './ClaimButton'\nimport { SkeletonCardActions } from './Skeletons'\n\ninterface Props {\n  poolId: PoolIds\n  ifo: Ifo\n  publicIfoData: PublicIfoData\n  walletIfoData: WalletIfoData\n  hasProfile: boolean\n  isLoading: boolean\n}\n\nconst IfoCardActions: React.FC<Props> = ({ poolId, ifo, publicIfoData, walletIfoData, hasProfile, isLoading }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const userPoolCharacteristics = walletIfoData[poolId]\n\n  if (isLoading) {\n    return <SkeletonCardActions />\n  }\n\n  if (!account) {\n    return <ConnectWalletButton width=\"100%\" />\n  }\n\n  if (!hasProfile) {\n    return (\n      <Button as={Link} to=\"/profile\" width=\"100%\">\n        {t('Activate your Profile')}\n      </Button>\n    )\n  }\n\n  return (\n    <>\n      {publicIfoData.status === 'live' && (\n        <ContributeButton poolId={poolId} ifo={ifo} publicIfoData={publicIfoData} walletIfoData={walletIfoData} />\n      )}\n      {publicIfoData.status === 'finished' &&\n        !userPoolCharacteristics.hasClaimed &&\n        (userPoolCharacteristics.offeringAmountInToken.isGreaterThan(0) ||\n          userPoolCharacteristics.refundingAmountInLP.isGreaterThan(0)) && (\n          <ClaimButton poolId={poolId} ifoVersion={ifo.version} walletIfoData={walletIfoData} />\n        )}\n    </>\n  )\n}\n\nexport default IfoCardActions\n"]},"metadata":{},"sourceType":"module"}