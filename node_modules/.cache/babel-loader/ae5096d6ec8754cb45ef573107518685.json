{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/pancake-frontend/src/views/TradingCompetition/components/TeamRanks/index.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Flex, Box, Image } from '@pancakeswap/uikit';\nimport CakerBunny from '../../pngs/cakers.png';\nimport TopTradersCard from './TopTradersCard';\nimport Podium from './Podium';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled(Flex)`\n  flex-direction: column;\n\n  ${({\n  theme\n}) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`;\n_c = Wrapper;\nconst StyledPodiumWrapper = styled(Flex)`\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 40px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.md} {\n    flex: 1;\n    margin-right: 40px;\n    margin-bottom: 0;\n  }\n`;\n_c2 = StyledPodiumWrapper;\nconst BunnyImageWrapper = styled(Box)`\n  display: none;\n\n  ${({\n  theme\n}) => theme.mediaQueries.md} {\n    display: flex;\n    width: 200px;\n    height: 205px;\n  }\n`;\n_c3 = BunnyImageWrapper;\nconst StyledTopTradersWrapper = styled(Flex)`\n  width: 100%;\n\n  ${({\n  theme\n}) => theme.mediaQueries.md} {\n    flex: 2;\n  }\n`;\n_c4 = StyledTopTradersWrapper;\n\nconst TeamRanks = ({\n  team1LeaderboardInformation,\n  team2LeaderboardInformation,\n  team3LeaderboardInformation,\n  globalLeaderboardInformation\n}) => {\n  const isTeamLeaderboardDataComplete = Boolean(team1LeaderboardInformation.leaderboardData && team2LeaderboardInformation.leaderboardData && team3LeaderboardInformation.leaderboardData);\n  const isGlobalLeaderboardDataComplete = Boolean(isTeamLeaderboardDataComplete && globalLeaderboardInformation);\n\n  const getTeamsSortedByVolume = arrayOfTeams => {\n    return arrayOfTeams.sort((teamA, teamB) => teamB.leaderboardData.volume - teamA.leaderboardData.volume);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(StyledPodiumWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Podium, {\n        teamsSortedByVolume: isTeamLeaderboardDataComplete && getTeamsSortedByVolume([team1LeaderboardInformation, team2LeaderboardInformation, team3LeaderboardInformation])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BunnyImageWrapper, {\n        mt: \"24px\",\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: CakerBunny,\n          width: 200,\n          height: 205\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledTopTradersWrapper, {\n      children: /*#__PURE__*/_jsxDEV(TopTradersCard, {\n        team1LeaderboardInformation: team1LeaderboardInformation,\n        team2LeaderboardInformation: team2LeaderboardInformation,\n        team3LeaderboardInformation: team3LeaderboardInformation,\n        globalLeaderboardInformation: globalLeaderboardInformation,\n        isGlobalLeaderboardDataComplete: isGlobalLeaderboardDataComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = TeamRanks;\nexport default TeamRanks;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"StyledPodiumWrapper\");\n$RefreshReg$(_c3, \"BunnyImageWrapper\");\n$RefreshReg$(_c4, \"StyledTopTradersWrapper\");\n$RefreshReg$(_c5, \"TeamRanks\");","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/src/views/TradingCompetition/components/TeamRanks/index.tsx"],"names":["React","styled","Flex","Box","Image","CakerBunny","TopTradersCard","Podium","Wrapper","theme","mediaQueries","md","StyledPodiumWrapper","BunnyImageWrapper","StyledTopTradersWrapper","TeamRanks","team1LeaderboardInformation","team2LeaderboardInformation","team3LeaderboardInformation","globalLeaderboardInformation","isTeamLeaderboardDataComplete","Boolean","leaderboardData","isGlobalLeaderboardDataComplete","getTeamsSortedByVolume","arrayOfTeams","sort","teamA","teamB","volume"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, Image } from '@pancakeswap/uikit'\nimport { TeamRanksProps } from '../../types'\nimport CakerBunny from '../../pngs/cakers.png'\nimport TopTradersCard from './TopTradersCard'\nimport Podium from './Podium'\n\nconst Wrapper = styled(Flex)`\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nconst StyledPodiumWrapper = styled(Flex)`\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 40px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 1;\n    margin-right: 40px;\n    margin-bottom: 0;\n  }\n`\n\nconst BunnyImageWrapper = styled(Box)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: flex;\n    width: 200px;\n    height: 205px;\n  }\n`\n\nconst StyledTopTradersWrapper = styled(Flex)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 2;\n  }\n`\n\nconst TeamRanks: React.FC<TeamRanksProps> = ({\n  team1LeaderboardInformation,\n  team2LeaderboardInformation,\n  team3LeaderboardInformation,\n  globalLeaderboardInformation,\n}) => {\n  const isTeamLeaderboardDataComplete = Boolean(\n    team1LeaderboardInformation.leaderboardData &&\n      team2LeaderboardInformation.leaderboardData &&\n      team3LeaderboardInformation.leaderboardData,\n  )\n\n  const isGlobalLeaderboardDataComplete = Boolean(isTeamLeaderboardDataComplete && globalLeaderboardInformation)\n\n  const getTeamsSortedByVolume = (arrayOfTeams) => {\n    return arrayOfTeams.sort((teamA, teamB) => teamB.leaderboardData.volume - teamA.leaderboardData.volume)\n  }\n\n  return (\n    <Wrapper>\n      <StyledPodiumWrapper>\n        <Podium\n          teamsSortedByVolume={\n            isTeamLeaderboardDataComplete &&\n            getTeamsSortedByVolume([\n              team1LeaderboardInformation,\n              team2LeaderboardInformation,\n              team3LeaderboardInformation,\n            ])\n          }\n        />\n        <BunnyImageWrapper mt=\"24px\">\n          <Image src={CakerBunny} width={200} height={205} />\n        </BunnyImageWrapper>\n      </StyledPodiumWrapper>\n      <StyledTopTradersWrapper>\n        <TopTradersCard\n          team1LeaderboardInformation={team1LeaderboardInformation}\n          team2LeaderboardInformation={team2LeaderboardInformation}\n          team3LeaderboardInformation={team3LeaderboardInformation}\n          globalLeaderboardInformation={globalLeaderboardInformation}\n          isGlobalLeaderboardDataComplete={isGlobalLeaderboardDataComplete}\n        />\n      </StyledTopTradersWrapper>\n    </Wrapper>\n  )\n}\n\nexport default TeamRanks\n"]},"metadata":{},"sourceType":"module"}