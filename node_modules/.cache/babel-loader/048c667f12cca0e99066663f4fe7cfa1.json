{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/views/FarmAuction/components/AuctionDetailsCard/AuctionSchedule.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { format } from 'date-fns';\nimport { Text, Flex, Box } from '@pancakeswap/uikit';\nimport { AuctionStatus } from 'config/constants/types';\nimport { useTranslation } from 'contexts/Localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ScheduleInner = styled(Flex)`\n  flex-direction: column;\n  padding: 16px;\n  border-radius: ${({\n  theme\n}) => theme.radii.default};\n  background-color: ${({\n  theme\n}) => theme.colors.background};\n  border: 1px ${({\n  theme\n}) => theme.colors.cardBorder} solid;\n`;\n_c = ScheduleInner;\nexport const AuctionSchedule = ({\n  auction\n}) => {\n  _s();\n\n  const {\n    startBlock,\n    endBlock,\n    auctionDuration,\n    startDate,\n    endDate,\n    status\n  } = auction;\n  const {\n    t\n  } = useTranslation();\n  const noLiveOrPendingAuction = status === AuctionStatus.ToBeAnnounced || status === AuctionStatus.Closed;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"12px\",\n      bold: true,\n      color: \"secondary\",\n      textTransform: \"uppercase\",\n      mb: \"8px\",\n      children: t('Auction Schedule')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScheduleInner, {\n      children: [!noLiveOrPendingAuction && /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        mb: \"8px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          color: \"textSubtle\",\n          children: t('Auction duration')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          children: t('%numHours% hours', {\n            numHours: `~${auctionDuration.toString()}`\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        mb: \"8px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          color: \"textSubtle\",\n          children: t('Start')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), noLiveOrPendingAuction ? /*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          children: t('To be announced')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            small: true,\n            children: format(startDate, 'MMMM dd yyyy hh:mm aa')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            small: true,\n            textAlign: \"right\",\n            children: t('Block %num%', {\n              num: startBlock\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          color: \"textSubtle\",\n          children: t('End')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), noLiveOrPendingAuction ? /*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          children: t('To be announced')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            small: true,\n            children: format(endDate, 'MMMM dd yyyy hh:mm aa')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            small: true,\n            textAlign: \"right\",\n            children: t('Block %num%', {\n              num: endBlock\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AuctionSchedule, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c2 = AuctionSchedule;\nexport const FarmSchedule = ({\n  auction,\n  showForClosedAuction\n}) => {\n  _s2();\n\n  const {\n    status,\n    farmStartBlock,\n    farmEndBlock,\n    farmStartDate,\n    farmEndDate\n  } = auction;\n  const {\n    t\n  } = useTranslation();\n  let scheduleToBeAnnounced = status === AuctionStatus.ToBeAnnounced || status === AuctionStatus.Closed; // Schedule for closed auction is shown in congratulation card but not shown in Next Auction card\n\n  if (showForClosedAuction) {\n    scheduleToBeAnnounced = false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    flexDirection: \"column\",\n    mt: \"24px\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      textTransform: \"uppercase\",\n      color: \"secondary\",\n      bold: true,\n      fontSize: \"12px\",\n      mb: \"8px\",\n      children: t('Farm schedule')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScheduleInner, {\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        mb: \"8px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          color: \"textSubtle\",\n          children: t('Farm duration')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          children: t('%num% days', {\n            num: 7\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        mb: \"8px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          color: \"textSubtle\",\n          children: t('Start')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), scheduleToBeAnnounced ? /*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          children: t('To be announced')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            small: true,\n            children: format(farmStartDate, 'MMMM dd yyyy hh:mm aa')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            small: true,\n            textAlign: \"right\",\n            children: t('Block %num%', {\n              num: farmStartBlock\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          color: \"textSubtle\",\n          children: t('End')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), scheduleToBeAnnounced ? /*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          children: t('To be announced')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            small: true,\n            children: format(farmEndDate, 'MMMM dd yyyy hh:mm aa')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            small: true,\n            textAlign: \"right\",\n            children: t('Block %num%', {\n              num: farmEndBlock\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(FarmSchedule, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c3 = FarmSchedule;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ScheduleInner\");\n$RefreshReg$(_c2, \"AuctionSchedule\");\n$RefreshReg$(_c3, \"FarmSchedule\");","map":{"version":3,"sources":["/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/views/FarmAuction/components/AuctionDetailsCard/AuctionSchedule.tsx"],"names":["React","styled","format","Text","Flex","Box","AuctionStatus","useTranslation","ScheduleInner","theme","radii","default","colors","background","cardBorder","AuctionSchedule","auction","startBlock","endBlock","auctionDuration","startDate","endDate","status","t","noLiveOrPendingAuction","ToBeAnnounced","Closed","numHours","toString","num","FarmSchedule","showForClosedAuction","farmStartBlock","farmEndBlock","farmStartDate","farmEndDate","scheduleToBeAnnounced"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\nimport { Text, Flex, Box } from '@pancakeswap/uikit'\nimport { Auction, AuctionStatus } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ScheduleInner = styled(Flex)`\n  flex-direction: column;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  background-color: ${({ theme }) => theme.colors.background};\n  border: 1px ${({ theme }) => theme.colors.cardBorder} solid;\n`\n\ninterface ScheduleProps {\n  auction: Auction\n  showForClosedAuction?: boolean\n}\n\nexport const AuctionSchedule: React.FC<ScheduleProps> = ({ auction }) => {\n  const { startBlock, endBlock, auctionDuration, startDate, endDate, status } = auction\n  const { t } = useTranslation()\n\n  const noLiveOrPendingAuction = status === AuctionStatus.ToBeAnnounced || status === AuctionStatus.Closed\n\n  return (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"8px\">\n        {t('Auction Schedule')}\n      </Text>\n      <ScheduleInner>\n        {!noLiveOrPendingAuction && (\n          <Flex justifyContent=\"space-between\" mb=\"8px\">\n            <Text small color=\"textSubtle\">\n              {t('Auction duration')}\n            </Text>\n            <Text small>{t('%numHours% hours', { numHours: `~${auctionDuration.toString()}` })}</Text>\n          </Flex>\n        )}\n        <Flex justifyContent=\"space-between\" mb=\"8px\">\n          <Text small color=\"textSubtle\">\n            {t('Start')}\n          </Text>\n          {noLiveOrPendingAuction ? (\n            <Text small>{t('To be announced')}</Text>\n          ) : (\n            <Box>\n              <Text small>{format(startDate, 'MMMM dd yyyy hh:mm aa')}</Text>\n              <Text small textAlign=\"right\">\n                {t('Block %num%', { num: startBlock })}\n              </Text>\n            </Box>\n          )}\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <Text small color=\"textSubtle\">\n            {t('End')}\n          </Text>\n          {noLiveOrPendingAuction ? (\n            <Text small>{t('To be announced')}</Text>\n          ) : (\n            <Box>\n              <Text small>{format(endDate, 'MMMM dd yyyy hh:mm aa')}</Text>\n              <Text small textAlign=\"right\">\n                {t('Block %num%', { num: endBlock })}\n              </Text>\n            </Box>\n          )}\n        </Flex>\n      </ScheduleInner>\n    </>\n  )\n}\n\nexport const FarmSchedule: React.FC<ScheduleProps> = ({ auction, showForClosedAuction }) => {\n  const { status, farmStartBlock, farmEndBlock, farmStartDate, farmEndDate } = auction\n  const { t } = useTranslation()\n\n  let scheduleToBeAnnounced = status === AuctionStatus.ToBeAnnounced || status === AuctionStatus.Closed\n  // Schedule for closed auction is shown in congratulation card but not shown in Next Auction card\n  if (showForClosedAuction) {\n    scheduleToBeAnnounced = false\n  }\n\n  return (\n    <Flex flexDirection=\"column\" mt=\"24px\">\n      <Text textTransform=\"uppercase\" color=\"secondary\" bold fontSize=\"12px\" mb=\"8px\">\n        {t('Farm schedule')}\n      </Text>\n      <ScheduleInner>\n        <Flex justifyContent=\"space-between\" mb=\"8px\">\n          <Text small color=\"textSubtle\">\n            {t('Farm duration')}\n          </Text>\n          <Text small>{t('%num% days', { num: 7 })}</Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\" mb=\"8px\">\n          <Text small color=\"textSubtle\">\n            {t('Start')}\n          </Text>\n          {scheduleToBeAnnounced ? (\n            <Text small>{t('To be announced')}</Text>\n          ) : (\n            <Box>\n              <Text small>{format(farmStartDate, 'MMMM dd yyyy hh:mm aa')}</Text>\n              <Text small textAlign=\"right\">\n                {t('Block %num%', { num: farmStartBlock })}\n              </Text>\n            </Box>\n          )}\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <Text small color=\"textSubtle\">\n            {t('End')}\n          </Text>\n          {scheduleToBeAnnounced ? (\n            <Text small>{t('To be announced')}</Text>\n          ) : (\n            <Box>\n              <Text small>{format(farmEndDate, 'MMMM dd yyyy hh:mm aa')}</Text>\n              <Text small textAlign=\"right\">\n                {t('Block %num%', { num: farmEndBlock })}\n              </Text>\n            </Box>\n          )}\n        </Flex>\n      </ScheduleInner>\n    </Flex>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}