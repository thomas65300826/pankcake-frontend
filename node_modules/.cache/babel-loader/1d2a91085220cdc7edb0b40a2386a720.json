{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/pancake-frontend/src/components/SearchModal/ManageTokens.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useCallback, useState, useMemo } from 'react';\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit';\nimport styled from 'styled-components';\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row';\nimport { useToken } from 'hooks/Tokens';\nimport { useRemoveUserAddedToken } from 'state/user/hooks';\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens';\nimport { CurrencyLogo } from 'components/Logo';\nimport { getBscScanLink, isAddress } from 'utils';\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\nimport { useTranslation } from 'contexts/Localization';\nimport Column, { AutoColumn } from '../Layout/Column';\nimport ImportRow from './ImportRow';\nimport { CurrencyModalView } from './types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`;\n_c = Wrapper;\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n_c2 = Footer;\nexport default function ManageTokens({\n  setModalView,\n  setImportToken\n}) {\n  _s();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const [searchQuery, setSearchQuery] = useState(''); // manage focus on modal show\n\n  const inputRef = useRef();\n  const handleInput = useCallback(event => {\n    const input = event.target.value;\n    const checksummedInput = isAddress(input);\n    setSearchQuery(checksummedInput || input);\n  }, []); // if they input an address, use it\n\n  const searchToken = useToken(searchQuery); // all tokens for local lisr\n\n  const userAddedTokens = useUserAddedTokens();\n  const removeToken = useRemoveUserAddedToken();\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map(token => {\n        return removeToken(chainId, token.address);\n      });\n    }\n  }, [removeToken, userAddedTokens, chainId]);\n  const tokenList = useMemo(() => {\n    return chainId && userAddedTokens.map(token => /*#__PURE__*/_jsxDEV(RowBetween, {\n      width: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n          currency: token,\n          size: \"20px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          external: true,\n          href: getBscScanLink(token.address, 'address', chainId),\n          color: \"textSubtle\",\n          ml: \"10px\",\n          children: token.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          variant: \"text\",\n          onClick: () => removeToken(chainId, token.address),\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LinkExternal, {\n          href: getBscScanLink(token.address, 'address', chainId)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, token.address, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this));\n  }, [userAddedTokens, chainId, removeToken]);\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Column, {\n      style: {\n        width: '100%',\n        flex: '1 1'\n      },\n      children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"14px\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            id: \"token-search-input\",\n            scale: \"lg\",\n            placeholder: \"0x0000\",\n            value: searchQuery,\n            autoComplete: \"off\",\n            ref: inputRef,\n            onChange: handleInput,\n            isWarning: !isAddressValid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), !isAddressValid && /*#__PURE__*/_jsxDEV(Text, {\n          color: \"failure\",\n          children: t('Enter valid token address')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 31\n        }, this), searchToken && /*#__PURE__*/_jsxDEV(ImportRow, {\n          token: searchToken,\n          showImportView: () => setModalView(CurrencyModalView.importToken),\n          setImportToken: setImportToken,\n          style: {\n            height: 'fit-content'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), tokenList, /*#__PURE__*/_jsxDEV(Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          color: \"textSubtle\",\n          children: [userAddedTokens === null || userAddedTokens === void 0 ? void 0 : userAddedTokens.length, \" \", userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), userAddedTokens.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"tertiary\",\n          onClick: handleRemoveAll,\n          children: t('Clear all')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ManageTokens, \"F8DS3TIVIQUTUT2ZCN+ay56k8XM=\", false, function () {\n  return [useActiveWeb3React, useTranslation, useToken, useUserAddedTokens, useRemoveUserAddedToken];\n});\n\n_c3 = ManageTokens;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Footer\");\n$RefreshReg$(_c3, \"ManageTokens\");","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/src/components/SearchModal/ManageTokens.tsx"],"names":["React","useRef","useCallback","useState","useMemo","Text","Button","CloseIcon","IconButton","LinkExternal","Input","Link","styled","Row","RowBetween","RowFixed","useToken","useRemoveUserAddedToken","useUserAddedTokens","CurrencyLogo","getBscScanLink","isAddress","useActiveWeb3React","useTranslation","Column","AutoColumn","ImportRow","CurrencyModalView","Wrapper","div","Footer","ManageTokens","setModalView","setImportToken","chainId","t","searchQuery","setSearchQuery","inputRef","handleInput","event","input","target","value","checksummedInput","searchToken","userAddedTokens","removeToken","handleRemoveAll","map","token","address","tokenList","symbol","isAddressValid","width","flex","importToken","height","length"],"mappings":"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","sourcesContent":["import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}