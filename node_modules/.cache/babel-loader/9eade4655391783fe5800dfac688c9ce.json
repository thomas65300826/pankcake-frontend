{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/pancake-frontend/pankcake-frontend/src/views/Farms/components/ToggleView/ToggleView.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit';\nimport { ViewMode } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  margin-left: -8px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    margin-left: 0;\n  }\n`;\n_c = Container;\n\nconst ToggleView = ({\n  viewMode,\n  onToggle\n}) => {\n  const handleToggle = mode => {\n    if (viewMode !== mode) {\n      onToggle(mode);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      variant: \"text\",\n      scale: \"sm\",\n      id: \"clickFarmCardView\",\n      onClick: () => handleToggle(ViewMode.CARD),\n      children: /*#__PURE__*/_jsxDEV(CardViewIcon, {\n        color: viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      variant: \"text\",\n      scale: \"sm\",\n      id: \"clickFarmTableView\",\n      onClick: () => handleToggle(ViewMode.TABLE),\n      children: /*#__PURE__*/_jsxDEV(ListViewIcon, {\n        color: viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = ToggleView;\nexport default ToggleView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ToggleView\");","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/pankcake-frontend/src/views/Farms/components/ToggleView/ToggleView.tsx"],"names":["React","styled","ListViewIcon","CardViewIcon","IconButton","ViewMode","Container","div","theme","mediaQueries","sm","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,UAArC,QAAuD,oBAAvD;AACA,SAASC,QAAT,QAAyB,UAAzB;;AAOA,MAAMC,SAAS,GAAGL,MAAM,CAACM,GAAI;AAC7B;AACA;AACA,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA,CANA;KAAMJ,S;;AAQN,MAAMK,UAAoD,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA4B;AACvF,QAAMC,YAAY,GAAIC,IAAD,IAAoB;AACvC,QAAIH,QAAQ,KAAKG,IAAjB,EAAuB;AACrBF,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD;AACF,GAJD;;AAMA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,MAApB;AAA2B,MAAA,KAAK,EAAC,IAAjC;AAAsC,MAAA,EAAE,EAAC,mBAAzC;AAA6D,MAAA,OAAO,EAAE,MAAMD,YAAY,CAACT,QAAQ,CAACW,IAAV,CAAxF;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAEJ,QAAQ,KAAKP,QAAQ,CAACW,IAAtB,GAA6B,SAA7B,GAAyC;AAA9D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,MAApB;AAA2B,MAAA,KAAK,EAAC,IAAjC;AAAsC,MAAA,EAAE,EAAC,oBAAzC;AAA8D,MAAA,OAAO,EAAE,MAAMF,YAAY,CAACT,QAAQ,CAACY,KAAV,CAAzF;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAEL,QAAQ,KAAKP,QAAQ,CAACY,KAAtB,GAA8B,SAA9B,GAA0C;AAA/D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAjBD;;MAAMN,U;AAmBN,eAAeA,UAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\nimport { ViewMode } from '../types'\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickFarmCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickFarmTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n"]},"metadata":{},"sourceType":"module"}