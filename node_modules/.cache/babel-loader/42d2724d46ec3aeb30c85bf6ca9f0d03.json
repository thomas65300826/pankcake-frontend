{"ast":null,"code":"// Predictions\n// Chainlink Orance\n// Farm Auction\n// Note: slightly different from AuctionStatus used thoughout UI\nexport let FarmAuctionContractStatus;\n\n(function (FarmAuctionContractStatus) {\n  FarmAuctionContractStatus[FarmAuctionContractStatus[\"Pending\"] = 0] = \"Pending\";\n  FarmAuctionContractStatus[FarmAuctionContractStatus[\"Open\"] = 1] = \"Open\";\n  FarmAuctionContractStatus[FarmAuctionContractStatus[\"Close\"] = 2] = \"Close\";\n})(FarmAuctionContractStatus || (FarmAuctionContractStatus = {}));","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/src/utils/types.ts"],"names":["FarmAuctionContractStatus"],"mappings":"AAIA;AAiCA;AAOA;AAEA;AACA,WAAYA,yBAAZ;;WAAYA,yB;AAAAA,EAAAA,yB,CAAAA,yB;AAAAA,EAAAA,yB,CAAAA,yB;AAAAA,EAAAA,yB,CAAAA,yB;GAAAA,yB,KAAAA,yB","sourcesContent":["import ethers, { Contract, ContractFunction } from 'ethers'\n\nexport type MultiCallResponse<T> = T | null\n\n// Predictions\nexport type PredictionsClaimableResponse = boolean\n\nexport interface PredictionsLedgerResponse {\n  position: 0 | 1\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport type PredictionsRefundableResponse = boolean\n\nexport interface PredictionsRoundsResponse {\n  epoch: ethers.BigNumber\n  startBlock: ethers.BigNumber\n  lockBlock: ethers.BigNumber\n  endBlock: ethers.BigNumber\n  lockPrice: ethers.BigNumber\n  closePrice: ethers.BigNumber\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n}\n\nexport interface PredictionsContract extends Contract {\n  claimable: ContractFunction<PredictionsClaimableResponse>\n  ledger: ContractFunction<PredictionsLedgerResponse>\n  refundable: ContractFunction<PredictionsRefundableResponse>\n  rounds: ContractFunction<PredictionsRoundsResponse>\n}\n\n// Chainlink Orance\nexport type ChainLinkOracleLatestAnswerResponse = ethers.BigNumber\n\nexport interface ChainLinkOracleContract extends Contract {\n  latestAnswer: ContractFunction<ChainLinkOracleLatestAnswerResponse>\n}\n\n// Farm Auction\n\n// Note: slightly different from AuctionStatus used thoughout UI\nexport enum FarmAuctionContractStatus {\n  Pending,\n  Open,\n  Close,\n}\n\nexport interface AuctionsResponse {\n  status: FarmAuctionContractStatus\n  startBlock: ethers.BigNumber\n  endBlock: ethers.BigNumber\n  initialBidAmount: ethers.BigNumber\n  leaderboard: ethers.BigNumber\n  leaderboardThreshold: ethers.BigNumber\n}\n\nexport interface BidsPerAuction {\n  account: string\n  amount: ethers.BigNumber\n}\n\nexport type ViewBidsPerAuctionResponse = [BidsPerAuction[], ethers.BigNumber]\n\n// [auctionId, bids, claimed, nextCursor]\nexport type ViewBidderAuctionsResponse = [ethers.BigNumber[], ethers.BigNumber[], boolean[], ethers.BigNumber]\n\ntype GetWhitelistedAddressesResponse = [\n  {\n    account: string\n    lpToken: string\n    token: string\n  }[],\n  ethers.BigNumber,\n]\n\ninterface AuctionsHistoryResponse {\n  totalAmount: ethers.BigNumber\n  hasClaimed: boolean\n}\n\nexport interface FarmAuctionContract extends Contract {\n  currentAuctionId: ContractFunction<ethers.BigNumber>\n  viewBidders: ContractFunction<[string[], ethers.BigNumber]>\n  totalCollected: ContractFunction<ethers.BigNumber>\n  auctions: ContractFunction<AuctionsResponse>\n  claimable: ContractFunction<boolean>\n  viewBidsPerAuction: ContractFunction<ViewBidsPerAuctionResponse>\n  viewBidderAuctions: ContractFunction<ViewBidderAuctionsResponse>\n  whitelisted: ContractFunction<boolean>\n  getWhitelistedAddresses: ContractFunction<GetWhitelistedAddressesResponse>\n  auctionsHistory: ContractFunction<AuctionsHistoryResponse>\n}\n"]},"metadata":{},"sourceType":"module"}