{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/views/FarmAuction/components/WhitelistedBiddersModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Modal, Box, Text, Flex, Input, OpenNewIcon, useMatchBreakpoints, Spinner } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport useTheme from 'hooks/useTheme';\nimport truncateWalletAddress from 'utils/truncateWalletAddress';\nimport useWhitelistedAddresses from '../hooks/useWhitelistedAddresses';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledModal = styled(Modal)`\n  & > div:nth-child(2) {\n    padding: 0;\n  }\n`;\n_c = StyledModal;\nconst InputContainer = styled(Flex)`\n  border-bottom: 1px solid ${({\n  theme\n}) => theme.colors.cardBorder};\n`;\n_c2 = InputContainer;\nconst AddressRowContainer = styled.div`\n  display: grid;\n  grid-template-columns: 3fr 5fr 0.5fr;\n  border-bottom: 1px solid ${({\n  theme\n}) => theme.colors.cardBorder};\n  padding: 8px 24px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.5;\n  }\n`;\n_c3 = AddressRowContainer;\n\nconst AddressRow = ({\n  bidder,\n  isMobile\n}) => {\n  const {\n    farmName,\n    tokenName,\n    account,\n    projectSite\n  } = bidder;\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    href: projectSite,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    children: /*#__PURE__*/_jsxDEV(AddressRowContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        flexDirection: \"column\",\n        flex: \"3\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: farmName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          color: \"textSubtle\",\n          children: tokenName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: ['center', null, 'flex-start'],\n        alignItems: \"center\",\n        flex: \"6\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          mr: \"8px\",\n          children: isMobile ? truncateWalletAddress(account) : account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OpenNewIcon, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = AddressRow;\n\nconst WhitelistedBiddersModal = ({\n  onDismiss\n}) => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const {\n    t\n  } = useTranslation();\n  const {\n    theme\n  } = useTheme();\n  const {\n    isXs,\n    isSm\n  } = useMatchBreakpoints();\n  const bidders = useWhitelistedAddresses();\n\n  const handleSearchChange = e => {\n    setSearchTerm(e.target.value);\n  };\n\n  const filteredBiders = bidders ? bidders.filter(({\n    farmName,\n    tokenName,\n    account\n  }) => farmName.toLowerCase().includes(searchTerm.toLowerCase()) || tokenName.toLowerCase().includes(searchTerm.toLowerCase()) || account.toLowerCase().includes(searchTerm.toLowerCase())) : [];\n  const modalContent = bidders ? filteredBiders.map(bidder => /*#__PURE__*/_jsxDEV(AddressRow, {\n    bidder: bidder,\n    isMobile: isXs || isSm\n  }, bidder.account, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 36\n  }, this)) : /*#__PURE__*/_jsxDEV(Flex, {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    py: \"24px\",\n    children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(StyledModal, {\n    p: \"0\",\n    title: t('All Whitelisted Project Wallets'),\n    onDismiss: onDismiss,\n    headerBackground: theme.colors.gradients.cardHeader,\n    children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n      py: \"16px\",\n      px: \"24px\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: t('Search address or token'),\n        value: searchTerm,\n        onChange: handleSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      pb: \"24px\",\n      overflow: \"scroll\",\n      maxHeight: \"245px\",\n      children: modalContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WhitelistedBiddersModal, \"Fk2K0fdUPYMIIGGibUtGOSNyWGM=\", false, function () {\n  return [useTranslation, useTheme, useMatchBreakpoints, useWhitelistedAddresses];\n});\n\n_c5 = WhitelistedBiddersModal;\nexport default WhitelistedBiddersModal;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"StyledModal\");\n$RefreshReg$(_c2, \"InputContainer\");\n$RefreshReg$(_c3, \"AddressRowContainer\");\n$RefreshReg$(_c4, \"AddressRow\");\n$RefreshReg$(_c5, \"WhitelistedBiddersModal\");","map":{"version":3,"sources":["/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/views/FarmAuction/components/WhitelistedBiddersModal.tsx"],"names":["React","useState","styled","Modal","Box","Text","Flex","Input","OpenNewIcon","useMatchBreakpoints","Spinner","useTranslation","useTheme","truncateWalletAddress","useWhitelistedAddresses","StyledModal","InputContainer","theme","colors","cardBorder","AddressRowContainer","div","AddressRow","bidder","isMobile","farmName","tokenName","account","projectSite","WhitelistedBiddersModal","onDismiss","searchTerm","setSearchTerm","t","isXs","isSm","bidders","handleSearchChange","e","target","value","filteredBiders","filter","toLowerCase","includes","modalContent","map","gradients","cardHeader"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Box, Text, Flex, Input, OpenNewIcon, useMatchBreakpoints, Spinner } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { FarmAuctionBidderConfig } from 'config/constants/types'\nimport truncateWalletAddress from 'utils/truncateWalletAddress'\nimport useWhitelistedAddresses from '../hooks/useWhitelistedAddresses'\n\ninterface WhitelistedBiddersModalProps {\n  onDismiss?: () => void\n}\n\nconst StyledModal = styled(Modal)`\n  & > div:nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst InputContainer = styled(Flex)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AddressRowContainer = styled.div`\n  display: grid;\n  grid-template-columns: 3fr 5fr 0.5fr;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 8px 24px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.5;\n  }\n`\n\nconst AddressRow: React.FC<{ bidder: FarmAuctionBidderConfig; isMobile: boolean }> = ({ bidder, isMobile }) => {\n  const { farmName, tokenName, account, projectSite } = bidder\n  return (\n    <a href={projectSite} target=\"_blank\" rel=\"noopener noreferrer\">\n      <AddressRowContainer>\n        <Flex flexDirection=\"column\" flex=\"3\">\n          <Text>{farmName}</Text>\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {tokenName}\n          </Text>\n        </Flex>\n        <Flex justifyContent={['center', null, 'flex-start']} alignItems=\"center\" flex=\"6\">\n          <Text mr=\"8px\">{isMobile ? truncateWalletAddress(account) : account}</Text>\n        </Flex>\n        <OpenNewIcon color=\"primary\" />\n      </AddressRowContainer>\n    </a>\n  )\n}\n\nconst WhitelistedBiddersModal: React.FC<WhitelistedBiddersModalProps> = ({ onDismiss }) => {\n  const [searchTerm, setSearchTerm] = useState('')\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const bidders = useWhitelistedAddresses()\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.target.value)\n  }\n\n  const filteredBiders = bidders\n    ? bidders.filter(\n        ({ farmName, tokenName, account }) =>\n          farmName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          tokenName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          account.toLowerCase().includes(searchTerm.toLowerCase()),\n      )\n    : []\n\n  const modalContent = bidders ? (\n    filteredBiders.map((bidder) => <AddressRow key={bidder.account} bidder={bidder} isMobile={isXs || isSm} />)\n  ) : (\n    <Flex justifyContent=\"center\" alignItems=\"center\" py=\"24px\">\n      <Spinner />\n    </Flex>\n  )\n\n  return (\n    <StyledModal\n      p=\"0\"\n      title={t('All Whitelisted Project Wallets')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <InputContainer py=\"16px\" px=\"24px\">\n        <Input placeholder={t('Search address or token')} value={searchTerm} onChange={handleSearchChange} />\n      </InputContainer>\n\n      <Box pb=\"24px\" overflow=\"scroll\" maxHeight=\"245px\">\n        {modalContent}\n      </Box>\n    </StyledModal>\n  )\n}\n\nexport default WhitelistedBiddersModal\n"]},"metadata":{},"sourceType":"module"}