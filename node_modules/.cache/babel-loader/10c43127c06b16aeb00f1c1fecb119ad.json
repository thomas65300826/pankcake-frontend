{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/pancake-frontend/src/views/FarmAuction/components/AuctionLeaderboard/AuctionRibbon.tsx\",\n    _s = $RefreshSig$();\n\nimport { Text } from '@pancakeswap/uikit';\nimport { AuctionStatus } from 'config/constants/types';\nimport { useTranslation } from 'contexts/Localization';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledRibbon = styled.div`\n  display: flex;\n  justify-content: center;\n  background-color: ${({\n  theme,\n  color\n}) => theme.colors[color]};\n  color: white;\n  position: absolute;\n  right: 0;\n  top: 0;\n  text-align: center;\n  width: 94px;\n  height: 94px;\n  clip-path: polygon(0 0, 40% 0, 100% 60%, 100% 100%);\n\n  & > div {\n    padding-top: 23%;\n    overflow: hidden;\n    transform: rotate(45deg);\n  }\n`;\n_c = StyledRibbon;\n\nconst AuctionRibbon = ({\n  auction,\n  noAuctionHistory\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    status\n  } = auction; // Don't show Live or Finished in case of fresh contract with no history\n\n  if (noAuctionHistory) {\n    return null;\n  }\n\n  let ribbonText = t('Finished');\n  let color = 'textDisabled';\n\n  if (status === AuctionStatus.Open) {\n    ribbonText = `${t('Live')}!`;\n    color = 'success';\n  }\n\n  if (status === AuctionStatus.Pending) {\n    ribbonText = `${t('Get ready')}!`;\n    color = 'warning';\n  }\n\n  return /*#__PURE__*/_jsxDEV(StyledRibbon, {\n    color: color,\n    children: /*#__PURE__*/_jsxDEV(Text, {\n      color: \"white\",\n      textTransform: \"uppercase\",\n      children: ribbonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuctionRibbon, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c2 = AuctionRibbon;\nexport default AuctionRibbon;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledRibbon\");\n$RefreshReg$(_c2, \"AuctionRibbon\");","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/src/views/FarmAuction/components/AuctionLeaderboard/AuctionRibbon.tsx"],"names":["Text","AuctionStatus","useTranslation","React","styled","StyledRibbon","div","theme","color","colors","AuctionRibbon","auction","noAuctionHistory","t","status","ribbonText","Open","Pending"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,oBAArB;AACA,SAAkBC,aAAlB,QAAuC,wBAAvC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,YAAY,GAAGD,MAAM,CAACE,GAAuB;AACnD;AACA;AACA,sBAAsB,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAsBD,KAAK,CAACE,MAAN,CAAaD,KAAb,CAAoB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;KAAMH,Y;;AAoBN,MAAMK,aAAwE,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAmC;AAAA;;AAClH,QAAM;AAAEC,IAAAA;AAAF,MAAQX,cAAc,EAA5B;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAaH,OAAnB,CAFkH,CAIlH;;AACA,MAAIC,gBAAJ,EAAsB;AACpB,WAAO,IAAP;AACD;;AAED,MAAIG,UAAU,GAAGF,CAAC,CAAC,UAAD,CAAlB;AACA,MAAIL,KAAK,GAAG,cAAZ;;AACA,MAAIM,MAAM,KAAKb,aAAa,CAACe,IAA7B,EAAmC;AACjCD,IAAAA,UAAU,GAAI,GAAEF,CAAC,CAAC,MAAD,CAAS,GAA1B;AACAL,IAAAA,KAAK,GAAG,SAAR;AACD;;AACD,MAAIM,MAAM,KAAKb,aAAa,CAACgB,OAA7B,EAAsC;AACpCF,IAAAA,UAAU,GAAI,GAAEF,CAAC,CAAC,WAAD,CAAc,GAA/B;AACAL,IAAAA,KAAK,GAAG,SAAR;AACD;;AACD,sBACE,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA,KAArB;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,OAAZ;AAAoB,MAAA,aAAa,EAAC,WAAlC;AAAA,gBACGO;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA1BD;;GAAML,a;UACUR,c;;;MADVQ,a;AA4BN,eAAeA,aAAf","sourcesContent":["import { Text } from '@pancakeswap/uikit'\nimport { Auction, AuctionStatus } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst StyledRibbon = styled.div<{ color: string }>`\n  display: flex;\n  justify-content: center;\n  background-color: ${({ theme, color }) => theme.colors[color]};\n  color: white;\n  position: absolute;\n  right: 0;\n  top: 0;\n  text-align: center;\n  width: 94px;\n  height: 94px;\n  clip-path: polygon(0 0, 40% 0, 100% 60%, 100% 100%);\n\n  & > div {\n    padding-top: 23%;\n    overflow: hidden;\n    transform: rotate(45deg);\n  }\n`\n\nconst AuctionRibbon: React.FC<{ auction: Auction; noAuctionHistory: boolean }> = ({ auction, noAuctionHistory }) => {\n  const { t } = useTranslation()\n  const { status } = auction\n\n  // Don't show Live or Finished in case of fresh contract with no history\n  if (noAuctionHistory) {\n    return null\n  }\n\n  let ribbonText = t('Finished')\n  let color = 'textDisabled'\n  if (status === AuctionStatus.Open) {\n    ribbonText = `${t('Live')}!`\n    color = 'success'\n  }\n  if (status === AuctionStatus.Pending) {\n    ribbonText = `${t('Get ready')}!`\n    color = 'warning'\n  }\n  return (\n    <StyledRibbon color={color}>\n      <Text color=\"white\" textTransform=\"uppercase\">\n        {ribbonText}\n      </Text>\n    </StyledRibbon>\n  )\n}\n\nexport default AuctionRibbon\n"]},"metadata":{},"sourceType":"module"}