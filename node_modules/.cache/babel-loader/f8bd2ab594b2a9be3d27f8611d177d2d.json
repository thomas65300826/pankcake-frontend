{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/pancake-frontend/src/components/SearchModal/Manage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit';\nimport styled from 'styled-components';\nimport { useTranslation } from 'contexts/Localization';\nimport ManageLists from './ManageLists';\nimport ManageTokens from './ManageTokens';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`;\n_c = StyledButtonMenu;\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl\n}) {\n  _s();\n\n  const [showLists, setShowLists] = useState(true);\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(ModalBody, {\n    children: [/*#__PURE__*/_jsxDEV(StyledButtonMenu, {\n      activeIndex: showLists ? 0 : 1,\n      onItemClick: () => setShowLists(prev => !prev),\n      scale: \"sm\",\n      variant: \"subtle\",\n      mb: \"32px\",\n      children: [/*#__PURE__*/_jsxDEV(ButtonMenuItem, {\n        width: \"50%\",\n        children: t('Lists')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonMenuItem, {\n        width: \"50%\",\n        children: t('Tokens')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), showLists ? /*#__PURE__*/_jsxDEV(ManageLists, {\n      setModalView: setModalView,\n      setImportList: setImportList,\n      setListUrl: setListUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ManageTokens, {\n      setModalView: setModalView,\n      setImportToken: setImportToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Manage, \"2r0/vNH9pBolGqAuSOkLnHDc3o4=\", false, function () {\n  return [useTranslation];\n});\n\n_c2 = Manage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledButtonMenu\");\n$RefreshReg$(_c2, \"Manage\");","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/src/components/SearchModal/Manage.tsx"],"names":["React","useState","ButtonMenu","ButtonMenuItem","ModalBody","styled","useTranslation","ManageLists","ManageTokens","StyledButtonMenu","Manage","setModalView","setImportList","setImportToken","setListUrl","showLists","setShowLists","t","prev"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,UAAT,EAAqBC,cAArB,EAAqCC,SAArC,QAAsD,oBAAtD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAGA,MAAMC,gBAAgB,GAAGJ,MAAM,CAACH,UAAD,CAAa;AAC5C;AACA,CAFA;KAAMO,gB;AAIN,eAAe,SAASC,MAAT,CAAgB;AAC7BC,EAAAA,YAD6B;AAE7BC,EAAAA,aAF6B;AAG7BC,EAAAA,cAH6B;AAI7BC,EAAAA;AAJ6B,CAAhB,EAUZ;AAAA;;AACD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAM;AAAEgB,IAAAA;AAAF,MAAQX,cAAc,EAA5B;AAEA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,gBAAD;AACE,MAAA,WAAW,EAAES,SAAS,GAAG,CAAH,GAAO,CAD/B;AAEE,MAAA,WAAW,EAAE,MAAMC,YAAY,CAAEE,IAAD,IAAU,CAACA,IAAZ,CAFjC;AAGE,MAAA,KAAK,EAAC,IAHR;AAIE,MAAA,OAAO,EAAC,QAJV;AAKE,MAAA,EAAE,EAAC,MALL;AAAA,8BAOE,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAC,KAAtB;AAAA,kBAA6BD,CAAC,CAAC,OAAD;AAA9B;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAC,KAAtB;AAAA,kBAA6BA,CAAC,CAAC,QAAD;AAA9B;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAWGF,SAAS,gBACR,QAAC,WAAD;AAAa,MAAA,YAAY,EAAEJ,YAA3B;AAAyC,MAAA,aAAa,EAAEC,aAAxD;AAAuE,MAAA,UAAU,EAAEE;AAAnF;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR,QAAC,YAAD;AAAc,MAAA,YAAY,EAAEH,YAA5B;AAA0C,MAAA,cAAc,EAAEE;AAA1D;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAlCuBH,M;UAaRJ,c;;;MAbQI,M","sourcesContent":["import React, { useState } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}