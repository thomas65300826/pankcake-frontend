{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/views/TradingCompetition/components/YourScore/CardUserInfo.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Text, Heading, Flex, Skeleton, MedalBronzeIcon, MedalGoldIcon, MedalPurpleIcon, MedalSilverIcon, MedalTealIcon, BlockIcon, Button, useModal } from '@pancakeswap/uikit';\nimport styled from 'styled-components';\nimport { useTranslation } from 'contexts/Localization';\nimport { LIVE } from 'config/constants/trading-competition/easterPhases';\nimport UserRankBox from './UserRankBox';\nimport NextRankBox from './NextRankBox';\nimport ShareImageModal from '../ShareImageModal';\nimport { localiseTradingVolume } from '../../helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TeamRankTextWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: center;\n  svg {\n    width: 24px;\n  }\n`;\n_c = TeamRankTextWrapper;\nconst RanksWrapper = styled(Flex)`\n  width: 100%;\n  margin-top: 24px;\n  flex-direction: column;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`;\n_c2 = RanksWrapper;\n\nconst CardUserInfo = ({\n  hasRegistered,\n  account,\n  profile,\n  userLeaderboardInformation,\n  currentPhase\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [onPresentShareModal] = useModal( /*#__PURE__*/_jsxDEV(ShareImageModal, {\n    profile: profile,\n    userLeaderboardInformation: userLeaderboardInformation\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this), false);\n  const {\n    global,\n    team,\n    volume,\n    next_rank: nextRank\n  } = userLeaderboardInformation;\n  const shouldShowUserRanks = account && hasRegistered;\n\n  const getMedal = currentRank => {\n    if (currentRank === 1) {\n      return {\n        current: /*#__PURE__*/_jsxDEV(MedalGoldIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 18\n        }, this),\n        next: null\n      };\n    }\n\n    if (currentRank <= 10) {\n      return {\n        current: /*#__PURE__*/_jsxDEV(MedalSilverIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 18\n        }, this),\n        next: /*#__PURE__*/_jsxDEV(MedalGoldIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)\n      };\n    }\n\n    if (currentRank <= 100) {\n      return {\n        current: /*#__PURE__*/_jsxDEV(MedalBronzeIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 18\n        }, this),\n        next: /*#__PURE__*/_jsxDEV(MedalSilverIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)\n      };\n    }\n\n    if (currentRank <= 500) {\n      return {\n        current: /*#__PURE__*/_jsxDEV(MedalPurpleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 18\n        }, this),\n        next: /*#__PURE__*/_jsxDEV(MedalBronzeIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)\n      };\n    }\n\n    if (currentRank > 500) {\n      return {\n        current: /*#__PURE__*/_jsxDEV(MedalTealIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 18\n        }, this),\n        next: /*#__PURE__*/_jsxDEV(MedalPurpleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)\n      };\n    }\n\n    return {\n      current: /*#__PURE__*/_jsxDEV(BlockIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 16\n      }, this),\n      next: /*#__PURE__*/_jsxDEV(MedalTealIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)\n    };\n  };\n\n  const getNextTier = currentRank => {\n    if (currentRank === 1) {\n      return {\n        color: null,\n        rank: null\n      };\n    }\n\n    if (currentRank <= 10) {\n      return {\n        color: 'GOLD',\n        rank: 1\n      };\n    }\n\n    if (currentRank <= 100) {\n      return {\n        color: 'SILVER',\n        rank: 10\n      };\n    }\n\n    if (currentRank <= 500) {\n      return {\n        color: 'BRONZE',\n        rank: 100\n      };\n    }\n\n    if (currentRank > 500) {\n      return {\n        color: 'PURPLE',\n        rank: 500\n      };\n    }\n\n    return {\n      color: '',\n      rank: 500\n    };\n  };\n\n  const getHeadingText = () => {\n    if (!account) {\n      return t('Check your Rank');\n    }\n\n    if (!hasRegistered) {\n      return t('You’re not participating this time.');\n    }\n\n    return `@${profile.username}`;\n  };\n\n  const getSubHeadingText = () => {\n    if (!account) {\n      return t('Connect wallet to view');\n    }\n\n    if (!hasRegistered) {\n      return t('Sorry, you needed to register during the “entry” period!');\n    }\n\n    return `${profile.team.name}`;\n  };\n\n  const headingText = getHeadingText();\n  const subHeadingText = getSubHeadingText();\n  const nextTier = userLeaderboardInformation && getNextTier(team);\n  const medal = userLeaderboardInformation && getMedal(team);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    mt: \"16px\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      scale: \"lg\",\n      textAlign: \"center\",\n      children: headingText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      textAlign: \"center\",\n      fontSize: \"14px\",\n      color: \"textSubtle\",\n      mt: \"4px\",\n      children: subHeadingText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), shouldShowUserRanks && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [profile.nft && volume > 0 && /*#__PURE__*/_jsxDEV(Button, {\n        mt: \"12px\",\n        variant: \"secondary\",\n        scale: \"sm\",\n        onClick: onPresentShareModal,\n        children: t('Share Score')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RanksWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          width: \"100%\",\n          flexDirection: ['column', 'row'],\n          children: [volume > 0 && /*#__PURE__*/_jsxDEV(UserRankBox, {\n            flex: \"1\",\n            title: t('Rank in team').toUpperCase(),\n            footer: userLeaderboardInformation ? t('#%global% Overall', {\n              global: global.toLocaleString()\n            }) : '',\n            mr: [0, '8px'],\n            mb: ['8px', 0],\n            children: !userLeaderboardInformation ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              height: \"26px\",\n              width: \"110px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(TeamRankTextWrapper, {\n              children: [/*#__PURE__*/_jsxDEV(Heading, {\n                textAlign: \"center\",\n                scale: \"lg\",\n                mr: \"8px\",\n                children: [\"#\", team]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 23\n              }, this), medal.current]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(UserRankBox, {\n            flex: \"1\",\n            title: t('Your volume').toUpperCase(),\n            footer: t('Since start') // Add responsive mr if competition is LIVE\n            ,\n            mr: currentPhase.state === LIVE ? [0, null, '8px'] : 0,\n            children: !userLeaderboardInformation ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              height: \"26px\",\n              width: \"110px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Heading, {\n              textAlign: \"center\",\n              scale: \"lg\",\n              children: [\"$\", userLeaderboardInformation && localiseTradingVolume(volume)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), currentPhase.state === LIVE && (team === 1 ?\n        /*#__PURE__*/\n        // If user is first\n        _jsxDEV(NextRankBox, {\n          flex: \"2\",\n          title: t('Your tier: gold').toUpperCase(),\n          footer: t('Love, The Chefs x'),\n          currentMedal: medal.current,\n          hideArrow: true,\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            scale: \"lg\",\n            children: t('HECK YEAH!')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(NextRankBox, {\n          flex: \"2\",\n          title: `${t('Next tier').toUpperCase()}: ${nextTier.color}`,\n          footer: t('to become #%rank% in team', {\n            rank: nextTier.rank\n          }),\n          currentMedal: medal.current,\n          nextMedal: medal.next,\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            scale: \"lg\",\n            children: [\"+$\", userLeaderboardInformation && localiseTradingVolume(nextRank)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardUserInfo, \"r0divPeWIStMz1YWc8ba6IoM+VI=\", false, function () {\n  return [useTranslation, useModal];\n});\n\n_c3 = CardUserInfo;\nexport default CardUserInfo;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TeamRankTextWrapper\");\n$RefreshReg$(_c2, \"RanksWrapper\");\n$RefreshReg$(_c3, \"CardUserInfo\");","map":{"version":3,"sources":["/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/views/TradingCompetition/components/YourScore/CardUserInfo.tsx"],"names":["React","Text","Heading","Flex","Skeleton","MedalBronzeIcon","MedalGoldIcon","MedalPurpleIcon","MedalSilverIcon","MedalTealIcon","BlockIcon","Button","useModal","styled","useTranslation","LIVE","UserRankBox","NextRankBox","ShareImageModal","localiseTradingVolume","TeamRankTextWrapper","RanksWrapper","theme","mediaQueries","sm","CardUserInfo","hasRegistered","account","profile","userLeaderboardInformation","currentPhase","t","onPresentShareModal","global","team","volume","next_rank","nextRank","shouldShowUserRanks","getMedal","currentRank","current","next","getNextTier","color","rank","getHeadingText","username","getSubHeadingText","name","headingText","subHeadingText","nextTier","medal","nft","toUpperCase","toLocaleString","state"],"mappings":";;;AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SACEC,IADF,EAEEC,OAFF,EAGEC,IAHF,EAIEC,QAJF,EAKEC,eALF,EAMEC,aANF,EAOEC,eAPF,EAQEC,eARF,EASEC,aATF,EAUEC,SAVF,EAWEC,MAXF,EAYEC,QAZF,QAaO,oBAbP;AAcA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,IAAT,QAAqB,mDAArB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,SAASC,qBAAT,QAAsC,eAAtC;;;AAEA,MAAMC,mBAAmB,GAAGP,MAAM,CAACV,IAAD,CAAO;AACzC;AACA;AACA;AACA;AACA;AACA,CANA;KAAMiB,mB;AAQN,MAAMC,YAAY,GAAGR,MAAM,CAACV,IAAD,CAAO;AAClC;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEmB,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA,CARA;MAAMH,Y;;AAUN,MAAMI,YAAsC,GAAG,CAAC;AAC9CC,EAAAA,aAD8C;AAE9CC,EAAAA,OAF8C;AAG9CC,EAAAA,OAH8C;AAI9CC,EAAAA,0BAJ8C;AAK9CC,EAAAA;AAL8C,CAAD,KAMzC;AAAA;;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAQjB,cAAc,EAA5B;AACA,QAAM,CAACkB,mBAAD,IAAwBpB,QAAQ,eACpC,QAAC,eAAD;AAAiB,IAAA,OAAO,EAAEgB,OAA1B;AAAmC,IAAA,0BAA0B,EAAEC;AAA/D;AAAA;AAAA;AAAA;AAAA,UADoC,EAEpC,KAFoC,CAAtC;AAIA,QAAM;AAAEI,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA,SAAS,EAAEC;AAAnC,MAAgDR,0BAAtD;AACA,QAAMS,mBAAmB,GAAGX,OAAO,IAAID,aAAvC;;AAEA,QAAMa,QAAQ,GAAIC,WAAD,IAA4B;AAC3C,QAAIA,WAAW,KAAK,CAApB,EAAuB;AACrB,aAAO;AACLC,QAAAA,OAAO,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBADJ;AAELC,QAAAA,IAAI,EAAE;AAFD,OAAP;AAID;;AACD,QAAIF,WAAW,IAAI,EAAnB,EAAuB;AACrB,aAAO;AACLC,QAAAA,OAAO,eAAE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,gBADJ;AAELC,QAAAA,IAAI,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAFD,OAAP;AAID;;AACD,QAAIF,WAAW,IAAI,GAAnB,EAAwB;AACtB,aAAO;AACLC,QAAAA,OAAO,eAAE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,gBADJ;AAELC,QAAAA,IAAI,eAAE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAFD,OAAP;AAID;;AACD,QAAIF,WAAW,IAAI,GAAnB,EAAwB;AACtB,aAAO;AACLC,QAAAA,OAAO,eAAE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,gBADJ;AAELC,QAAAA,IAAI,eAAE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAFD,OAAP;AAID;;AACD,QAAIF,WAAW,GAAG,GAAlB,EAAuB;AACrB,aAAO;AACLC,QAAAA,OAAO,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBADJ;AAELC,QAAAA,IAAI,eAAE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAFD,OAAP;AAID;;AACD,WAAO;AACLD,MAAAA,OAAO,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADJ;AAELC,MAAAA,IAAI,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAFD,KAAP;AAID,GAnCD;;AAqCA,QAAMC,WAAW,GAAIH,WAAD,IAA4B;AAC9C,QAAIA,WAAW,KAAK,CAApB,EAAuB;AACrB,aAAO;AACLI,QAAAA,KAAK,EAAE,IADF;AAELC,QAAAA,IAAI,EAAE;AAFD,OAAP;AAID;;AACD,QAAIL,WAAW,IAAI,EAAnB,EAAuB;AACrB,aAAO;AACLI,QAAAA,KAAK,EAAE,MADF;AAELC,QAAAA,IAAI,EAAE;AAFD,OAAP;AAID;;AACD,QAAIL,WAAW,IAAI,GAAnB,EAAwB;AACtB,aAAO;AACLI,QAAAA,KAAK,EAAE,QADF;AAELC,QAAAA,IAAI,EAAE;AAFD,OAAP;AAID;;AACD,QAAIL,WAAW,IAAI,GAAnB,EAAwB;AACtB,aAAO;AACLI,QAAAA,KAAK,EAAE,QADF;AAELC,QAAAA,IAAI,EAAE;AAFD,OAAP;AAID;;AACD,QAAIL,WAAW,GAAG,GAAlB,EAAuB;AACrB,aAAO;AACLI,QAAAA,KAAK,EAAE,QADF;AAELC,QAAAA,IAAI,EAAE;AAFD,OAAP;AAID;;AACD,WAAO;AACLD,MAAAA,KAAK,EAAE,EADF;AAELC,MAAAA,IAAI,EAAE;AAFD,KAAP;AAID,GAnCD;;AAqCA,QAAMC,cAAc,GAAG,MAAM;AAC3B,QAAI,CAACnB,OAAL,EAAc;AACZ,aAAOI,CAAC,CAAC,iBAAD,CAAR;AACD;;AACD,QAAI,CAACL,aAAL,EAAoB;AAClB,aAAOK,CAAC,CAAC,qCAAD,CAAR;AACD;;AACD,WAAQ,IAAGH,OAAO,CAACmB,QAAS,EAA5B;AACD,GARD;;AAUA,QAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAI,CAACrB,OAAL,EAAc;AACZ,aAAOI,CAAC,CAAC,wBAAD,CAAR;AACD;;AACD,QAAI,CAACL,aAAL,EAAoB;AAClB,aAAOK,CAAC,CAAC,0DAAD,CAAR;AACD;;AACD,WAAQ,GAAEH,OAAO,CAACM,IAAR,CAAae,IAAK,EAA5B;AACD,GARD;;AAUA,QAAMC,WAAW,GAAGJ,cAAc,EAAlC;AACA,QAAMK,cAAc,GAAGH,iBAAiB,EAAxC;AACA,QAAMI,QAAQ,GAAGvB,0BAA0B,IAAIc,WAAW,CAACT,IAAD,CAA1D;AACA,QAAMmB,KAAK,GAAGxB,0BAA0B,IAAIU,QAAQ,CAACL,IAAD,CAApD;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,aAAa,EAAC,QAApB;AAA6B,IAAA,UAAU,EAAC,QAAxC;AAAiD,IAAA,EAAE,EAAC,MAApD;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,IAAf;AAAoB,MAAA,SAAS,EAAC,QAA9B;AAAA,gBACGgB;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,QAAQ,EAAC,MAAlC;AAAyC,MAAA,KAAK,EAAC,YAA/C;AAA4D,MAAA,EAAE,EAAC,KAA/D;AAAA,gBACGC;AADH;AAAA;AAAA;AAAA;AAAA,YAJF,EAOGb,mBAAmB,iBAClB;AAAA,iBACGV,OAAO,CAAC0B,GAAR,IAAenB,MAAM,GAAG,CAAxB,iBACC,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,MAAX;AAAkB,QAAA,OAAO,EAAC,WAA1B;AAAsC,QAAA,KAAK,EAAC,IAA5C;AAAiD,QAAA,OAAO,EAAEH,mBAA1D;AAAA,kBACGD,CAAC,CAAC,aAAD;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAME,QAAC,YAAD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,MAAZ;AAAmB,UAAA,aAAa,EAAE,CAAC,QAAD,EAAW,KAAX,CAAlC;AAAA,qBACGI,MAAM,GAAG,CAAT,iBACC,QAAC,WAAD;AACE,YAAA,IAAI,EAAC,GADP;AAEE,YAAA,KAAK,EAAEJ,CAAC,CAAC,cAAD,CAAD,CAAkBwB,WAAlB,EAFT;AAGE,YAAA,MAAM,EAAE1B,0BAA0B,GAAGE,CAAC,CAAC,mBAAD,EAAsB;AAAEE,cAAAA,MAAM,EAAEA,MAAM,CAACuB,cAAP;AAAV,aAAtB,CAAJ,GAAiE,EAHrG;AAIE,YAAA,EAAE,EAAE,CAAC,CAAD,EAAI,KAAJ,CAJN;AAKE,YAAA,EAAE,EAAE,CAAC,KAAD,EAAQ,CAAR,CALN;AAAA,sBAOG,CAAC3B,0BAAD,gBACC,QAAC,QAAD;AAAU,cAAA,MAAM,EAAC,MAAjB;AAAwB,cAAA,KAAK,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,oBADD,gBAGC,QAAC,mBAAD;AAAA,sCACE,QAAC,OAAD;AAAS,gBAAA,SAAS,EAAC,QAAnB;AAA4B,gBAAA,KAAK,EAAC,IAAlC;AAAuC,gBAAA,EAAE,EAAC,KAA1C;AAAA,gCACIK,IADJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAIGmB,KAAK,CAACZ,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAqBE,QAAC,WAAD;AACE,YAAA,IAAI,EAAC,GADP;AAEE,YAAA,KAAK,EAAEV,CAAC,CAAC,aAAD,CAAD,CAAiBwB,WAAjB,EAFT;AAGE,YAAA,MAAM,EAAExB,CAAC,CAAC,aAAD,CAHX,CAIE;AAJF;AAKE,YAAA,EAAE,EAAED,YAAY,CAAC2B,KAAb,KAAuB1C,IAAvB,GAA8B,CAAC,CAAD,EAAI,IAAJ,EAAU,KAAV,CAA9B,GAAiD,CALvD;AAAA,sBAOG,CAACc,0BAAD,gBACC,QAAC,QAAD;AAAU,cAAA,MAAM,EAAC,MAAjB;AAAwB,cAAA,KAAK,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,oBADD,gBAGC,QAAC,OAAD;AAAS,cAAA,SAAS,EAAC,QAAnB;AAA4B,cAAA,KAAK,EAAC,IAAlC;AAAA,8BACIA,0BAA0B,IAAIV,qBAAqB,CAACgB,MAAD,CADvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,kBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAuCGL,YAAY,CAAC2B,KAAb,KAAuB1C,IAAvB,KACEmB,IAAI,KAAK,CAAT;AAAA;AACC;AACA,gBAAC,WAAD;AACE,UAAA,IAAI,EAAC,GADP;AAEE,UAAA,KAAK,EAAEH,CAAC,CAAC,iBAAD,CAAD,CAAqBwB,WAArB,EAFT;AAGE,UAAA,MAAM,EAAExB,CAAC,CAAC,mBAAD,CAHX;AAIE,UAAA,YAAY,EAAEsB,KAAK,CAACZ,OAJtB;AAKE,UAAA,SAAS,MALX;AAAA,iCAOE,QAAC,OAAD;AAAS,YAAA,KAAK,EAAC,IAAf;AAAA,sBAAqBV,CAAC,CAAC,YAAD;AAAtB;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,gBAFD,gBAYC,QAAC,WAAD;AACE,UAAA,IAAI,EAAC,GADP;AAEE,UAAA,KAAK,EAAG,GAAEA,CAAC,CAAC,WAAD,CAAD,CAAewB,WAAf,EAA6B,KAAIH,QAAQ,CAACR,KAAM,EAF5D;AAGE,UAAA,MAAM,EAAEb,CAAC,CAAC,2BAAD,EAA8B;AAAEc,YAAAA,IAAI,EAAEO,QAAQ,CAACP;AAAjB,WAA9B,CAHX;AAIE,UAAA,YAAY,EAAEQ,KAAK,CAACZ,OAJtB;AAKE,UAAA,SAAS,EAAEY,KAAK,CAACX,IALnB;AAAA,iCAOE,QAAC,OAAD;AAAS,YAAA,KAAK,EAAC,IAAf;AAAA,6BAAuBb,0BAA0B,IAAIV,qBAAqB,CAACkB,QAAD,CAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,gBAbH,CAvCH;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkFD,CApMD;;GAAMZ,Y;UAOUX,c,EACgBF,Q;;;MAR1Ba,Y;AAsMN,eAAeA,YAAf","sourcesContent":["import React, { ReactText } from 'react'\nimport {\n  Text,\n  Heading,\n  Flex,\n  Skeleton,\n  MedalBronzeIcon,\n  MedalGoldIcon,\n  MedalPurpleIcon,\n  MedalSilverIcon,\n  MedalTealIcon,\n  BlockIcon,\n  Button,\n  useModal,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { LIVE } from 'config/constants/trading-competition/easterPhases'\nimport { YourScoreProps } from '../../types'\nimport UserRankBox from './UserRankBox'\nimport NextRankBox from './NextRankBox'\nimport ShareImageModal from '../ShareImageModal'\nimport { localiseTradingVolume } from '../../helpers'\n\nconst TeamRankTextWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: center;\n  svg {\n    width: 24px;\n  }\n`\n\nconst RanksWrapper = styled(Flex)`\n  width: 100%;\n  margin-top: 24px;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst CardUserInfo: React.FC<YourScoreProps> = ({\n  hasRegistered,\n  account,\n  profile,\n  userLeaderboardInformation,\n  currentPhase,\n}) => {\n  const { t } = useTranslation()\n  const [onPresentShareModal] = useModal(\n    <ShareImageModal profile={profile} userLeaderboardInformation={userLeaderboardInformation} />,\n    false,\n  )\n  const { global, team, volume, next_rank: nextRank } = userLeaderboardInformation\n  const shouldShowUserRanks = account && hasRegistered\n\n  const getMedal = (currentRank: ReactText) => {\n    if (currentRank === 1) {\n      return {\n        current: <MedalGoldIcon />,\n        next: null,\n      }\n    }\n    if (currentRank <= 10) {\n      return {\n        current: <MedalSilverIcon />,\n        next: <MedalGoldIcon />,\n      }\n    }\n    if (currentRank <= 100) {\n      return {\n        current: <MedalBronzeIcon />,\n        next: <MedalSilverIcon />,\n      }\n    }\n    if (currentRank <= 500) {\n      return {\n        current: <MedalPurpleIcon />,\n        next: <MedalBronzeIcon />,\n      }\n    }\n    if (currentRank > 500) {\n      return {\n        current: <MedalTealIcon />,\n        next: <MedalPurpleIcon />,\n      }\n    }\n    return {\n      current: <BlockIcon />,\n      next: <MedalTealIcon />,\n    }\n  }\n\n  const getNextTier = (currentRank: ReactText) => {\n    if (currentRank === 1) {\n      return {\n        color: null,\n        rank: null,\n      }\n    }\n    if (currentRank <= 10) {\n      return {\n        color: 'GOLD',\n        rank: 1,\n      }\n    }\n    if (currentRank <= 100) {\n      return {\n        color: 'SILVER',\n        rank: 10,\n      }\n    }\n    if (currentRank <= 500) {\n      return {\n        color: 'BRONZE',\n        rank: 100,\n      }\n    }\n    if (currentRank > 500) {\n      return {\n        color: 'PURPLE',\n        rank: 500,\n      }\n    }\n    return {\n      color: '',\n      rank: 500,\n    }\n  }\n\n  const getHeadingText = () => {\n    if (!account) {\n      return t('Check your Rank')\n    }\n    if (!hasRegistered) {\n      return t('You’re not participating this time.')\n    }\n    return `@${profile.username}`\n  }\n\n  const getSubHeadingText = () => {\n    if (!account) {\n      return t('Connect wallet to view')\n    }\n    if (!hasRegistered) {\n      return t('Sorry, you needed to register during the “entry” period!')\n    }\n    return `${profile.team.name}`\n  }\n\n  const headingText = getHeadingText()\n  const subHeadingText = getSubHeadingText()\n  const nextTier = userLeaderboardInformation && getNextTier(team)\n  const medal = userLeaderboardInformation && getMedal(team)\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\" mt=\"16px\">\n      <Heading scale=\"lg\" textAlign=\"center\">\n        {headingText}\n      </Heading>\n      <Text textAlign=\"center\" fontSize=\"14px\" color=\"textSubtle\" mt=\"4px\">\n        {subHeadingText}\n      </Text>\n      {shouldShowUserRanks && (\n        <>\n          {profile.nft && volume > 0 && (\n            <Button mt=\"12px\" variant=\"secondary\" scale=\"sm\" onClick={onPresentShareModal}>\n              {t('Share Score')}\n            </Button>\n          )}\n          <RanksWrapper>\n            <Flex width=\"100%\" flexDirection={['column', 'row']}>\n              {volume > 0 && (\n                <UserRankBox\n                  flex=\"1\"\n                  title={t('Rank in team').toUpperCase()}\n                  footer={userLeaderboardInformation ? t('#%global% Overall', { global: global.toLocaleString() }) : ''}\n                  mr={[0, '8px']}\n                  mb={['8px', 0]}\n                >\n                  {!userLeaderboardInformation ? (\n                    <Skeleton height=\"26px\" width=\"110px\" />\n                  ) : (\n                    <TeamRankTextWrapper>\n                      <Heading textAlign=\"center\" scale=\"lg\" mr=\"8px\">\n                        #{team}\n                      </Heading>\n                      {medal.current}\n                    </TeamRankTextWrapper>\n                  )}\n                </UserRankBox>\n              )}\n              <UserRankBox\n                flex=\"1\"\n                title={t('Your volume').toUpperCase()}\n                footer={t('Since start')}\n                // Add responsive mr if competition is LIVE\n                mr={currentPhase.state === LIVE ? [0, null, '8px'] : 0}\n              >\n                {!userLeaderboardInformation ? (\n                  <Skeleton height=\"26px\" width=\"110px\" />\n                ) : (\n                  <Heading textAlign=\"center\" scale=\"lg\">\n                    ${userLeaderboardInformation && localiseTradingVolume(volume)}\n                  </Heading>\n                )}\n              </UserRankBox>\n            </Flex>\n            {/* Show next ranks if competition is LIVE */}\n            {currentPhase.state === LIVE &&\n              (team === 1 ? (\n                // If user is first\n                <NextRankBox\n                  flex=\"2\"\n                  title={t('Your tier: gold').toUpperCase()}\n                  footer={t('Love, The Chefs x')}\n                  currentMedal={medal.current}\n                  hideArrow\n                >\n                  <Heading scale=\"lg\">{t('HECK YEAH!')}</Heading>\n                </NextRankBox>\n              ) : (\n                <NextRankBox\n                  flex=\"2\"\n                  title={`${t('Next tier').toUpperCase()}: ${nextTier.color}`}\n                  footer={t('to become #%rank% in team', { rank: nextTier.rank })}\n                  currentMedal={medal.current}\n                  nextMedal={medal.next}\n                >\n                  <Heading scale=\"lg\">+${userLeaderboardInformation && localiseTradingVolume(nextRank)}</Heading>\n                </NextRankBox>\n              ))}\n          </RanksWrapper>\n        </>\n      )}\n    </Flex>\n  )\n}\n\nexport default CardUserInfo\n"]},"metadata":{},"sourceType":"module"}