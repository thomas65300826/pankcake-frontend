{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useFarmAuctionContract } from 'hooks/useContract';\nimport { AUCTION_BIDDERS_TO_FETCH } from 'config';\nimport { processAuctionData, sortAuctionBidders } from '../helpers';\n\nconst useAuctionHistory = auctionId => {\n  _s();\n\n  const [auctionHistory, setAuctionHistory] = useState({});\n  const farmAuctionContract = useFarmAuctionContract(); // Get past auction data\n\n  useEffect(() => {\n    const fetchAuction = async () => {\n      try {\n        const auctionData = await farmAuctionContract.auctions(auctionId);\n        const processedAuctionData = await processAuctionData(auctionId, auctionData);\n        const [auctionBidders] = await farmAuctionContract.viewBidsPerAuction(auctionId, 0, AUCTION_BIDDERS_TO_FETCH);\n        const sortedBidders = sortAuctionBidders(auctionBidders, processedAuctionData);\n        setAuctionHistory(prev => ({ ...prev,\n          [auctionId]: {\n            auction: processedAuctionData,\n            bidders: sortedBidders\n          }\n        }));\n      } catch (error) {\n        console.error('Failed to fetch auction history', error);\n      }\n    };\n\n    if (!auctionHistory[auctionId] && auctionId > 0) {\n      fetchAuction();\n    }\n  }, [farmAuctionContract, auctionHistory, auctionId]);\n  return auctionHistory;\n};\n\n_s(useAuctionHistory, \"CBLySmRraFMY/XohhuDZu0HNBlE=\", false, function () {\n  return [useFarmAuctionContract];\n});\n\nexport default useAuctionHistory;","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/src/views/FarmAuction/hooks/useAuctionHistory.tsx"],"names":["useState","useEffect","useFarmAuctionContract","AUCTION_BIDDERS_TO_FETCH","processAuctionData","sortAuctionBidders","useAuctionHistory","auctionId","auctionHistory","setAuctionHistory","farmAuctionContract","fetchAuction","auctionData","auctions","processedAuctionData","auctionBidders","viewBidsPerAuction","sortedBidders","prev","auction","bidders","error","console"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,sBAAT,QAAuC,mBAAvC;AAEA,SAASC,wBAAT,QAAyC,QAAzC;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,YAAvD;;AASA,MAAMC,iBAAiB,GAAIC,SAAD,IAAuB;AAAA;;AAC/C,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAoB,EAApB,CAApD;AAEA,QAAMU,mBAAmB,GAAGR,sBAAsB,EAAlD,CAH+C,CAK/C;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,YAAY,GAAG,YAAY;AAC/B,UAAI;AACF,cAAMC,WAAW,GAAG,MAAMF,mBAAmB,CAACG,QAApB,CAA6BN,SAA7B,CAA1B;AACA,cAAMO,oBAAoB,GAAG,MAAMV,kBAAkB,CAACG,SAAD,EAAYK,WAAZ,CAArD;AAEA,cAAM,CAACG,cAAD,IAAmB,MAAML,mBAAmB,CAACM,kBAApB,CAAuCT,SAAvC,EAAkD,CAAlD,EAAqDJ,wBAArD,CAA/B;AACA,cAAMc,aAAa,GAAGZ,kBAAkB,CAACU,cAAD,EAAiBD,oBAAjB,CAAxC;AACAL,QAAAA,iBAAiB,CAAES,IAAD,KAAW,EAC3B,GAAGA,IADwB;AAE3B,WAACX,SAAD,GAAa;AAAEY,YAAAA,OAAO,EAAEL,oBAAX;AAAiCM,YAAAA,OAAO,EAAEH;AAA1C;AAFc,SAAX,CAAD,CAAjB;AAID,OAVD,CAUE,OAAOI,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc,iCAAd,EAAiDA,KAAjD;AACD;AACF,KAdD;;AAeA,QAAI,CAACb,cAAc,CAACD,SAAD,CAAf,IAA8BA,SAAS,GAAG,CAA9C,EAAiD;AAC/CI,MAAAA,YAAY;AACb;AACF,GAnBQ,EAmBN,CAACD,mBAAD,EAAsBF,cAAtB,EAAsCD,SAAtC,CAnBM,CAAT;AAqBA,SAAOC,cAAP;AACD,CA5BD;;GAAMF,iB;UAGwBJ,sB;;;AA2B9B,eAAeI,iBAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useFarmAuctionContract } from 'hooks/useContract'\nimport { Auction, Bidder } from 'config/constants/types'\nimport { AUCTION_BIDDERS_TO_FETCH } from 'config'\nimport { processAuctionData, sortAuctionBidders } from '../helpers'\n\ninterface AuctionHistoryMap {\n  [key: number]: {\n    auction: Auction\n    bidders: Bidder[]\n  }\n}\n\nconst useAuctionHistory = (auctionId: number) => {\n  const [auctionHistory, setAuctionHistory] = useState<AuctionHistoryMap>({})\n\n  const farmAuctionContract = useFarmAuctionContract()\n\n  // Get past auction data\n  useEffect(() => {\n    const fetchAuction = async () => {\n      try {\n        const auctionData = await farmAuctionContract.auctions(auctionId)\n        const processedAuctionData = await processAuctionData(auctionId, auctionData)\n\n        const [auctionBidders] = await farmAuctionContract.viewBidsPerAuction(auctionId, 0, AUCTION_BIDDERS_TO_FETCH)\n        const sortedBidders = sortAuctionBidders(auctionBidders, processedAuctionData)\n        setAuctionHistory((prev) => ({\n          ...prev,\n          [auctionId]: { auction: processedAuctionData, bidders: sortedBidders },\n        }))\n      } catch (error) {\n        console.error('Failed to fetch auction history', error)\n      }\n    }\n    if (!auctionHistory[auctionId] && auctionId > 0) {\n      fetchAuction()\n    }\n  }, [farmAuctionContract, auctionHistory, auctionId])\n\n  return auctionHistory\n}\n\nexport default useAuctionHistory\n"]},"metadata":{},"sourceType":"module"}