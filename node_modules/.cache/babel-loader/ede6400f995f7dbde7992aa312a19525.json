{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/pancake-frontend/pankcake-frontend/src/views/Lottery/components/BuyTicketsModal/TicketInput.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { Flex, Text } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InputsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 36px;\n  box-sizing: border-box;\n  border: 1px solid #d7caec;\n  background-color: #eeeaf4;\n  border-radius: 16px;\n  margin-bottom: 8px;\n  ${({\n  isDuplicate\n}) => isDuplicate && `\n    border: 1px solid #FFB237;\n    box-shadow: 0px 0px 0px 2px #FFB237;\n  `}\n  ${({\n  focused\n}) => focused && `\n    border: 1px solid #7645D9;\n    box-shadow: 0px 0px 0px 2px #E4DAF7;\n  `}\n`;\n_c = InputsContainer;\nconst DigitInput = styled.input`\n  border: none;\n  height: 32px;\n  padding: 0 12px;\n  font-size: 16px;\n  flex: 1;\n  width: 16px;\n  text-align: center;\n  min-width: 0;\n  background-color: transparent;\n  caret-color: #7a6faa;\n\n  &::placeholder {\n    text-align: center;\n  }\n\n  &:placeholder-shown {\n    text-align: left;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    /* display: none; <- Crashes Chrome on hover */\n    -webkit-appearance: none;\n    margin: 0; /* <-- Apparently some margin are still there even though it's hidden */\n  }\n\n  -moz-appearance: textfield; /* Firefox */\n`;\n_c2 = DigitInput;\n\nconst getIdLabel = id => {\n  if (id < 10) return `#00${id}`;\n  if (id < 100) return `#0${id}`;\n  return `#${id}`;\n};\n\nconst TicketContaier = ({\n  ticket,\n  duplicateWith,\n  updateTicket,\n  disabled\n}) => {\n  _s();\n\n  const [focused, setFocused] = useState(false);\n  const containerRef = useRef(null);\n  const digit1 = useRef(null);\n  const digit2 = useRef(null);\n  const digit3 = useRef(null);\n  const digit4 = useRef(null);\n  const digit5 = useRef(null);\n  const digit6 = useRef(null);\n  const {\n    t\n  } = useTranslation();\n  const digitRefs = [digit1, digit2, digit3, digit4, digit5, digit6];\n\n  const scrollInputIntoView = () => {\n    if (containerRef.current) {\n      containerRef.current.scrollIntoView({\n        block: 'center',\n        behavior: 'smooth'\n      });\n    }\n  };\n\n  const onPasteHandler = e => {\n    e.preventDefault();\n    const pasteContent = e.clipboardData.getData('Text');\n\n    if (pasteContent.length <= 6 && /^\\d+$/.test(pasteContent)) {\n      const filler = Array(6 - pasteContent.length).fill('');\n      updateTicket(ticket.id, [...pasteContent.split(''), ...filler]);\n    }\n  };\n\n  const onFocusHandler = () => {\n    scrollInputIntoView();\n    setFocused(true);\n  };\n\n  const onBlurHandler = () => {\n    setFocused(false);\n  };\n\n  const onChangeHandler = (event, digitId) => {\n    const currentKey = parseInt(event.key, 10);\n\n    if (['e', 'E', '.', ',', '-', 'Unidentified'].includes(event.key)) {\n      event.preventDefault();\n      return;\n    } // Handling numberic inputs\n\n\n    if (currentKey >= 0 && currentKey <= 9) {\n      event.preventDefault();\n      const newNumbers = [...ticket.numbers];\n      newNumbers[digitId] = `${currentKey}`;\n      updateTicket(ticket.id, newNumbers);\n      const nextDigitId = digitId + 1; // if we're not on the last digit - auto-tab\n\n      const nextInput = digitRefs[nextDigitId];\n\n      if (nextDigitId !== 6 && nextInput.current) {\n        nextInput.current.focus();\n      }\n    }\n\n    if (event.key === 'Backspace') {\n      event.preventDefault(); // If some number is there - delete the number\n\n      if (ticket.numbers[digitId]) {\n        const newNumbers = [...ticket.numbers];\n        newNumbers[digitId] = '';\n        updateTicket(ticket.id, newNumbers);\n      } else {\n        // if the cell is empty and user presses backspace - remove previous\n        const prevDigitId = digitId - 1;\n        const nextInput = digitRefs[prevDigitId]; // prevent focusing on non-existent input\n\n        if (prevDigitId !== -1 && nextInput.current) {\n          nextInput.current.focus();\n          const newNumbers = [...ticket.numbers];\n          newNumbers[prevDigitId] = '';\n          updateTicket(ticket.id, newNumbers);\n        }\n      }\n    }\n\n    if (event.key === 'Delete') {\n      event.preventDefault();\n\n      if (ticket.numbers[digitId]) {\n        const newNumbers = [...ticket.numbers];\n        newNumbers[digitId] = '';\n        updateTicket(ticket.id, newNumbers);\n      } else {\n        // if the cell is empty and user presses delete - remove next\n        const nextDigitId = digitId + 1;\n        const nextInput = digitRefs[nextDigitId]; // prevent focusing on non-existent input\n\n        if (nextDigitId !== 6 && nextInput.current) {\n          nextInput.current.focus();\n          const newNumbers = [...ticket.numbers];\n          newNumbers[nextDigitId] = '';\n          updateTicket(ticket.id, newNumbers);\n        }\n      }\n    }\n\n    if (event.key === 'ArrowLeft') {\n      event.preventDefault();\n      const prevDigitId = digitId - 1;\n      const nextInput = digitRefs[prevDigitId]; // prevent focusing on non-existent input\n\n      if (prevDigitId !== -1 && nextInput.current) {\n        nextInput.current.focus();\n      }\n    }\n\n    if (event.key === 'ArrowRight') {\n      event.preventDefault();\n      const nextDigitId = digitId + 1;\n      const nextInput = digitRefs[nextDigitId]; // prevent focusing on non-existent input\n\n      if (nextDigitId !== 6 && nextInput.current) {\n        nextInput.current.focus();\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"12px\",\n        color: \"textSubtle\",\n        children: getIdLabel(ticket.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"12px\",\n        color: \"warning\",\n        children: duplicateWith.length !== 0 && t('Duplicate')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputsContainer, {\n      ref: containerRef,\n      onClick: scrollInputIntoView,\n      focused: focused,\n      isDuplicate: duplicateWith.length !== 0,\n      children: [/*#__PURE__*/_jsxDEV(DigitInput, {\n        ref: digit1,\n        type: \"number\",\n        value: ticket.numbers[0],\n        onKeyDown: e => onChangeHandler(e, 0),\n        placeholder: \"_\",\n        onChange: e => e.preventDefault(),\n        disabled: disabled,\n        onFocus: onFocusHandler,\n        onBlur: onBlurHandler,\n        onPaste: onPasteHandler,\n        inputMode: \"numeric\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DigitInput, {\n        ref: digit2,\n        type: \"number\",\n        value: ticket.numbers[1],\n        onKeyDown: e => onChangeHandler(e, 1),\n        placeholder: \"_\",\n        onChange: e => e.preventDefault(),\n        disabled: disabled,\n        onFocus: onFocusHandler,\n        onBlur: onBlurHandler,\n        onPaste: onPasteHandler,\n        inputMode: \"numeric\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DigitInput, {\n        ref: digit3,\n        type: \"number\",\n        value: ticket.numbers[2],\n        onKeyDown: e => onChangeHandler(e, 2),\n        placeholder: \"_\",\n        onChange: e => e.preventDefault(),\n        disabled: disabled,\n        onFocus: onFocusHandler,\n        onBlur: onBlurHandler,\n        onPaste: onPasteHandler,\n        inputMode: \"numeric\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DigitInput, {\n        ref: digit4,\n        type: \"number\",\n        value: ticket.numbers[3],\n        onKeyDown: e => onChangeHandler(e, 3),\n        placeholder: \"_\",\n        onChange: e => e.preventDefault(),\n        disabled: disabled,\n        onFocus: onFocusHandler,\n        onBlur: onBlurHandler,\n        onPaste: onPasteHandler,\n        inputMode: \"numeric\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DigitInput, {\n        ref: digit5,\n        type: \"number\",\n        value: ticket.numbers[4],\n        onKeyDown: e => onChangeHandler(e, 4),\n        placeholder: \"_\",\n        onChange: e => e.preventDefault(),\n        disabled: disabled,\n        onFocus: onFocusHandler,\n        onBlur: onBlurHandler,\n        onPaste: onPasteHandler,\n        inputMode: \"numeric\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DigitInput, {\n        ref: digit6,\n        type: \"number\",\n        value: ticket.numbers[5],\n        onKeyDown: e => onChangeHandler(e, 5),\n        placeholder: \"_\",\n        onChange: e => e.preventDefault(),\n        disabled: disabled,\n        onFocus: onFocusHandler,\n        onBlur: onBlurHandler,\n        onPaste: onPasteHandler,\n        inputMode: \"numeric\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TicketContaier, \"uGfxuuWQshMN+eteqAr6/eDSOFc=\", false, function () {\n  return [useTranslation];\n});\n\n_c3 = TicketContaier;\nexport default TicketContaier;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"InputsContainer\");\n$RefreshReg$(_c2, \"DigitInput\");\n$RefreshReg$(_c3, \"TicketContaier\");","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/pankcake-frontend/src/views/Lottery/components/BuyTicketsModal/TicketInput.tsx"],"names":["React","useState","useRef","styled","Flex","Text","useTranslation","InputsContainer","div","isDuplicate","focused","DigitInput","input","getIdLabel","id","TicketContaier","ticket","duplicateWith","updateTicket","disabled","setFocused","containerRef","digit1","digit2","digit3","digit4","digit5","digit6","t","digitRefs","scrollInputIntoView","current","scrollIntoView","block","behavior","onPasteHandler","e","preventDefault","pasteContent","clipboardData","getData","length","test","filler","Array","fill","split","onFocusHandler","onBlurHandler","onChangeHandler","event","digitId","currentKey","parseInt","key","includes","newNumbers","numbers","nextDigitId","nextInput","focus","prevDigitId"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Ticket, UpdateTicketAction } from './useTicketsReducer'\n\nconst InputsContainer = styled.div<{ focused: boolean; isDuplicate: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 36px;\n  box-sizing: border-box;\n  border: 1px solid #d7caec;\n  background-color: #eeeaf4;\n  border-radius: 16px;\n  margin-bottom: 8px;\n  ${({ isDuplicate }) =>\n    isDuplicate &&\n    `\n    border: 1px solid #FFB237;\n    box-shadow: 0px 0px 0px 2px #FFB237;\n  `}\n  ${({ focused }) =>\n    focused &&\n    `\n    border: 1px solid #7645D9;\n    box-shadow: 0px 0px 0px 2px #E4DAF7;\n  `}\n`\n\nconst DigitInput = styled.input`\n  border: none;\n  height: 32px;\n  padding: 0 12px;\n  font-size: 16px;\n  flex: 1;\n  width: 16px;\n  text-align: center;\n  min-width: 0;\n  background-color: transparent;\n  caret-color: #7a6faa;\n\n  &::placeholder {\n    text-align: center;\n  }\n\n  &:placeholder-shown {\n    text-align: left;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    /* display: none; <- Crashes Chrome on hover */\n    -webkit-appearance: none;\n    margin: 0; /* <-- Apparently some margin are still there even though it's hidden */\n  }\n\n  -moz-appearance: textfield; /* Firefox */\n`\n\nconst getIdLabel = (id: number): string => {\n  if (id < 10) return `#00${id}`\n  if (id < 100) return `#0${id}`\n  return `#${id}`\n}\n\nconst TicketContaier: React.FC<{\n  ticket: Ticket\n  duplicateWith: number[]\n  updateTicket: UpdateTicketAction\n  disabled: boolean\n}> = ({ ticket, duplicateWith, updateTicket, disabled }) => {\n  const [focused, setFocused] = useState(false)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const digit1 = useRef<HTMLInputElement>(null)\n  const digit2 = useRef<HTMLInputElement>(null)\n  const digit3 = useRef<HTMLInputElement>(null)\n  const digit4 = useRef<HTMLInputElement>(null)\n  const digit5 = useRef<HTMLInputElement>(null)\n  const digit6 = useRef<HTMLInputElement>(null)\n\n  const { t } = useTranslation()\n\n  const digitRefs = [digit1, digit2, digit3, digit4, digit5, digit6]\n\n  const scrollInputIntoView = () => {\n    if (containerRef.current) {\n      containerRef.current.scrollIntoView({ block: 'center', behavior: 'smooth' })\n    }\n  }\n\n  const onPasteHandler = (e: React.ClipboardEvent) => {\n    e.preventDefault()\n    const pasteContent = e.clipboardData.getData('Text')\n    if (pasteContent.length <= 6 && /^\\d+$/.test(pasteContent)) {\n      const filler = Array(6 - pasteContent.length).fill('')\n      updateTicket(ticket.id, [...pasteContent.split(''), ...filler])\n    }\n  }\n\n  const onFocusHandler = () => {\n    scrollInputIntoView()\n    setFocused(true)\n  }\n\n  const onBlurHandler = () => {\n    setFocused(false)\n  }\n\n  const onChangeHandler = (event: React.KeyboardEvent, digitId: number) => {\n    const currentKey = parseInt(event.key, 10)\n\n    if (['e', 'E', '.', ',', '-', 'Unidentified'].includes(event.key)) {\n      event.preventDefault()\n      return\n    }\n\n    // Handling numberic inputs\n    if (currentKey >= 0 && currentKey <= 9) {\n      event.preventDefault()\n      const newNumbers = [...ticket.numbers]\n      newNumbers[digitId] = `${currentKey}`\n      updateTicket(ticket.id, newNumbers)\n      const nextDigitId = digitId + 1\n      // if we're not on the last digit - auto-tab\n      const nextInput = digitRefs[nextDigitId]\n      if (nextDigitId !== 6 && nextInput.current) {\n        nextInput.current.focus()\n      }\n    }\n\n    if (event.key === 'Backspace') {\n      event.preventDefault()\n      // If some number is there - delete the number\n      if (ticket.numbers[digitId]) {\n        const newNumbers = [...ticket.numbers]\n        newNumbers[digitId] = ''\n        updateTicket(ticket.id, newNumbers)\n      } else {\n        // if the cell is empty and user presses backspace - remove previous\n        const prevDigitId = digitId - 1\n        const nextInput = digitRefs[prevDigitId]\n        // prevent focusing on non-existent input\n        if (prevDigitId !== -1 && nextInput.current) {\n          nextInput.current.focus()\n          const newNumbers = [...ticket.numbers]\n          newNumbers[prevDigitId] = ''\n          updateTicket(ticket.id, newNumbers)\n        }\n      }\n    }\n\n    if (event.key === 'Delete') {\n      event.preventDefault()\n      if (ticket.numbers[digitId]) {\n        const newNumbers = [...ticket.numbers]\n        newNumbers[digitId] = ''\n        updateTicket(ticket.id, newNumbers)\n      } else {\n        // if the cell is empty and user presses delete - remove next\n        const nextDigitId = digitId + 1\n        const nextInput = digitRefs[nextDigitId]\n        // prevent focusing on non-existent input\n        if (nextDigitId !== 6 && nextInput.current) {\n          nextInput.current.focus()\n          const newNumbers = [...ticket.numbers]\n          newNumbers[nextDigitId] = ''\n          updateTicket(ticket.id, newNumbers)\n        }\n      }\n    }\n\n    if (event.key === 'ArrowLeft') {\n      event.preventDefault()\n      const prevDigitId = digitId - 1\n      const nextInput = digitRefs[prevDigitId]\n      // prevent focusing on non-existent input\n      if (prevDigitId !== -1 && nextInput.current) {\n        nextInput.current.focus()\n      }\n    }\n\n    if (event.key === 'ArrowRight') {\n      event.preventDefault()\n      const nextDigitId = digitId + 1\n      const nextInput = digitRefs[nextDigitId]\n      // prevent focusing on non-existent input\n      if (nextDigitId !== 6 && nextInput.current) {\n        nextInput.current.focus()\n      }\n    }\n  }\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {getIdLabel(ticket.id)}\n        </Text>\n        <Text fontSize=\"12px\" color=\"warning\">\n          {duplicateWith.length !== 0 && t('Duplicate')}\n        </Text>\n      </Flex>\n      <InputsContainer\n        ref={containerRef}\n        onClick={scrollInputIntoView}\n        focused={focused}\n        isDuplicate={duplicateWith.length !== 0}\n      >\n        <DigitInput\n          ref={digit1}\n          type=\"number\"\n          value={ticket.numbers[0]}\n          onKeyDown={(e: React.KeyboardEvent) => onChangeHandler(e, 0)}\n          placeholder=\"_\"\n          onChange={(e) => e.preventDefault()}\n          disabled={disabled}\n          onFocus={onFocusHandler}\n          onBlur={onBlurHandler}\n          onPaste={onPasteHandler}\n          inputMode=\"numeric\"\n        />\n        <DigitInput\n          ref={digit2}\n          type=\"number\"\n          value={ticket.numbers[1]}\n          onKeyDown={(e: React.KeyboardEvent) => onChangeHandler(e, 1)}\n          placeholder=\"_\"\n          onChange={(e) => e.preventDefault()}\n          disabled={disabled}\n          onFocus={onFocusHandler}\n          onBlur={onBlurHandler}\n          onPaste={onPasteHandler}\n          inputMode=\"numeric\"\n        />\n        <DigitInput\n          ref={digit3}\n          type=\"number\"\n          value={ticket.numbers[2]}\n          onKeyDown={(e: React.KeyboardEvent) => onChangeHandler(e, 2)}\n          placeholder=\"_\"\n          onChange={(e) => e.preventDefault()}\n          disabled={disabled}\n          onFocus={onFocusHandler}\n          onBlur={onBlurHandler}\n          onPaste={onPasteHandler}\n          inputMode=\"numeric\"\n        />\n        <DigitInput\n          ref={digit4}\n          type=\"number\"\n          value={ticket.numbers[3]}\n          onKeyDown={(e: React.KeyboardEvent) => onChangeHandler(e, 3)}\n          placeholder=\"_\"\n          onChange={(e) => e.preventDefault()}\n          disabled={disabled}\n          onFocus={onFocusHandler}\n          onBlur={onBlurHandler}\n          onPaste={onPasteHandler}\n          inputMode=\"numeric\"\n        />\n        <DigitInput\n          ref={digit5}\n          type=\"number\"\n          value={ticket.numbers[4]}\n          onKeyDown={(e: React.KeyboardEvent) => onChangeHandler(e, 4)}\n          placeholder=\"_\"\n          onChange={(e) => e.preventDefault()}\n          disabled={disabled}\n          onFocus={onFocusHandler}\n          onBlur={onBlurHandler}\n          onPaste={onPasteHandler}\n          inputMode=\"numeric\"\n        />\n        <DigitInput\n          ref={digit6}\n          type=\"number\"\n          value={ticket.numbers[5]}\n          onKeyDown={(e: React.KeyboardEvent) => onChangeHandler(e, 5)}\n          placeholder=\"_\"\n          onChange={(e) => e.preventDefault()}\n          disabled={disabled}\n          onFocus={onFocusHandler}\n          onBlur={onBlurHandler}\n          onPaste={onPasteHandler}\n          inputMode=\"numeric\"\n        />\n      </InputsContainer>\n    </>\n  )\n}\n\nexport default TicketContaier\n"]},"metadata":{},"sourceType":"module"}