{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/pancake-frontend/src/views/PoolFinder/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { ETHER, JSBI } from '@pancakeswap/sdk';\nimport { Button, ChevronDownIcon, Text, AddIcon, useModal } from '@pancakeswap/uikit';\nimport styled from 'styled-components';\nimport { useTranslation } from 'contexts/Localization';\nimport { LightCard } from '../../components/Card';\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column';\nimport { CurrencyLogo } from '../../components/Logo';\nimport { MinimalPositionCard } from '../../components/PositionCard';\nimport Row from '../../components/Layout/Row';\nimport CurrencySearchModal from '../../components/SearchModal/CurrencySearchModal';\nimport { PairState, usePair } from '../../hooks/usePairs';\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React';\nimport { usePairAdder } from '../../state/user/hooks';\nimport { useTokenBalance } from '../../state/wallet/hooks';\nimport StyledInternalLink from '../../components/Links';\nimport { currencyId } from '../../utils/currencyId';\nimport Dots from '../../components/Loader/Dots';\nimport { AppHeader, AppBody } from '../../components/App';\nimport Page from '../Page';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Fields;\n\n(function (Fields) {\n  Fields[Fields[\"TOKEN0\"] = 0] = \"TOKEN0\";\n  Fields[Fields[\"TOKEN1\"] = 1] = \"TOKEN1\";\n})(Fields || (Fields = {}));\n\nconst StyledButton = styled(Button)`\n  background-color: ${({\n  theme\n}) => theme.colors.input};\n  color: ${({\n  theme\n}) => theme.colors.text};\n  box-shadow: none;\n  border-radius: 16px;\n`;\n_c = StyledButton;\nexport default function PoolFinder() {\n  _s();\n\n  var _ref;\n\n  const {\n    account\n  } = useActiveWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const [activeField, setActiveField] = useState(Fields.TOKEN1);\n  const [currency0, setCurrency0] = useState(ETHER);\n  const [currency1, setCurrency1] = useState(null);\n  const [pairState, pair] = usePair(currency0 !== null && currency0 !== void 0 ? currency0 : undefined, currency1 !== null && currency1 !== void 0 ? currency1 : undefined);\n  const addPair = usePairAdder();\n  useEffect(() => {\n    if (pair) {\n      addPair(pair);\n    }\n  }, [pair, addPair]);\n  const validPairNoLiquidity = pairState === PairState.NOT_EXISTS || Boolean(pairState === PairState.EXISTS && pair && JSBI.equal(pair.reserve0.raw, JSBI.BigInt(0)) && JSBI.equal(pair.reserve1.raw, JSBI.BigInt(0)));\n  const position = useTokenBalance(account !== null && account !== void 0 ? account : undefined, pair === null || pair === void 0 ? void 0 : pair.liquidityToken);\n  const hasPosition = Boolean(position && JSBI.greaterThan(position.raw, JSBI.BigInt(0)));\n  const handleCurrencySelect = useCallback(currency => {\n    if (activeField === Fields.TOKEN0) {\n      setCurrency0(currency);\n    } else {\n      setCurrency1(currency);\n    }\n  }, [activeField]);\n\n  const prerequisiteMessage = /*#__PURE__*/_jsxDEV(LightCard, {\n    padding: \"45px 10px\",\n    children: /*#__PURE__*/_jsxDEV(Text, {\n      textAlign: \"center\",\n      children: !account ? t('Connect to a wallet to find pools') : t('Select a token to find your liquidity.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n\n  const [onPresentCurrencyModal] = useModal( /*#__PURE__*/_jsxDEV(CurrencySearchModal, {\n    onCurrencySelect: handleCurrencySelect,\n    showCommonBases: true,\n    selectedCurrency: (_ref = activeField === Fields.TOKEN0 ? currency1 : currency0) !== null && _ref !== void 0 ? _ref : undefined\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this), true, true, 'selectCurrencyModal');\n  return /*#__PURE__*/_jsxDEV(Page, {\n    children: /*#__PURE__*/_jsxDEV(AppBody, {\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n        title: t('Import Pool'),\n        subtitle: t('Import an existing pool'),\n        backTo: \"/pool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n        style: {\n          padding: '1rem'\n        },\n        gap: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(StyledButton, {\n          endIcon: /*#__PURE__*/_jsxDEV(ChevronDownIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 22\n          }, this),\n          onClick: () => {\n            onPresentCurrencyModal();\n            setActiveField(Fields.TOKEN0);\n          },\n          children: currency0 ? /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n              currency: currency0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              ml: \"8px\",\n              children: currency0.symbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Text, {\n            ml: \"8px\",\n            children: t('Select a Token')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ColumnCenter, {\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n          endIcon: /*#__PURE__*/_jsxDEV(ChevronDownIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 22\n          }, this),\n          onClick: () => {\n            onPresentCurrencyModal();\n            setActiveField(Fields.TOKEN1);\n          },\n          children: currency1 ? /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n              currency: currency1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              ml: \"8px\",\n              children: currency1.symbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Text, {\n            as: Row,\n            children: t('Select a Token')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), hasPosition && /*#__PURE__*/_jsxDEV(ColumnCenter, {\n          style: {\n            justifyItems: 'center',\n            backgroundColor: '',\n            padding: '12px 0px',\n            borderRadius: '12px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            textAlign: \"center\",\n            children: t('Pool Found!')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n            to: \"/pool\",\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              textAlign: \"center\",\n              children: t('Manage this pool.')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), currency0 && currency1 ? pairState === PairState.EXISTS ? hasPosition && pair ? /*#__PURE__*/_jsxDEV(MinimalPositionCard, {\n          pair: pair\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(LightCard, {\n          padding: \"45px 10px\",\n          children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: \"sm\",\n            justify: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              textAlign: \"center\",\n              children: t('You donâ€™t have liquidity in this pool yet.')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n              to: `/add/${currencyId(currency0)}/${currencyId(currency1)}`,\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                textAlign: \"center\",\n                children: t('Add Liquidity')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }, this) : validPairNoLiquidity ? /*#__PURE__*/_jsxDEV(LightCard, {\n          padding: \"45px 10px\",\n          children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: \"sm\",\n            justify: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              textAlign: \"center\",\n              children: t('No pool found.')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n              to: `/add/${currencyId(currency0)}/${currencyId(currency1)}`,\n              children: t('Create pool.')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this) : pairState === PairState.INVALID ? /*#__PURE__*/_jsxDEV(LightCard, {\n          padding: \"45px 10px\",\n          children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: \"sm\",\n            justify: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              textAlign: \"center\",\n              fontWeight: 500,\n              children: t('Invalid pair.')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this) : pairState === PairState.LOADING ? /*#__PURE__*/_jsxDEV(LightCard, {\n          padding: \"45px 10px\",\n          children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: \"sm\",\n            justify: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              textAlign: \"center\",\n              children: [t('Loading'), /*#__PURE__*/_jsxDEV(Dots, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this) : null : prerequisiteMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PoolFinder, \"JDnxa4VsoRUnqsQ93fEZ85pK9rU=\", false, function () {\n  return [useActiveWeb3React, useTranslation, usePair, usePairAdder, useTokenBalance, useModal];\n});\n\n_c2 = PoolFinder;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledButton\");\n$RefreshReg$(_c2, \"PoolFinder\");","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/src/views/PoolFinder/index.tsx"],"names":["React","useCallback","useEffect","useState","ETHER","JSBI","Button","ChevronDownIcon","Text","AddIcon","useModal","styled","useTranslation","LightCard","AutoColumn","ColumnCenter","CurrencyLogo","MinimalPositionCard","Row","CurrencySearchModal","PairState","usePair","useActiveWeb3React","usePairAdder","useTokenBalance","StyledInternalLink","currencyId","Dots","AppHeader","AppBody","Page","Fields","StyledButton","theme","colors","input","text","PoolFinder","account","t","activeField","setActiveField","TOKEN1","currency0","setCurrency0","currency1","setCurrency1","pairState","pair","undefined","addPair","validPairNoLiquidity","NOT_EXISTS","Boolean","EXISTS","equal","reserve0","raw","BigInt","reserve1","position","liquidityToken","hasPosition","greaterThan","handleCurrencySelect","currency","TOKEN0","prerequisiteMessage","onPresentCurrencyModal","padding","symbol","justifyItems","backgroundColor","borderRadius","INVALID","LOADING"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport { Currency, ETHER, JSBI, TokenAmount } from '@pancakeswap/sdk'\nimport { Button, ChevronDownIcon, Text, AddIcon, useModal } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row from '../../components/Layout/Row'\nimport CurrencySearchModal from '../../components/SearchModal/CurrencySearchModal'\nimport { PairState, usePair } from '../../hooks/usePairs'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { usePairAdder } from '../../state/user/hooks'\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport StyledInternalLink from '../../components/Links'\nimport { currencyId } from '../../utils/currencyId'\nimport Dots from '../../components/Loader/Dots'\nimport { AppHeader, AppBody } from '../../components/App'\nimport Page from '../Page'\n\nenum Fields {\n  TOKEN0 = 0,\n  TOKEN1 = 1,\n}\n\nconst StyledButton = styled(Button)`\n  background-color: ${({ theme }) => theme.colors.input};\n  color: ${({ theme }) => theme.colors.text};\n  box-shadow: none;\n  border-radius: 16px;\n`\n\nexport default function PoolFinder() {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const [activeField, setActiveField] = useState<number>(Fields.TOKEN1)\n  const [currency0, setCurrency0] = useState<Currency | null>(ETHER)\n  const [currency1, setCurrency1] = useState<Currency | null>(null)\n\n  const [pairState, pair] = usePair(currency0 ?? undefined, currency1 ?? undefined)\n  const addPair = usePairAdder()\n  useEffect(() => {\n    if (pair) {\n      addPair(pair)\n    }\n  }, [pair, addPair])\n\n  const validPairNoLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS ||\n    Boolean(\n      pairState === PairState.EXISTS &&\n        pair &&\n        JSBI.equal(pair.reserve0.raw, JSBI.BigInt(0)) &&\n        JSBI.equal(pair.reserve1.raw, JSBI.BigInt(0)),\n    )\n\n  const position: TokenAmount | undefined = useTokenBalance(account ?? undefined, pair?.liquidityToken)\n  const hasPosition = Boolean(position && JSBI.greaterThan(position.raw, JSBI.BigInt(0)))\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      if (activeField === Fields.TOKEN0) {\n        setCurrency0(currency)\n      } else {\n        setCurrency1(currency)\n      }\n    },\n    [activeField],\n  )\n\n  const prerequisiteMessage = (\n    <LightCard padding=\"45px 10px\">\n      <Text textAlign=\"center\">\n        {!account ? t('Connect to a wallet to find pools') : t('Select a token to find your liquidity.')}\n      </Text>\n    </LightCard>\n  )\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={handleCurrencySelect}\n      showCommonBases\n      selectedCurrency={(activeField === Fields.TOKEN0 ? currency1 : currency0) ?? undefined}\n    />,\n    true,\n    true,\n    'selectCurrencyModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Import Pool')} subtitle={t('Import an existing pool')} backTo=\"/pool\" />\n        <AutoColumn style={{ padding: '1rem' }} gap=\"md\">\n          <StyledButton\n            endIcon={<ChevronDownIcon />}\n            onClick={() => {\n              onPresentCurrencyModal()\n              setActiveField(Fields.TOKEN0)\n            }}\n          >\n            {currency0 ? (\n              <Row>\n                <CurrencyLogo currency={currency0} />\n                <Text ml=\"8px\">{currency0.symbol}</Text>\n              </Row>\n            ) : (\n              <Text ml=\"8px\">{t('Select a Token')}</Text>\n            )}\n          </StyledButton>\n\n          <ColumnCenter>\n            <AddIcon />\n          </ColumnCenter>\n\n          <StyledButton\n            endIcon={<ChevronDownIcon />}\n            onClick={() => {\n              onPresentCurrencyModal()\n              setActiveField(Fields.TOKEN1)\n            }}\n          >\n            {currency1 ? (\n              <Row>\n                <CurrencyLogo currency={currency1} />\n                <Text ml=\"8px\">{currency1.symbol}</Text>\n              </Row>\n            ) : (\n              <Text as={Row}>{t('Select a Token')}</Text>\n            )}\n          </StyledButton>\n\n          {hasPosition && (\n            <ColumnCenter\n              style={{ justifyItems: 'center', backgroundColor: '', padding: '12px 0px', borderRadius: '12px' }}\n            >\n              <Text textAlign=\"center\">{t('Pool Found!')}</Text>\n              <StyledInternalLink to=\"/pool\">\n                <Text textAlign=\"center\">{t('Manage this pool.')}</Text>\n              </StyledInternalLink>\n            </ColumnCenter>\n          )}\n\n          {currency0 && currency1 ? (\n            pairState === PairState.EXISTS ? (\n              hasPosition && pair ? (\n                <MinimalPositionCard pair={pair} />\n              ) : (\n                <LightCard padding=\"45px 10px\">\n                  <AutoColumn gap=\"sm\" justify=\"center\">\n                    <Text textAlign=\"center\">{t('You donâ€™t have liquidity in this pool yet.')}</Text>\n                    <StyledInternalLink to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}>\n                      <Text textAlign=\"center\">{t('Add Liquidity')}</Text>\n                    </StyledInternalLink>\n                  </AutoColumn>\n                </LightCard>\n              )\n            ) : validPairNoLiquidity ? (\n              <LightCard padding=\"45px 10px\">\n                <AutoColumn gap=\"sm\" justify=\"center\">\n                  <Text textAlign=\"center\">{t('No pool found.')}</Text>\n                  <StyledInternalLink to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}>\n                    {t('Create pool.')}\n                  </StyledInternalLink>\n                </AutoColumn>\n              </LightCard>\n            ) : pairState === PairState.INVALID ? (\n              <LightCard padding=\"45px 10px\">\n                <AutoColumn gap=\"sm\" justify=\"center\">\n                  <Text textAlign=\"center\" fontWeight={500}>\n                    {t('Invalid pair.')}\n                  </Text>\n                </AutoColumn>\n              </LightCard>\n            ) : pairState === PairState.LOADING ? (\n              <LightCard padding=\"45px 10px\">\n                <AutoColumn gap=\"sm\" justify=\"center\">\n                  <Text textAlign=\"center\">\n                    {t('Loading')}\n                    <Dots />\n                  </Text>\n                </AutoColumn>\n              </LightCard>\n            ) : null\n          ) : (\n            prerequisiteMessage\n          )}\n        </AutoColumn>\n\n        {/* <CurrencySearchModal\n          isOpen={showSearch}\n          onCurrencySelect={handleCurrencySelect}\n          onDismiss={handleSearchDismiss}\n          showCommonBases\n          selectedCurrency={(activeField === Fields.TOKEN0 ? currency1 : currency0) ?? undefined}\n        /> */}\n      </AppBody>\n    </Page>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}