{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/views/Home/components/CakeDataRow.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance';\nimport { getCakeAddress } from 'utils/addressHelpers';\nimport { getBalanceNumber, formatLocalisedCompactNumber } from 'utils/formatBalance';\nimport { usePriceCakeBusd } from 'state/farms/hooks';\nimport { Flex, Text, Heading, Skeleton } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport Balance from 'components/Balance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledColumn = styled(Flex)`\n  flex-direction: column;\n  ${({\n  noMobileBorder,\n  theme\n}) => noMobileBorder ? `${theme.mediaQueries.md} {\n           padding: 0 16px;\n           border-left: 1px ${theme.colors.inputSecondary} solid;\n         }\n       ` : `border-left: 1px ${theme.colors.inputSecondary} solid;\n         padding: 0 8px;\n         ${theme.mediaQueries.sm} {\n           padding: 0 16px;\n         }\n       `}\n`;\n_c = StyledColumn;\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 8px;\n  margin-top: 24px;\n  grid-template-columns: repeat(2, auto);\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    grid-gap: 16px;\n  }\n\n  ${({\n  theme\n}) => theme.mediaQueries.md} {\n    grid-gap: 32px;\n    grid-template-columns: repeat(4, auto);\n  }\n`;\n_c2 = Grid;\nconst emissionsPerBlock = 19;\n\nconst CakeDataRow = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const totalSupply = useTotalSupply();\n  const burnedBalance = getBalanceNumber(useBurnedBalance(getCakeAddress()));\n  const cakeSupply = totalSupply ? getBalanceNumber(totalSupply) - burnedBalance : 0;\n  const cakePriceBusd = usePriceCakeBusd();\n  const mcap = cakePriceBusd.times(cakeSupply);\n  const mcapString = formatLocalisedCompactNumber(mcap.toNumber());\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        color: \"textSubtle\",\n        children: t('Total supply')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), cakeSupply ? /*#__PURE__*/_jsxDEV(Balance, {\n        decimals: 0,\n        lineHeight: \"1.1\",\n        fontSize: \"24px\",\n        bold: true,\n        value: cakeSupply\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        height: 24,\n        width: 126,\n        my: \"4px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledColumn, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        color: \"textSubtle\",\n        children: t('Burned to date')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), burnedBalance ? /*#__PURE__*/_jsxDEV(Balance, {\n        decimals: 0,\n        lineHeight: \"1.1\",\n        fontSize: \"24px\",\n        bold: true,\n        value: burnedBalance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        height: 24,\n        width: 126,\n        my: \"4px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledColumn, {\n      noMobileBorder: true,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        color: \"textSubtle\",\n        children: t('Market cap')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), (mcap === null || mcap === void 0 ? void 0 : mcap.gt(0)) && mcapString ? /*#__PURE__*/_jsxDEV(Heading, {\n        scale: \"lg\",\n        children: t('$%marketCap%', {\n          marketCap: mcapString\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        height: 24,\n        width: 126,\n        my: \"4px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledColumn, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        color: \"textSubtle\",\n        children: t('Current emissions')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        scale: \"lg\",\n        children: t('%cakeEmissions%/block', {\n          cakeEmissions: emissionsPerBlock\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CakeDataRow, \"OG3CAy2WB8zCzUq6ot5MtGhB1WY=\", false, function () {\n  return [useTranslation, useTotalSupply, useBurnedBalance, usePriceCakeBusd];\n});\n\n_c3 = CakeDataRow;\nexport default CakeDataRow;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledColumn\");\n$RefreshReg$(_c2, \"Grid\");\n$RefreshReg$(_c3, \"CakeDataRow\");","map":{"version":3,"sources":["/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/views/Home/components/CakeDataRow.tsx"],"names":["React","styled","useTotalSupply","useBurnedBalance","getCakeAddress","getBalanceNumber","formatLocalisedCompactNumber","usePriceCakeBusd","Flex","Text","Heading","Skeleton","useTranslation","Balance","StyledColumn","noMobileBorder","theme","mediaQueries","md","colors","inputSecondary","sm","Grid","div","emissionsPerBlock","CakeDataRow","t","totalSupply","burnedBalance","cakeSupply","cakePriceBusd","mcap","times","mcapString","toNumber","gt","marketCap","cakeEmissions"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber, formatLocalisedCompactNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { Flex, Text, Heading, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\nconst StyledColumn = styled(Flex)<{ noMobileBorder?: boolean }>`\n  flex-direction: column;\n  ${({ noMobileBorder, theme }) =>\n    noMobileBorder\n      ? `${theme.mediaQueries.md} {\n           padding: 0 16px;\n           border-left: 1px ${theme.colors.inputSecondary} solid;\n         }\n       `\n      : `border-left: 1px ${theme.colors.inputSecondary} solid;\n         padding: 0 8px;\n         ${theme.mediaQueries.sm} {\n           padding: 0 16px;\n         }\n       `}\n`\n\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 8px;\n  margin-top: 24px;\n  grid-template-columns: repeat(2, auto);\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 16px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-gap: 32px;\n    grid-template-columns: repeat(4, auto);\n  }\n`\n\nconst emissionsPerBlock = 19\n\nconst CakeDataRow = () => {\n  const { t } = useTranslation()\n  const totalSupply = useTotalSupply()\n  const burnedBalance = getBalanceNumber(useBurnedBalance(getCakeAddress()))\n  const cakeSupply = totalSupply ? getBalanceNumber(totalSupply) - burnedBalance : 0\n  const cakePriceBusd = usePriceCakeBusd()\n  const mcap = cakePriceBusd.times(cakeSupply)\n  const mcapString = formatLocalisedCompactNumber(mcap.toNumber())\n\n  return (\n    <Grid>\n      <Flex flexDirection=\"column\">\n        <Text color=\"textSubtle\">{t('Total supply')}</Text>\n        {cakeSupply ? (\n          <Balance decimals={0} lineHeight=\"1.1\" fontSize=\"24px\" bold value={cakeSupply} />\n        ) : (\n          <Skeleton height={24} width={126} my=\"4px\" />\n        )}\n      </Flex>\n      <StyledColumn>\n        <Text color=\"textSubtle\">{t('Burned to date')}</Text>\n        {burnedBalance ? (\n          <Balance decimals={0} lineHeight=\"1.1\" fontSize=\"24px\" bold value={burnedBalance} />\n        ) : (\n          <Skeleton height={24} width={126} my=\"4px\" />\n        )}\n      </StyledColumn>\n      <StyledColumn noMobileBorder>\n        <Text color=\"textSubtle\">{t('Market cap')}</Text>\n        {mcap?.gt(0) && mcapString ? (\n          <Heading scale=\"lg\">{t('$%marketCap%', { marketCap: mcapString })}</Heading>\n        ) : (\n          <Skeleton height={24} width={126} my=\"4px\" />\n        )}\n      </StyledColumn>\n      <StyledColumn>\n        <Text color=\"textSubtle\">{t('Current emissions')}</Text>\n\n        <Heading scale=\"lg\">{t('%cakeEmissions%/block', { cakeEmissions: emissionsPerBlock })}</Heading>\n      </StyledColumn>\n    </Grid>\n  )\n}\n\nexport default CakeDataRow\n"]},"metadata":{},"sourceType":"module"}