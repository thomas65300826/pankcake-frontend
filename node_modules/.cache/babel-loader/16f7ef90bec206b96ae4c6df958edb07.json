{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useGetCurrentRoundBlockNumber, useGetIntervalBlocks } from 'state/predictions/hooks';\nimport useBlockCountdown from 'hooks/useGetBlockCountdown';\n/**\n * Returns a countdown in seconds of a given block\n */\n\nconst useRoundCountdown = (intervalsToAdd = 1) => {\n  _s();\n\n  const interval = useGetIntervalBlocks();\n  const currentRoundBlockNum = useGetCurrentRoundBlockNumber();\n  const blocksToAdd = intervalsToAdd * interval;\n  const seconds = useBlockCountdown(currentRoundBlockNum + blocksToAdd);\n  return seconds;\n};\n\n_s(useRoundCountdown, \"OHiZxaZ3wV3fX630LKQwIIMvH9c=\", false, function () {\n  return [useGetIntervalBlocks, useGetCurrentRoundBlockNumber, useBlockCountdown];\n});\n\nexport default useRoundCountdown;","map":{"version":3,"sources":["/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/views/Predictions/hooks/useRoundCountdown.ts"],"names":["useGetCurrentRoundBlockNumber","useGetIntervalBlocks","useBlockCountdown","useRoundCountdown","intervalsToAdd","interval","currentRoundBlockNum","blocksToAdd","seconds"],"mappings":";;AAAA,SAASA,6BAAT,EAAwCC,oBAAxC,QAAoE,yBAApE;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AAEA;AACA;AACA;;AACA,MAAMC,iBAAiB,GAAG,CAACC,cAAc,GAAG,CAAlB,KAAwB;AAAA;;AAChD,QAAMC,QAAQ,GAAGJ,oBAAoB,EAArC;AACA,QAAMK,oBAAoB,GAAGN,6BAA6B,EAA1D;AACA,QAAMO,WAAW,GAAGH,cAAc,GAAGC,QAArC;AACA,QAAMG,OAAO,GAAGN,iBAAiB,CAACI,oBAAoB,GAAGC,WAAxB,CAAjC;AAEA,SAAOC,OAAP;AACD,CAPD;;GAAML,iB;UACaF,oB,EACYD,6B,EAEbE,iB;;;AAKlB,eAAeC,iBAAf","sourcesContent":["import { useGetCurrentRoundBlockNumber, useGetIntervalBlocks } from 'state/predictions/hooks'\nimport useBlockCountdown from 'hooks/useGetBlockCountdown'\n\n/**\n * Returns a countdown in seconds of a given block\n */\nconst useRoundCountdown = (intervalsToAdd = 1) => {\n  const interval = useGetIntervalBlocks()\n  const currentRoundBlockNum = useGetCurrentRoundBlockNumber()\n  const blocksToAdd = intervalsToAdd * interval\n  const seconds = useBlockCountdown(currentRoundBlockNum + blocksToAdd)\n\n  return seconds\n}\n\nexport default useRoundCountdown\n"]},"metadata":{},"sourceType":"module"}