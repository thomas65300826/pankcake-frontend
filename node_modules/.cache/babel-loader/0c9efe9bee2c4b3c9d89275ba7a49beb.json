{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/pancake-frontend/src/views/FarmAuction/components/TabToggle.tsx\";\nimport React from 'react';\nimport { Flex } from '@pancakeswap/uikit';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled(Flex)`\n  overflow-x: scroll;\n  padding: 0;\n  border-radius: 24px 24px 0 0;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  scrollbar-width: none; /* Firefox */\n`;\n_c = Wrapper;\nconst Inner = styled(Flex)`\n  justify-content: space-between;\n  background-color: ${({\n  theme\n}) => theme.colors.input};\n  width: 100%;\n`;\n_c2 = Inner;\nexport const TabToggle = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  cursor: pointer;\n  flex: 1;\n  border: 0;\n  outline: 0;\n  flex-grow: 1;\n  padding: 16px;\n  margin: 0;\n  border-radius: 24px 24px 0 0;\n  font-size: 16px;\n  font-weight: 600;\n  color: ${({\n  theme,\n  isActive\n}) => isActive ? theme.colors.text : theme.colors.textSubtle};\n  background-color: ${({\n  theme,\n  isActive\n}) => isActive ? theme.card.background : theme.colors.input};\n`;\n// There is very similar component on Info site, once we migrate it we can refactor them and put into UIKit.\n// UIKit has TabMenu component which is kinda similar but quite different in visuals and usage.\nexport const TabToggleGroup = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    p: ['0 4px', '0 16px'],\n    children: /*#__PURE__*/_jsxDEV(Inner, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_c3 = TabToggleGroup;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Inner\");\n$RefreshReg$(_c3, \"TabToggleGroup\");","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/src/views/FarmAuction/components/TabToggle.tsx"],"names":["React","Flex","styled","Wrapper","Inner","theme","colors","input","TabToggle","button","isActive","text","textSubtle","card","background","TabToggleGroup","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACD,IAAD,CAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;KAAME,O;AAUN,MAAMC,KAAK,GAAGF,MAAM,CAACD,IAAD,CAAO;AAC3B;AACA,sBAAsB,CAAC;AAAEI,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,KAAM;AACxD;AACA,CAJA;MAAMH,K;AAWN,OAAO,MAAMI,SAAS,GAAGN,MAAM,CAACO,MAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,CAAC;AAAEJ,EAAAA,KAAF;AAASK,EAAAA;AAAT,CAAD,KAA0BA,QAAQ,GAAGL,KAAK,CAACC,MAAN,CAAaK,IAAhB,GAAuBN,KAAK,CAACC,MAAN,CAAaM,UAAY;AAC7F,sBAAsB,CAAC;AAAEP,EAAAA,KAAF;AAASK,EAAAA;AAAT,CAAD,KAA0BA,QAAQ,GAAGL,KAAK,CAACQ,IAAN,CAAWC,UAAd,GAA2BT,KAAK,CAACC,MAAN,CAAaC,KAAO;AACvG,CAfO;AAqBP;AACA;AACA,OAAO,MAAMQ,cAA6C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC7E,sBACE,QAAC,OAAD;AAAS,IAAA,CAAC,EAAE,CAAC,OAAD,EAAU,QAAV,CAAZ;AAAA,2BACE,QAAC,KAAD;AAAA,gBAAQA;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CANM;MAAMD,c","sourcesContent":["import React from 'react'\nimport { Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst Wrapper = styled(Flex)`\n  overflow-x: scroll;\n  padding: 0;\n  border-radius: 24px 24px 0 0;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  scrollbar-width: none; /* Firefox */\n`\n\nconst Inner = styled(Flex)`\n  justify-content: space-between;\n  background-color: ${({ theme }) => theme.colors.input};\n  width: 100%;\n`\n\ninterface TabProps {\n  isActive?: boolean\n  onClick?: () => void\n}\n\nexport const TabToggle = styled.button<TabProps>`\n  display: inline-flex;\n  justify-content: center;\n  cursor: pointer;\n  flex: 1;\n  border: 0;\n  outline: 0;\n  flex-grow: 1;\n  padding: 16px;\n  margin: 0;\n  border-radius: 24px 24px 0 0;\n  font-size: 16px;\n  font-weight: 600;\n  color: ${({ theme, isActive }) => (isActive ? theme.colors.text : theme.colors.textSubtle)};\n  background-color: ${({ theme, isActive }) => (isActive ? theme.card.background : theme.colors.input)};\n`\n\ninterface TabToggleGroupProps {\n  children: React.ReactElement[]\n}\n\n// There is very similar component on Info site, once we migrate it we can refactor them and put into UIKit.\n// UIKit has TabMenu component which is kinda similar but quite different in visuals and usage.\nexport const TabToggleGroup: React.FC<TabToggleGroupProps> = ({ children }) => {\n  return (\n    <Wrapper p={['0 4px', '0 16px']}>\n      <Inner>{children}</Inner>\n    </Wrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}