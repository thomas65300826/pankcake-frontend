{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/pancake-frontend/pankcake-frontend/src/views/Lottery/components/BuyTicketsModal/EditNumbersModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Modal, Text, Flex, Button, ArrowBackIcon, AutoRenewIcon } from '@pancakeswap/uikit';\nimport useTheme from 'hooks/useTheme';\nimport { useTranslation } from 'contexts/Localization';\nimport TicketInput from './TicketInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledModal = styled(Modal)`\n  min-width: 280px;\n  max-width: 320px;\n  max-height: 552px;\n\n  & div:nth-child(2) {\n    padding: 0;\n  }\n`;\n_c = StyledModal;\nconst ScrollableContainer = styled.div`\n  height: 310px;\n  overflow-y: scroll;\n  border-bottom: ${({\n  theme\n}) => `1px solid ${theme.colors.cardBorder}`};\n  padding: 24px;\n`;\n_c2 = ScrollableContainer;\n\nconst EditNumbersModal = ({\n  totalCost,\n  updateTicket,\n  randomize,\n  tickets,\n  allComplete,\n  onConfirm,\n  isConfirming,\n  onDismiss\n}) => {\n  _s();\n\n  const {\n    theme\n  } = useTheme();\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(StyledModal, {\n    title: t('Edit numbers'),\n    onDismiss: onDismiss,\n    headerBackground: theme.colors.gradients.cardHeader,\n    onBack: onDismiss,\n    children: [/*#__PURE__*/_jsxDEV(ScrollableContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        mb: \"16px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          color: \"textSubtle\",\n          children: [t('Total cost'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"~\", totalCost, \" CAKE\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"12px\",\n        color: \"textSubtle\",\n        mb: \"16px\",\n        children: t('Numbers are randomized, with no duplicates among your tickets. Tap a number to edit it. Available digits: 0-9')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: isConfirming,\n        mb: \"16px\",\n        variant: \"secondary\",\n        width: \"100%\",\n        height: \"32px\",\n        onClick: randomize,\n        children: t('Randomize')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), tickets.map(ticket => /*#__PURE__*/_jsxDEV(TicketInput, {\n        ticket: ticket,\n        duplicateWith: ticket.duplicateWith,\n        updateTicket: updateTicket,\n        disabled: isConfirming\n      }, ticket.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      m: \"24px\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        id: \"lotteryBuyEdited\",\n        disabled: !allComplete || isConfirming,\n        endIcon: isConfirming ? /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n          spin: true,\n          color: \"currentColor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 35\n        }, this) : undefined,\n        onClick: () => {\n          onConfirm();\n        },\n        children: isConfirming ? t('Confirming') : t('Confirm and buy')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        mt: \"8px\",\n        variant: isConfirming ? 'secondary' : 'text',\n        disabled: isConfirming,\n        onClick: onDismiss,\n        children: [/*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n          color: isConfirming ? 'disabled' : 'primary',\n          height: \"24px\",\n          width: \"24px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), \" \", t('Go back')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditNumbersModal, \"eHgKBHrFsiL13ntY1p4YA16P+C4=\", false, function () {\n  return [useTheme, useTranslation];\n});\n\n_c3 = EditNumbersModal;\nexport default EditNumbersModal;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledModal\");\n$RefreshReg$(_c2, \"ScrollableContainer\");\n$RefreshReg$(_c3, \"EditNumbersModal\");","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/pankcake-frontend/src/views/Lottery/components/BuyTicketsModal/EditNumbersModal.tsx"],"names":["React","styled","Modal","Text","Flex","Button","ArrowBackIcon","AutoRenewIcon","useTheme","useTranslation","TicketInput","StyledModal","ScrollableContainer","div","theme","colors","cardBorder","EditNumbersModal","totalCost","updateTicket","randomize","tickets","allComplete","onConfirm","isConfirming","onDismiss","t","gradients","cardHeader","map","ticket","duplicateWith","id","undefined"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, ArrowBackIcon, AutoRenewIcon } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { useTranslation } from 'contexts/Localization'\nimport TicketInput from './TicketInput'\nimport { UpdateTicketAction, Ticket } from './useTicketsReducer'\n\nconst StyledModal = styled(Modal)`\n  min-width: 280px;\n  max-width: 320px;\n  max-height: 552px;\n\n  & div:nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst ScrollableContainer = styled.div`\n  height: 310px;\n  overflow-y: scroll;\n  border-bottom: ${({ theme }) => `1px solid ${theme.colors.cardBorder}`};\n  padding: 24px;\n`\n\nconst EditNumbersModal: React.FC<{\n  totalCost: string\n  updateTicket: UpdateTicketAction\n  randomize: () => void\n  tickets: Ticket[]\n  allComplete: boolean\n  onConfirm: () => void\n  isConfirming: boolean\n  onDismiss?: () => void\n}> = ({ totalCost, updateTicket, randomize, tickets, allComplete, onConfirm, isConfirming, onDismiss }) => {\n  const { theme } = useTheme()\n  const { t } = useTranslation()\n  return (\n    <StyledModal\n      title={t('Edit numbers')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n      onBack={onDismiss}\n    >\n      <ScrollableContainer>\n        <Flex justifyContent=\"space-between\" mb=\"16px\">\n          <Text color=\"textSubtle\">{t('Total cost')}:</Text>\n          <Text>~{totalCost} CAKE</Text>\n        </Flex>\n        <Text fontSize=\"12px\" color=\"textSubtle\" mb=\"16px\">\n          {t(\n            'Numbers are randomized, with no duplicates among your tickets. Tap a number to edit it. Available digits: 0-9',\n          )}\n        </Text>\n        <Button disabled={isConfirming} mb=\"16px\" variant=\"secondary\" width=\"100%\" height=\"32px\" onClick={randomize}>\n          {t('Randomize')}\n        </Button>\n        {tickets.map((ticket) => (\n          <TicketInput\n            key={ticket.id}\n            ticket={ticket}\n            duplicateWith={ticket.duplicateWith}\n            updateTicket={updateTicket}\n            disabled={isConfirming}\n          />\n        ))}\n      </ScrollableContainer>\n      <Flex flexDirection=\"column\" justifyContent=\"center\" m=\"24px\">\n        <Button\n          id=\"lotteryBuyEdited\"\n          disabled={!allComplete || isConfirming}\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n          onClick={() => {\n            onConfirm()\n          }}\n        >\n          {isConfirming ? t('Confirming') : t('Confirm and buy')}\n        </Button>\n        <Button mt=\"8px\" variant={isConfirming ? 'secondary' : 'text'} disabled={isConfirming} onClick={onDismiss}>\n          <ArrowBackIcon color={isConfirming ? 'disabled' : 'primary'} height=\"24px\" width=\"24px\" /> {t('Go back')}\n        </Button>\n      </Flex>\n    </StyledModal>\n  )\n}\n\nexport default EditNumbersModal\n"]},"metadata":{},"sourceType":"module"}