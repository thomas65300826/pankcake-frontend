{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/pancake-frontend/src/views/FarmAuction/components/AuctionLeaderboard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Text, Card, Flex, Box, Spinner } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { AuctionStatus } from 'config/constants/types';\nimport { TabToggleGroup, TabToggle } from '../TabToggle';\nimport AuctionHistory from '../AuctionHistory';\nimport AuctionProgress from './AuctionProgress';\nimport AuctionRibbon from './AuctionRibbon';\nimport AuctionLeaderboardTable from './AuctionLeaderboardTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuctionLeaderboardCard = styled(Card)`\n  width: 100%;\n  overflow: visible;\n  flex: 2;\n`;\n_c = AuctionLeaderboardCard;\nvar Tabs;\n\n(function (Tabs) {\n  Tabs[Tabs[\"Latest\"] = 0] = \"Latest\";\n  Tabs[Tabs[\"Archive\"] = 1] = \"Archive\";\n})(Tabs || (Tabs = {}));\n\nconst getMostRecentClosedAuctionId = (latestAuctionId, latestAuctionStatus) => {\n  if (latestAuctionStatus === AuctionStatus.Closed) {\n    return latestAuctionId;\n  }\n\n  if (latestAuctionId === 0) {\n    return null;\n  }\n\n  return latestAuctionId - 1;\n};\n\nconst CurrentAuctionCard = ({\n  auction,\n  bidders\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [activeTab, setActiveTab] = useState(Tabs.Latest);\n\n  if (!auction || !bidders) {\n    return /*#__PURE__*/_jsxDEV(AuctionLeaderboardCard, {\n      children: [/*#__PURE__*/_jsxDEV(TabToggleGroup, {\n        children: [/*#__PURE__*/_jsxDEV(TabToggle, {\n          isActive: activeTab === Tabs.Latest,\n          onClick: () => setActiveTab(Tabs.Latest),\n          children: t('Latest')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabToggle, {\n          isActive: activeTab === Tabs.Archive,\n          onClick: () => setActiveTab(Tabs.Archive),\n          children: t('Archive')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        height: \"320px\",\n        children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n  const {\n    id,\n    status\n  } = auction;\n  return /*#__PURE__*/_jsxDEV(AuctionLeaderboardCard, {\n    children: [/*#__PURE__*/_jsxDEV(TabToggleGroup, {\n      children: [/*#__PURE__*/_jsxDEV(TabToggle, {\n        isActive: activeTab === Tabs.Latest,\n        onClick: () => setActiveTab(Tabs.Latest),\n        children: t('Latest')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabToggle, {\n        isActive: activeTab === Tabs.Archive,\n        onClick: () => setActiveTab(Tabs.Archive),\n        children: t('Archive')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), activeTab === Tabs.Latest ? /*#__PURE__*/_jsxDEV(Box, {\n      position: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        fontSize: \"20px\",\n        py: \"24px\",\n        px: ['12px', '24px'],\n        children: t('Auction #%auctionId%', {\n          auctionId: id\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AuctionRibbon, {\n        auction: auction,\n        noAuctionHistory: getMostRecentClosedAuctionId(id, status) === null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AuctionProgress, {\n        auction: auction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AuctionLeaderboardTable, {\n        bidders: bidders,\n        noBidsText: \"No bids yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(AuctionHistory, {\n      mostRecentClosedAuctionId: getMostRecentClosedAuctionId(id, status)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CurrentAuctionCard, \"BjlFokE0Q8qfQ6kE30wIejQB17c=\", false, function () {\n  return [useTranslation];\n});\n\n_c2 = CurrentAuctionCard;\nexport default CurrentAuctionCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AuctionLeaderboardCard\");\n$RefreshReg$(_c2, \"CurrentAuctionCard\");","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/src/views/FarmAuction/components/AuctionLeaderboard/index.tsx"],"names":["React","useState","styled","Text","Card","Flex","Box","Spinner","useTranslation","AuctionStatus","TabToggleGroup","TabToggle","AuctionHistory","AuctionProgress","AuctionRibbon","AuctionLeaderboardTable","AuctionLeaderboardCard","Tabs","getMostRecentClosedAuctionId","latestAuctionId","latestAuctionStatus","Closed","CurrentAuctionCard","auction","bidders","t","activeTab","setActiveTab","Latest","Archive","id","status","auctionId"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Card, Flex, Box, Spinner } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus, Bidder } from 'config/constants/types'\nimport { TabToggleGroup, TabToggle } from '../TabToggle'\nimport AuctionHistory from '../AuctionHistory'\nimport AuctionProgress from './AuctionProgress'\nimport AuctionRibbon from './AuctionRibbon'\nimport AuctionLeaderboardTable from './AuctionLeaderboardTable'\n\nconst AuctionLeaderboardCard = styled(Card)`\n  width: 100%;\n  overflow: visible;\n  flex: 2;\n`\n\ninterface AuctionLeaderboardProps {\n  auction: Auction\n  bidders: Bidder[]\n}\n\nenum Tabs {\n  Latest,\n  Archive,\n}\n\nconst getMostRecentClosedAuctionId = (latestAuctionId: number, latestAuctionStatus: AuctionStatus) => {\n  if (latestAuctionStatus === AuctionStatus.Closed) {\n    return latestAuctionId\n  }\n  if (latestAuctionId === 0) {\n    return null\n  }\n  return latestAuctionId - 1\n}\n\nconst CurrentAuctionCard: React.FC<AuctionLeaderboardProps> = ({ auction, bidders }) => {\n  const { t } = useTranslation()\n  const [activeTab, setActiveTab] = useState(Tabs.Latest)\n\n  if (!auction || !bidders) {\n    return (\n      <AuctionLeaderboardCard>\n        <TabToggleGroup>\n          <TabToggle isActive={activeTab === Tabs.Latest} onClick={() => setActiveTab(Tabs.Latest)}>\n            {t('Latest')}\n          </TabToggle>\n          <TabToggle isActive={activeTab === Tabs.Archive} onClick={() => setActiveTab(Tabs.Archive)}>\n            {t('Archive')}\n          </TabToggle>\n        </TabToggleGroup>\n        <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\" height=\"320px\">\n          <Spinner />\n        </Flex>\n      </AuctionLeaderboardCard>\n    )\n  }\n  const { id, status } = auction\n\n  return (\n    <AuctionLeaderboardCard>\n      <TabToggleGroup>\n        <TabToggle isActive={activeTab === Tabs.Latest} onClick={() => setActiveTab(Tabs.Latest)}>\n          {t('Latest')}\n        </TabToggle>\n        <TabToggle isActive={activeTab === Tabs.Archive} onClick={() => setActiveTab(Tabs.Archive)}>\n          {t('Archive')}\n        </TabToggle>\n      </TabToggleGroup>\n      {activeTab === Tabs.Latest ? (\n        <Box position=\"relative\">\n          <Text bold fontSize=\"20px\" py=\"24px\" px={['12px', '24px']}>\n            {t('Auction #%auctionId%', { auctionId: id })}\n          </Text>\n          <AuctionRibbon auction={auction} noAuctionHistory={getMostRecentClosedAuctionId(id, status) === null} />\n          <AuctionProgress auction={auction} />\n          <AuctionLeaderboardTable bidders={bidders} noBidsText=\"No bids yet\" />\n        </Box>\n      ) : (\n        <AuctionHistory mostRecentClosedAuctionId={getMostRecentClosedAuctionId(id, status)} />\n      )}\n    </AuctionLeaderboardCard>\n  )\n}\n\nexport default CurrentAuctionCard\n"]},"metadata":{},"sourceType":"module"}