{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { updateBlockNumber } from './actions';\nconst initialState = {\n  blockNumber: {}\n};\nexport default createReducer(initialState, builder => builder.addCase(updateBlockNumber, (state, action) => {\n  const {\n    chainId,\n    blockNumber\n  } = action.payload;\n\n  if (typeof state.blockNumber[chainId] !== 'number') {\n    state.blockNumber[chainId] = blockNumber;\n  } else {\n    state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId]);\n  }\n}));","map":{"version":3,"sources":["/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/state/application/reducer.ts"],"names":["createReducer","updateBlockNumber","initialState","blockNumber","builder","addCase","state","action","chainId","payload","Math","max"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,iBAAT,QAAkC,WAAlC;AAMA,MAAMC,YAA8B,GAAG;AACrCC,EAAAA,WAAW,EAAE;AADwB,CAAvC;AAIA,eAAeH,aAAa,CAACE,YAAD,EAAgBE,OAAD,IACzCA,OAAO,CAACC,OAAR,CAAgBJ,iBAAhB,EAAmC,CAACK,KAAD,EAAQC,MAAR,KAAmB;AACpD,QAAM;AAAEC,IAAAA,OAAF;AAAWL,IAAAA;AAAX,MAA2BI,MAAM,CAACE,OAAxC;;AACA,MAAI,OAAOH,KAAK,CAACH,WAAN,CAAkBK,OAAlB,CAAP,KAAsC,QAA1C,EAAoD;AAClDF,IAAAA,KAAK,CAACH,WAAN,CAAkBK,OAAlB,IAA6BL,WAA7B;AACD,GAFD,MAEO;AACLG,IAAAA,KAAK,CAACH,WAAN,CAAkBK,OAAlB,IAA6BE,IAAI,CAACC,GAAL,CAASR,WAAT,EAAsBG,KAAK,CAACH,WAAN,CAAkBK,OAAlB,CAAtB,CAA7B;AACD;AACF,CAPD,CAD0B,CAA5B","sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport { updateBlockNumber } from './actions'\n\nexport interface ApplicationState {\n  readonly blockNumber: { readonly [chainId: number]: number }\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder.addCase(updateBlockNumber, (state, action) => {\n    const { chainId, blockNumber } = action.payload\n    if (typeof state.blockNumber[chainId] !== 'number') {\n      state.blockNumber[chainId] = blockNumber\n    } else {\n      state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n    }\n  }),\n)\n"]},"metadata":{},"sourceType":"module"}