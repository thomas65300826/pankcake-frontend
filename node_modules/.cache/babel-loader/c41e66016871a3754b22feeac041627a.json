{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/pancake-frontend/src/views/Predictions/components/Label.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { useCountUp } from 'react-countup';\nimport styled from 'styled-components';\nimport { BnbUsdtPairTokenIcon, Box, Card, PocketWatchIcon, Text } from '@pancakeswap/uikit';\nimport { formatBigNumberToFixed } from 'utils/formatBalance';\nimport { useGetLastOraclePrice } from 'state/predictions/hooks';\nimport { useTranslation } from 'contexts/Localization';\nimport { formatRoundTime } from '../helpers';\nimport useRoundCountdown from '../hooks/useRoundCountdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Token = styled(Box)`\n  margin-top: -24px;\n  position: absolute;\n  top: 50%;\n  z-index: 30;\n\n  & > svg {\n    height: 48px;\n    width: 48px;\n  }\n\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    margin-top: -32px;\n\n    & > svg {\n      height: 64px;\n      width: 64px;\n    }\n  }\n`;\n_c = Token;\nconst Title = styled(Text)`\n  font-size: 16px;\n  line-height: 21px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    font-size: 20px;\n    line-height: 22px;\n  }\n`;\n_c2 = Title;\nconst Price = styled(Text)`\n  height: 18px;\n  justify-self: start;\n  width: 70px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    text-align: center;\n  }\n`;\n_c3 = Price;\nconst Interval = styled(Text)`\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    text-align: center;\n    width: 32px;\n  }\n`;\n_c4 = Interval;\nconst Label = styled(Card)`\n  align-items: ${({\n  dir\n}) => dir === 'right' ? 'flex-end' : 'flex-start'};\n  border-radius: ${({\n  dir\n}) => dir === 'right' ? '8px 8px 8px 24px' : '8px 8px 24px 8px'};\n  display: flex;\n  flex-direction: column;\n  overflow: initial;\n  padding: ${({\n  dir\n}) => dir === 'right' ? '0 28px 0 8px' : '0 8px 0 24px'};\n\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    align-items: center;\n    border-radius: 16px;\n    flex-direction: row;\n    padding: ${({\n  dir\n}) => dir === 'right' ? '8px 40px 8px 8px' : '8px 8px 8px 40px'};\n  }\n`;\n_c5 = Label;\nexport const PricePairLabel = () => {\n  _s();\n\n  const price = useGetLastOraclePrice();\n  const priceAsNumber = parseFloat(formatBigNumberToFixed(price, 3, 8));\n  const {\n    countUp,\n    update\n  } = useCountUp({\n    start: 0,\n    end: priceAsNumber,\n    duration: 1,\n    decimals: 3\n  });\n  const updateRef = useRef(update);\n  useEffect(() => {\n    updateRef.current(priceAsNumber);\n  }, [priceAsNumber, updateRef]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    pl: \"24px\",\n    position: \"relative\",\n    display: \"inline-block\",\n    children: [/*#__PURE__*/_jsxDEV(Token, {\n      left: 0,\n      children: /*#__PURE__*/_jsxDEV(BnbUsdtPairTokenIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      dir: \"left\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        bold: true,\n        textTransform: \"uppercase\",\n        children: \"BNBUSDT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Price, {\n        fontSize: \"12px\",\n        children: `$${countUp}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PricePairLabel, \"008yK3DR4W1W/FMQE9+62jaORBk=\", false, function () {\n  return [useGetLastOraclePrice, useCountUp];\n});\n\n_c6 = PricePairLabel;\nexport const TimerLabel = ({\n  interval,\n  unit\n}) => {\n  _s2();\n\n  const seconds = useRoundCountdown();\n  const countdown = formatRoundTime(seconds);\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    pr: \"24px\",\n    position: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      dir: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        bold: true,\n        color: \"secondary\",\n        children: seconds === 0 ? t('Closing') : countdown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Interval, {\n        fontSize: \"12px\",\n        children: `${interval}${t(unit)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Token, {\n      right: 0,\n      children: /*#__PURE__*/_jsxDEV(PocketWatchIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(TimerLabel, \"apv/otNteCeq3w8hIz4KOlsSLAE=\", false, function () {\n  return [useRoundCountdown, useTranslation];\n});\n\n_c7 = TimerLabel;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Token\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"Price\");\n$RefreshReg$(_c4, \"Interval\");\n$RefreshReg$(_c5, \"Label\");\n$RefreshReg$(_c6, \"PricePairLabel\");\n$RefreshReg$(_c7, \"TimerLabel\");","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/src/views/Predictions/components/Label.tsx"],"names":["React","useEffect","useRef","useCountUp","styled","BnbUsdtPairTokenIcon","Box","Card","PocketWatchIcon","Text","formatBigNumberToFixed","useGetLastOraclePrice","useTranslation","formatRoundTime","useRoundCountdown","Token","theme","mediaQueries","lg","Title","Price","Interval","Label","dir","PricePairLabel","price","priceAsNumber","parseFloat","countUp","update","start","end","duration","decimals","updateRef","current","TimerLabel","interval","unit","seconds","countdown","t"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport styled from 'styled-components'\nimport { BnbUsdtPairTokenIcon, Box, Card, PocketWatchIcon, Text } from '@pancakeswap/uikit'\nimport { formatBigNumberToFixed } from 'utils/formatBalance'\nimport { useGetLastOraclePrice } from 'state/predictions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { formatRoundTime } from '../helpers'\nimport useRoundCountdown from '../hooks/useRoundCountdown'\n\nconst Token = styled(Box)`\n  margin-top: -24px;\n  position: absolute;\n  top: 50%;\n  z-index: 30;\n\n  & > svg {\n    height: 48px;\n    width: 48px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-top: -32px;\n\n    & > svg {\n      height: 64px;\n      width: 64px;\n    }\n  }\n`\n\nconst Title = styled(Text)`\n  font-size: 16px;\n  line-height: 21px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    font-size: 20px;\n    line-height: 22px;\n  }\n`\n\nconst Price = styled(Text)`\n  height: 18px;\n  justify-self: start;\n  width: 70px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: center;\n  }\n`\n\nconst Interval = styled(Text)`\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: center;\n    width: 32px;\n  }\n`\n\nconst Label = styled(Card)<{ dir: 'left' | 'right' }>`\n  align-items: ${({ dir }) => (dir === 'right' ? 'flex-end' : 'flex-start')};\n  border-radius: ${({ dir }) => (dir === 'right' ? '8px 8px 8px 24px' : '8px 8px 24px 8px')};\n  display: flex;\n  flex-direction: column;\n  overflow: initial;\n  padding: ${({ dir }) => (dir === 'right' ? '0 28px 0 8px' : '0 8px 0 24px')};\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    align-items: center;\n    border-radius: 16px;\n    flex-direction: row;\n    padding: ${({ dir }) => (dir === 'right' ? '8px 40px 8px 8px' : '8px 8px 8px 40px')};\n  }\n`\n\nexport const PricePairLabel: React.FC = () => {\n  const price = useGetLastOraclePrice()\n  const priceAsNumber = parseFloat(formatBigNumberToFixed(price, 3, 8))\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: priceAsNumber,\n    duration: 1,\n    decimals: 3,\n  })\n\n  const updateRef = useRef(update)\n\n  useEffect(() => {\n    updateRef.current(priceAsNumber)\n  }, [priceAsNumber, updateRef])\n\n  return (\n    <Box pl=\"24px\" position=\"relative\" display=\"inline-block\">\n      <Token left={0}>\n        <BnbUsdtPairTokenIcon />\n      </Token>\n      <Label dir=\"left\">\n        <Title bold textTransform=\"uppercase\">\n          BNBUSDT\n        </Title>\n        <Price fontSize=\"12px\">{`$${countUp}`}</Price>\n      </Label>\n    </Box>\n  )\n}\n\ninterface TimerLabelProps {\n  interval: string\n  unit: 'm' | 'h' | 'd'\n}\n\nexport const TimerLabel: React.FC<TimerLabelProps> = ({ interval, unit }) => {\n  const seconds = useRoundCountdown()\n  const countdown = formatRoundTime(seconds)\n  const { t } = useTranslation()\n\n  return (\n    <Box pr=\"24px\" position=\"relative\">\n      <Label dir=\"right\">\n        <Title bold color=\"secondary\">\n          {seconds === 0 ? t('Closing') : countdown}\n        </Title>\n        <Interval fontSize=\"12px\">{`${interval}${t(unit)}`}</Interval>\n      </Label>\n      <Token right={0}>\n        <PocketWatchIcon />\n      </Token>\n    </Box>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}