{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/pancake-frontend/pankcake-frontend/src/views/Voting/components/CastVoteModal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Box, Modal } from '@pancakeswap/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { useTranslation } from 'contexts/Localization';\nimport { SnapshotCommand } from 'state/types';\nimport { signMessage } from 'utils/web3React';\nimport useToast from 'hooks/useToast';\nimport useWeb3Provider from 'hooks/useActiveWeb3React';\nimport useTheme from 'hooks/useTheme';\nimport { ConfirmVoteView } from './types';\nimport MainView from './MainView';\nimport DetailsView from './DetailsView';\nimport { generatePayloadData, sendSnaphotData } from '../../helpers';\nimport useGetVotingPower from '../../hooks/useGetVotingPower';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CastVoteModal = ({\n  onSuccess,\n  proposalId,\n  vote,\n  block,\n  onDismiss\n}) => {\n  _s();\n\n  const [view, setView] = useState(ConfirmVoteView.MAIN);\n  const [modalIsOpen, setModalIsOpen] = useState(true);\n  const [isPending, setIsPending] = useState(false);\n  const {\n    account\n  } = useWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const {\n    toastError\n  } = useToast();\n  const {\n    library\n  } = useWeb3Provider();\n  const {\n    theme\n  } = useTheme();\n  const {\n    isLoading,\n    total,\n    cakeBalance,\n    cakeVaultBalance,\n    cakePoolBalance,\n    poolsBalance,\n    cakeBnbLpBalance,\n    verificationHash\n  } = useGetVotingPower(block, modalIsOpen);\n  const isStartView = view === ConfirmVoteView.MAIN;\n  const handleBack = isStartView ? null : () => setView(ConfirmVoteView.MAIN);\n\n  const handleViewDetails = () => setView(ConfirmVoteView.DETAILS);\n\n  const title = {\n    [ConfirmVoteView.MAIN]: t('Confirm Vote'),\n    [ConfirmVoteView.DETAILS]: t('Voting Power')\n  };\n\n  const handleDismiss = () => {\n    setModalIsOpen(false);\n    onDismiss();\n  };\n\n  const handleConfirmVote = async () => {\n    try {\n      setIsPending(true);\n      const voteMsg = JSON.stringify({ ...generatePayloadData(),\n        type: SnapshotCommand.VOTE,\n        payload: {\n          proposal: proposalId,\n          choice: vote.value,\n          metadata: {\n            votingPower: total.toString(),\n            verificationHash\n          }\n        }\n      });\n      const sig = await signMessage(library, account, voteMsg);\n      const msg = {\n        address: account,\n        msg: voteMsg,\n        sig\n      }; // Save proposal to snapshot\n\n      await sendSnaphotData(msg);\n      setIsPending(false);\n      await onSuccess();\n      handleDismiss();\n    } catch (error) {\n      setIsPending(false);\n      toastError(t('Error'), error === null || error === void 0 ? void 0 : error.message);\n      console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: title[view],\n    onBack: handleBack,\n    onDismiss: onDismiss,\n    hideCloseButton: !isStartView,\n    headerBackground: theme.colors.gradients.cardHeader,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mb: \"24px\",\n      width: \"320px\",\n      children: [view === ConfirmVoteView.MAIN && /*#__PURE__*/_jsxDEV(MainView, {\n        vote: vote,\n        isLoading: isLoading,\n        isPending: isPending,\n        total: total,\n        onConfirm: handleConfirmVote,\n        onViewDetails: handleViewDetails,\n        onDismiss: handleDismiss\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), view === ConfirmVoteView.DETAILS && /*#__PURE__*/_jsxDEV(DetailsView, {\n        total: total,\n        cakeBalance: cakeBalance,\n        cakeVaultBalance: cakeVaultBalance,\n        cakePoolBalance: cakePoolBalance,\n        poolsBalance: poolsBalance,\n        cakeBnbLpBalance: cakeBnbLpBalance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CastVoteModal, \"SVFKAE24MWYvI66P5JG70DwTH94=\", false, function () {\n  return [useWeb3React, useTranslation, useToast, useWeb3Provider, useTheme, useGetVotingPower];\n});\n\n_c = CastVoteModal;\nexport default CastVoteModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CastVoteModal\");","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/pankcake-frontend/src/views/Voting/components/CastVoteModal/index.tsx"],"names":["React","useState","Box","Modal","useWeb3React","useTranslation","SnapshotCommand","signMessage","useToast","useWeb3Provider","useTheme","ConfirmVoteView","MainView","DetailsView","generatePayloadData","sendSnaphotData","useGetVotingPower","CastVoteModal","onSuccess","proposalId","vote","block","onDismiss","view","setView","MAIN","modalIsOpen","setModalIsOpen","isPending","setIsPending","account","t","toastError","library","theme","isLoading","total","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","verificationHash","isStartView","handleBack","handleViewDetails","DETAILS","title","handleDismiss","handleConfirmVote","voteMsg","JSON","stringify","type","VOTE","payload","proposal","choice","value","metadata","votingPower","toString","sig","msg","address","error","message","console","colors","gradients","cardHeader"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Box, Modal } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { SnapshotCommand } from 'state/types'\nimport { signMessage } from 'utils/web3React'\nimport useToast from 'hooks/useToast'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useTheme from 'hooks/useTheme'\nimport { CastVoteModalProps, ConfirmVoteView } from './types'\nimport MainView from './MainView'\nimport DetailsView from './DetailsView'\nimport { generatePayloadData, Message, sendSnaphotData } from '../../helpers'\nimport useGetVotingPower from '../../hooks/useGetVotingPower'\n\nconst CastVoteModal: React.FC<CastVoteModalProps> = ({ onSuccess, proposalId, vote, block, onDismiss }) => {\n  const [view, setView] = useState<ConfirmVoteView>(ConfirmVoteView.MAIN)\n  const [modalIsOpen, setModalIsOpen] = useState(true)\n  const [isPending, setIsPending] = useState(false)\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const { toastError } = useToast()\n  const { library } = useWeb3Provider()\n  const { theme } = useTheme()\n  const {\n    isLoading,\n    total,\n    cakeBalance,\n    cakeVaultBalance,\n    cakePoolBalance,\n    poolsBalance,\n    cakeBnbLpBalance,\n    verificationHash,\n  } = useGetVotingPower(block, modalIsOpen)\n\n  const isStartView = view === ConfirmVoteView.MAIN\n  const handleBack = isStartView ? null : () => setView(ConfirmVoteView.MAIN)\n  const handleViewDetails = () => setView(ConfirmVoteView.DETAILS)\n\n  const title = {\n    [ConfirmVoteView.MAIN]: t('Confirm Vote'),\n    [ConfirmVoteView.DETAILS]: t('Voting Power'),\n  }\n\n  const handleDismiss = () => {\n    setModalIsOpen(false)\n    onDismiss()\n  }\n\n  const handleConfirmVote = async () => {\n    try {\n      setIsPending(true)\n      const voteMsg = JSON.stringify({\n        ...generatePayloadData(),\n        type: SnapshotCommand.VOTE,\n        payload: {\n          proposal: proposalId,\n          choice: vote.value,\n          metadata: {\n            votingPower: total.toString(),\n            verificationHash,\n          },\n        },\n      })\n\n      const sig = await signMessage(library, account, voteMsg)\n      const msg: Message = { address: account, msg: voteMsg, sig }\n\n      // Save proposal to snapshot\n      await sendSnaphotData(msg)\n      setIsPending(false)\n\n      await onSuccess()\n\n      handleDismiss()\n    } catch (error) {\n      setIsPending(false)\n      toastError(t('Error'), error?.message)\n      console.error(error)\n    }\n  }\n\n  return (\n    <Modal\n      title={title[view]}\n      onBack={handleBack}\n      onDismiss={onDismiss}\n      hideCloseButton={!isStartView}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Box mb=\"24px\" width=\"320px\">\n        {view === ConfirmVoteView.MAIN && (\n          <MainView\n            vote={vote}\n            isLoading={isLoading}\n            isPending={isPending}\n            total={total}\n            onConfirm={handleConfirmVote}\n            onViewDetails={handleViewDetails}\n            onDismiss={handleDismiss}\n          />\n        )}\n        {view === ConfirmVoteView.DETAILS && (\n          <DetailsView\n            total={total}\n            cakeBalance={cakeBalance}\n            cakeVaultBalance={cakeVaultBalance}\n            cakePoolBalance={cakePoolBalance}\n            poolsBalance={poolsBalance}\n            cakeBnbLpBalance={cakeBnbLpBalance}\n          />\n        )}\n      </Box>\n    </Modal>\n  )\n}\n\nexport default CastVoteModal\n"]},"metadata":{},"sourceType":"module"}