{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/pancake-frontend/src/views/Predictions/components/ChartDisclaimer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { ModalContainer, ModalBody, Text, Button, LinkExternal, Flex } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChartDisclaimer = ({\n  onSuccess,\n  onDismiss\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n\n  const handleConfirm = () => {\n    onSuccess();\n    onDismiss();\n  };\n\n  return /*#__PURE__*/_jsxDEV(ModalContainer, {\n    title: t('Welcome!'),\n    minWidth: \"320px\",\n    children: /*#__PURE__*/_jsxDEV(ModalBody, {\n      p: \"24px\",\n      maxWidth: \"400px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        as: \"p\",\n        mb: \"16px\",\n        children: t('Charts are provided for reference only and do not reflect rounds’ final outcome.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        as: \"p\",\n        mb: \"16px\",\n        children: t('Please refer to the prices shown on the cards for the final outcome.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        width: \"100%\",\n        onClick: handleConfirm,\n        mb: \"16px\",\n        children: t('I understand')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(LinkExternal, {\n          href: \"https://docs.pancakeswap.finance/products/prediction/prediction-faq#what-are-you-using-for-your-price-feed\",\n          external: true,\n          children: t('Learn More')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChartDisclaimer, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ChartDisclaimer;\nexport default ChartDisclaimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartDisclaimer\");","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/src/views/Predictions/components/ChartDisclaimer.tsx"],"names":["React","ModalContainer","ModalBody","Text","Button","LinkExternal","Flex","useTranslation","ChartDisclaimer","onSuccess","onDismiss","t","handleConfirm"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,SAAzB,EAAoCC,IAApC,EAA0CC,MAA1C,EAAsEC,YAAtE,EAAoFC,IAApF,QAAgG,oBAAhG;AACA,SAASC,cAAT,QAA+B,uBAA/B;;;AAMA,MAAMC,eAA+C,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AAAA;;AACpF,QAAM;AAAEC,IAAAA;AAAF,MAAQJ,cAAc,EAA5B;;AAEA,QAAMK,aAAa,GAAG,MAAM;AAC1BH,IAAAA,SAAS;AACTC,IAAAA,SAAS;AACV,GAHD;;AAKA,sBACE,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAEC,CAAC,CAAC,UAAD,CAAxB;AAAsC,IAAA,QAAQ,EAAC,OAA/C;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,CAAC,EAAC,MAAb;AAAoB,MAAA,QAAQ,EAAC,OAA7B;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,EAAE,EAAC,MAAhB;AAAA,kBACGA,CAAC,CAAC,kFAAD;AADJ;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,EAAE,EAAC,MAAhB;AAAA,kBACGA,CAAC,CAAC,sEAAD;AADJ;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,OAAO,EAAEC,aAA9B;AAA6C,QAAA,EAAE,EAAC,MAAhD;AAAA,kBACGD,CAAC,CAAC,cAAD;AADJ;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE,QAAC,IAAD;AAAM,QAAA,cAAc,EAAC,QAArB;AAA8B,QAAA,UAAU,EAAC,QAAzC;AAAA,+BACE,QAAC,YAAD;AACE,UAAA,IAAI,EAAC,4GADP;AAEE,UAAA,QAAQ,MAFV;AAAA,oBAIGA,CAAC,CAAC,YAAD;AAJJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA/BD;;GAAMH,e;UACUD,c;;;KADVC,e;AAiCN,eAAeA,eAAf","sourcesContent":["import React from 'react'\nimport { ModalContainer, ModalBody, Text, Button, InjectedModalProps, LinkExternal, Flex } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ChartDisclaimerProps extends InjectedModalProps {\n  onSuccess: () => void\n}\n\nconst ChartDisclaimer: React.FC<ChartDisclaimerProps> = ({ onSuccess, onDismiss }) => {\n  const { t } = useTranslation()\n\n  const handleConfirm = () => {\n    onSuccess()\n    onDismiss()\n  }\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\n      <ModalBody p=\"24px\" maxWidth=\"400px\">\n        <Text as=\"p\" mb=\"16px\">\n          {t('Charts are provided for reference only and do not reflect rounds’ final outcome.')}\n        </Text>\n        <Text as=\"p\" mb=\"16px\">\n          {t('Please refer to the prices shown on the cards for the final outcome.')}\n        </Text>\n        <Button width=\"100%\" onClick={handleConfirm} mb=\"16px\">\n          {t('I understand')}\n        </Button>\n        <Flex justifyContent=\"center\" alignItems=\"center\">\n          <LinkExternal\n            href=\"https://docs.pancakeswap.finance/products/prediction/prediction-faq#what-are-you-using-for-your-price-feed\"\n            external\n          >\n            {t('Learn More')}\n          </LinkExternal>\n        </Flex>\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default ChartDisclaimer\n"]},"metadata":{},"sourceType":"module"}