{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/pancake-frontend/src/views/TradingCompetition/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'contexts/Localization';\nimport { useWeb3React } from '@web3-react/core';\nimport { useProfile } from 'state/profile/hooks';\nimport { Flex, Box, Image } from '@pancakeswap/uikit';\nimport styled from 'styled-components';\nimport { useTradingCompetitionContract } from 'hooks/useContract';\nimport useTheme from 'hooks/useTheme';\nimport { SmartContractPhases, CompetitionPhases, LIVE, FINISHED, CLAIM, OVER, REGISTRATION } from 'config/constants/trading-competition/easterPhases';\nimport PageSection from 'components/PageSection';\nimport { DARKBG, MIDBLUEBG, MIDBLUEBG_DARK, LIGHTBLUEBG, LIGHTBLUEBG_DARK } from './pageSectionStyles';\nimport { PrizesIcon, RanksIcon, RulesIcon } from './svgs';\nimport Countdown from './components/Countdown';\nimport YourScore from './components/YourScore';\nimport StormBunny from './pngs/storm.png';\nimport RibbonWithImage from './components/RibbonWithImage';\nimport HowToJoin from './components/HowToJoin';\nimport BattleBanner from './components/BattleBanner';\nimport BattleCta from './components/BattleCta';\nimport PrizesInfo from './components/PrizesInfo';\nimport Rules from './components/Rules';\nimport TeamRanks from './components/TeamRanks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompetitionPage = styled.div`\n  min-height: calc(100vh - 64px);\n`;\n_c = CompetitionPage;\nconst BannerFlex = styled(Flex)`\n  flex-direction: column;\n  ${({\n  theme\n}) => theme.mediaQueries.xl} {\n    padding-top: 10px;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n  }\n\n  @media screen and (min-width: 1920px) {\n    padding-top: 32px;\n  }\n`;\n_c2 = BannerFlex;\nconst BattleBannerSection = styled(PageSection)`\n  margin-top: -32px;\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    margin-top: -64px;\n  }\n`;\n_c3 = BattleBannerSection;\nconst BottomBunnyWrapper = styled(Box)`\n  display: none;\n\n  ${({\n  theme\n}) => theme.mediaQueries.md} {\n    display: flex;\n    margin-left: 40px;\n    width: 147px;\n    height: 200px;\n  }\n`;\n_c4 = BottomBunnyWrapper;\n\nconst TradingCompetition = () => {\n  _s();\n\n  const profileApiUrl = process.env.REACT_APP_API_PROFILE;\n  const {\n    account\n  } = useWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const {\n    profile,\n    isLoading\n  } = useProfile();\n  const {\n    isDark,\n    theme\n  } = useTheme();\n  const tradingCompetitionContract = useTradingCompetitionContract();\n  const [currentPhase, setCurrentPhase] = useState(CompetitionPhases.LIVE);\n  const [registrationSuccessful, setRegistrationSuccessful] = useState(false);\n  const [claimSuccessful, setClaimSuccessful] = useState(false);\n  const [userTradingInformation, setUserTradingInformation] = useState({\n    hasRegistered: false,\n    hasUserClaimed: false,\n    userRewardGroup: '0',\n    userCakeRewards: '0',\n    userPointReward: '0',\n    canClaimNFT: false\n  });\n  const [globalLeaderboardInformation, setGlobalLeaderboardInformation] = useState(null);\n  const [userLeaderboardInformation, setUserLeaderboardInformation] = useState({\n    global: 0,\n    team: 0,\n    volume: 0,\n    next_rank: 0\n  }); // 1. Storm\n\n  const [team1LeaderboardInformation, setTeam1LeaderboardInformation] = useState({\n    teamId: 1,\n    leaderboardData: null\n  }); // 2. Flippers\n\n  const [team2LeaderboardInformation, setTeam2LeaderboardInformation] = useState({\n    teamId: 2,\n    leaderboardData: null\n  }); // 3. Cakers\n\n  const [team3LeaderboardInformation, setTeam3LeaderboardInformation] = useState({\n    teamId: 3,\n    leaderboardData: null\n  });\n  const isCompetitionLive = currentPhase.state === LIVE;\n  const hasCompetitionEnded = currentPhase.state === FINISHED || currentPhase.state === CLAIM || currentPhase.state === OVER;\n  const {\n    hasUserClaimed,\n    userCakeRewards,\n    userPointReward,\n    canClaimNFT\n  } = userTradingInformation;\n  const userCanClaimPrizes = currentPhase.state === CLAIM && !hasUserClaimed && (userCakeRewards !== '0' || userPointReward !== '0' || canClaimNFT);\n  const finishedAndPrizesClaimed = hasCompetitionEnded && account && hasUserClaimed;\n  const finishedAndNothingToClaim = hasCompetitionEnded && account && !userCanClaimPrizes;\n\n  const onRegisterSuccess = () => {\n    setRegistrationSuccessful(true);\n  };\n\n  const onClaimSuccess = () => {\n    setClaimSuccessful(true);\n  };\n\n  useEffect(() => {\n    const fetchCompetitionInfoContract = async () => {\n      const competitionStatus = await tradingCompetitionContract.currentStatus();\n      setCurrentPhase(SmartContractPhases[competitionStatus]);\n    };\n\n    const fetchUserContract = async () => {\n      const user = await tradingCompetitionContract.claimInformation(account);\n      const userObject = {\n        hasRegistered: user[0],\n        hasUserClaimed: user[1],\n        userRewardGroup: user[2].toString(),\n        userCakeRewards: user[3].toString(),\n        userPointReward: user[4].toString(),\n        canClaimNFT: user[5]\n      };\n      setUserTradingInformation(userObject);\n    };\n\n    if (account) {\n      fetchUserContract();\n    } else {\n      setUserTradingInformation({\n        hasRegistered: false,\n        hasUserClaimed: false,\n        userRewardGroup: '0',\n        userCakeRewards: '0',\n        userPointReward: '0',\n        canClaimNFT: false\n      });\n    }\n\n    fetchCompetitionInfoContract();\n  }, [account, registrationSuccessful, claimSuccessful, tradingCompetitionContract]);\n  useEffect(() => {\n    const fetchUserTradingStats = async () => {\n      const res = await fetch(`${profileApiUrl}/api/users/${account}`);\n      const data = await res.json();\n      setUserLeaderboardInformation(data.leaderboard);\n    }; // If user has not registered, user trading information will not be displayed and should not be fetched\n\n\n    if (account && userTradingInformation.hasRegistered) {\n      fetchUserTradingStats();\n    }\n  }, [account, userTradingInformation, profileApiUrl]);\n  useEffect(() => {\n    const fetchGlobalLeaderboardStats = async () => {\n      const res = await fetch(`${profileApiUrl}/api/leaderboard/global`);\n      const data = await res.json();\n      setGlobalLeaderboardInformation(data);\n    };\n\n    const fetchTeamsLeaderboardStats = async (teamId, callBack) => {\n      try {\n        const res = await fetch(`${profileApiUrl}/api/leaderboard/team/${teamId}`);\n        const data = await res.json();\n        callBack(data);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    fetchTeamsLeaderboardStats(1, data => setTeam1LeaderboardInformation(prevState => {\n      return { ...prevState,\n        leaderboardData: data\n      };\n    }));\n    fetchTeamsLeaderboardStats(2, data => setTeam2LeaderboardInformation(prevState => {\n      return { ...prevState,\n        leaderboardData: data\n      };\n    }));\n    fetchTeamsLeaderboardStats(3, data => setTeam3LeaderboardInformation(prevState => {\n      return { ...prevState,\n        leaderboardData: data\n      };\n    }));\n    fetchGlobalLeaderboardStats();\n  }, [profileApiUrl]); // Don't hide when loading. Hide if the account is connected && the user hasn't registered && the competition is live or finished\n\n  const shouldHideCta = !isLoading && account && !userTradingInformation.hasRegistered && (isCompetitionLive || hasCompetitionEnded);\n  return /*#__PURE__*/_jsxDEV(CompetitionPage, {\n    children: [/*#__PURE__*/_jsxDEV(BattleBannerSection, {\n      background: DARKBG,\n      hasCurvedDivider: false,\n      index: 1,\n      children: /*#__PURE__*/_jsxDEV(BannerFlex, {\n        mb: shouldHideCta ? '0px' : '48px',\n        children: [/*#__PURE__*/_jsxDEV(Countdown, {\n          currentPhase: currentPhase,\n          hasCompetitionEnded: hasCompetitionEnded\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BattleBanner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageSection, {\n      containerProps: {\n        style: {\n          marginTop: '-30px'\n        }\n      },\n      background: isDark ? MIDBLUEBG_DARK : MIDBLUEBG,\n      concaveDivider: true,\n      clipFill: {\n        light: '#CCD8F0',\n        dark: '#434575'\n      },\n      dividerPosition: \"top\",\n      index: 2,\n      dividerComponent: shouldHideCta ? null : /*#__PURE__*/_jsxDEV(BattleCta, {\n        userTradingInformation: userTradingInformation,\n        currentPhase: currentPhase,\n        account: account,\n        isCompetitionLive: isCompetitionLive,\n        hasCompetitionEnded: hasCompetitionEnded,\n        userCanClaimPrizes: userCanClaimPrizes,\n        finishedAndPrizesClaimed: finishedAndPrizesClaimed,\n        finishedAndNothingToClaim: finishedAndNothingToClaim,\n        profile: profile,\n        isLoading: isLoading,\n        onRegisterSuccess: onRegisterSuccess,\n        onClaimSuccess: onClaimSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        mt: shouldHideCta ? '0px' : ['94px', null, '36px'],\n        mb: \"64px\",\n        children: currentPhase.state === REGISTRATION ? /*#__PURE__*/_jsxDEV(HowToJoin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(YourScore, {\n          currentPhase: currentPhase,\n          hasRegistered: userTradingInformation.hasRegistered,\n          userTradingInformation: userTradingInformation,\n          account: account,\n          profile: profile,\n          isLoading: isLoading,\n          userLeaderboardInformation: userLeaderboardInformation,\n          userCanClaimPrizes: userCanClaimPrizes,\n          finishedAndPrizesClaimed: finishedAndPrizesClaimed,\n          finishedAndNothingToClaim: finishedAndNothingToClaim,\n          onClaimSuccess: onClaimSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageSection, {\n      containerProps: {\n        style: {\n          marginTop: '-30px'\n        }\n      },\n      index: 3,\n      concaveDivider: true,\n      clipFill: {\n        light: theme.colors.background\n      },\n      dividerPosition: \"top\",\n      dividerComponent: /*#__PURE__*/_jsxDEV(RibbonWithImage, {\n        imageComponent: /*#__PURE__*/_jsxDEV(RanksIcon, {\n          width: \"175px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 44\n        }, this),\n        ribbonDirection: \"up\",\n        children: t('Team Ranks')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        my: \"64px\",\n        children: /*#__PURE__*/_jsxDEV(TeamRanks, {\n          team1LeaderboardInformation: team1LeaderboardInformation,\n          team2LeaderboardInformation: team2LeaderboardInformation,\n          team3LeaderboardInformation: team3LeaderboardInformation,\n          globalLeaderboardInformation: globalLeaderboardInformation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageSection, {\n      containerProps: {\n        style: {\n          marginTop: '-30px'\n        }\n      },\n      dividerComponent: /*#__PURE__*/_jsxDEV(RibbonWithImage, {\n        imageComponent: /*#__PURE__*/_jsxDEV(PrizesIcon, {\n          width: \"175px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 44\n        }, this),\n        ribbonDirection: \"up\",\n        children: t('Prizes')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this),\n      concaveDivider: true,\n      clipFill: {\n        light: 'linear-gradient(139.73deg, #e5fcfe 0%, #ecf6ff 100%)',\n        dark: 'linear-gradient(139.73deg, #303d5b 0%, #363457 100%)'\n      },\n      dividerPosition: \"top\",\n      background: isDark ? LIGHTBLUEBG_DARK : LIGHTBLUEBG,\n      index: 4,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        my: \"64px\",\n        children: /*#__PURE__*/_jsxDEV(PrizesInfo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageSection, {\n      containerProps: {\n        style: {\n          marginTop: '-1px'\n        }\n      },\n      index: 5,\n      dividerPosition: \"top\",\n      clipFill: {\n        light: 'linear-gradient(139.73deg, #ecf5ff 0%, #f2effe 100%)',\n        dark: 'linear-gradient(139.73deg, #383357 0%, #3d2b53 100%)'\n      },\n      dividerComponent: /*#__PURE__*/_jsxDEV(RibbonWithImage, {\n        imageComponent: /*#__PURE__*/_jsxDEV(RulesIcon, {\n          width: \"175px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 44\n        }, this),\n        ribbonDirection: \"up\",\n        children: t('Rules')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        mt: \"64px\",\n        children: /*#__PURE__*/_jsxDEV(Rules, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageSection, {\n      index: 6,\n      dividerPosition: \"top\",\n      dividerFill: {\n        light: '#191326'\n      },\n      clipFill: {\n        light: theme.colors.background\n      },\n      background: DARKBG,\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        children: [shouldHideCta ? null : /*#__PURE__*/_jsxDEV(Flex, {\n          height: \"fit-content\",\n          children: /*#__PURE__*/_jsxDEV(BattleCta, {\n            userTradingInformation: userTradingInformation,\n            currentPhase: currentPhase,\n            account: account,\n            isCompetitionLive: isCompetitionLive,\n            hasCompetitionEnded: hasCompetitionEnded,\n            userCanClaimPrizes: userCanClaimPrizes,\n            finishedAndPrizesClaimed: finishedAndPrizesClaimed,\n            finishedAndNothingToClaim: finishedAndNothingToClaim,\n            profile: profile,\n            isLoading: isLoading,\n            onRegisterSuccess: onRegisterSuccess,\n            onClaimSuccess: onClaimSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BottomBunnyWrapper, {\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: StormBunny,\n            width: 147,\n            height: 200\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TradingCompetition, \"88e0qiawPf7CBVmnnrfMpSAgEqc=\", false, function () {\n  return [useWeb3React, useTranslation, useProfile, useTheme, useTradingCompetitionContract];\n});\n\n_c5 = TradingCompetition;\nexport default TradingCompetition;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"CompetitionPage\");\n$RefreshReg$(_c2, \"BannerFlex\");\n$RefreshReg$(_c3, \"BattleBannerSection\");\n$RefreshReg$(_c4, \"BottomBunnyWrapper\");\n$RefreshReg$(_c5, \"TradingCompetition\");","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/src/views/TradingCompetition/index.tsx"],"names":["React","useState","useEffect","useTranslation","useWeb3React","useProfile","Flex","Box","Image","styled","useTradingCompetitionContract","useTheme","SmartContractPhases","CompetitionPhases","LIVE","FINISHED","CLAIM","OVER","REGISTRATION","PageSection","DARKBG","MIDBLUEBG","MIDBLUEBG_DARK","LIGHTBLUEBG","LIGHTBLUEBG_DARK","PrizesIcon","RanksIcon","RulesIcon","Countdown","YourScore","StormBunny","RibbonWithImage","HowToJoin","BattleBanner","BattleCta","PrizesInfo","Rules","TeamRanks","CompetitionPage","div","BannerFlex","theme","mediaQueries","xl","BattleBannerSection","lg","BottomBunnyWrapper","md","TradingCompetition","profileApiUrl","process","env","REACT_APP_API_PROFILE","account","t","profile","isLoading","isDark","tradingCompetitionContract","currentPhase","setCurrentPhase","registrationSuccessful","setRegistrationSuccessful","claimSuccessful","setClaimSuccessful","userTradingInformation","setUserTradingInformation","hasRegistered","hasUserClaimed","userRewardGroup","userCakeRewards","userPointReward","canClaimNFT","globalLeaderboardInformation","setGlobalLeaderboardInformation","userLeaderboardInformation","setUserLeaderboardInformation","global","team","volume","next_rank","team1LeaderboardInformation","setTeam1LeaderboardInformation","teamId","leaderboardData","team2LeaderboardInformation","setTeam2LeaderboardInformation","team3LeaderboardInformation","setTeam3LeaderboardInformation","isCompetitionLive","state","hasCompetitionEnded","userCanClaimPrizes","finishedAndPrizesClaimed","finishedAndNothingToClaim","onRegisterSuccess","onClaimSuccess","fetchCompetitionInfoContract","competitionStatus","currentStatus","fetchUserContract","user","claimInformation","userObject","toString","fetchUserTradingStats","res","fetch","data","json","leaderboard","fetchGlobalLeaderboardStats","fetchTeamsLeaderboardStats","callBack","e","console","error","prevState","shouldHideCta","style","marginTop","light","dark","colors","background"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useProfile } from 'state/profile/hooks'\nimport { Flex, Box, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTradingCompetitionContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport {\n  SmartContractPhases,\n  CompetitionPhases,\n  LIVE,\n  FINISHED,\n  CLAIM,\n  OVER,\n  REGISTRATION,\n} from 'config/constants/trading-competition/easterPhases'\nimport PageSection from 'components/PageSection'\nimport { DARKBG, MIDBLUEBG, MIDBLUEBG_DARK, LIGHTBLUEBG, LIGHTBLUEBG_DARK } from './pageSectionStyles'\nimport { PrizesIcon, RanksIcon, RulesIcon } from './svgs'\nimport Countdown from './components/Countdown'\nimport YourScore from './components/YourScore'\nimport StormBunny from './pngs/storm.png'\nimport RibbonWithImage from './components/RibbonWithImage'\nimport HowToJoin from './components/HowToJoin'\nimport BattleBanner from './components/BattleBanner'\nimport BattleCta from './components/BattleCta'\nimport PrizesInfo from './components/PrizesInfo'\nimport Rules from './components/Rules'\nimport TeamRanks from './components/TeamRanks'\n\nconst CompetitionPage = styled.div`\n  min-height: calc(100vh - 64px);\n`\n\nconst BannerFlex = styled(Flex)`\n  flex-direction: column;\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-top: 10px;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n  }\n\n  @media screen and (min-width: 1920px) {\n    padding-top: 32px;\n  }\n`\n\nconst BattleBannerSection = styled(PageSection)`\n  margin-top: -32px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-top: -64px;\n  }\n`\n\nconst BottomBunnyWrapper = styled(Box)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: flex;\n    margin-left: 40px;\n    width: 147px;\n    height: 200px;\n  }\n`\n\nconst TradingCompetition = () => {\n  const profileApiUrl = process.env.REACT_APP_API_PROFILE\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const { profile, isLoading } = useProfile()\n  const { isDark, theme } = useTheme()\n  const tradingCompetitionContract = useTradingCompetitionContract()\n  const [currentPhase, setCurrentPhase] = useState(CompetitionPhases.LIVE)\n  const [registrationSuccessful, setRegistrationSuccessful] = useState(false)\n  const [claimSuccessful, setClaimSuccessful] = useState(false)\n  const [userTradingInformation, setUserTradingInformation] = useState({\n    hasRegistered: false,\n    hasUserClaimed: false,\n    userRewardGroup: '0',\n    userCakeRewards: '0',\n    userPointReward: '0',\n    canClaimNFT: false,\n  })\n  const [globalLeaderboardInformation, setGlobalLeaderboardInformation] = useState(null)\n  const [userLeaderboardInformation, setUserLeaderboardInformation] = useState({\n    global: 0,\n    team: 0,\n    volume: 0,\n    next_rank: 0,\n  })\n  // 1. Storm\n  const [team1LeaderboardInformation, setTeam1LeaderboardInformation] = useState({ teamId: 1, leaderboardData: null })\n  // 2. Flippers\n  const [team2LeaderboardInformation, setTeam2LeaderboardInformation] = useState({ teamId: 2, leaderboardData: null })\n  // 3. Cakers\n  const [team3LeaderboardInformation, setTeam3LeaderboardInformation] = useState({ teamId: 3, leaderboardData: null })\n\n  const isCompetitionLive = currentPhase.state === LIVE\n  const hasCompetitionEnded =\n    currentPhase.state === FINISHED || currentPhase.state === CLAIM || currentPhase.state === OVER\n\n  const { hasUserClaimed, userCakeRewards, userPointReward, canClaimNFT } = userTradingInformation\n\n  const userCanClaimPrizes =\n    currentPhase.state === CLAIM &&\n    !hasUserClaimed &&\n    (userCakeRewards !== '0' || userPointReward !== '0' || canClaimNFT)\n  const finishedAndPrizesClaimed = hasCompetitionEnded && account && hasUserClaimed\n  const finishedAndNothingToClaim = hasCompetitionEnded && account && !userCanClaimPrizes\n\n  const onRegisterSuccess = () => {\n    setRegistrationSuccessful(true)\n  }\n\n  const onClaimSuccess = () => {\n    setClaimSuccessful(true)\n  }\n\n  useEffect(() => {\n    const fetchCompetitionInfoContract = async () => {\n      const competitionStatus = await tradingCompetitionContract.currentStatus()\n      setCurrentPhase(SmartContractPhases[competitionStatus])\n    }\n\n    const fetchUserContract = async () => {\n      const user = await tradingCompetitionContract.claimInformation(account)\n      const userObject = {\n        hasRegistered: user[0],\n        hasUserClaimed: user[1],\n        userRewardGroup: user[2].toString(),\n        userCakeRewards: user[3].toString(),\n        userPointReward: user[4].toString(),\n        canClaimNFT: user[5],\n      }\n      setUserTradingInformation(userObject)\n    }\n\n    if (account) {\n      fetchUserContract()\n    } else {\n      setUserTradingInformation({\n        hasRegistered: false,\n        hasUserClaimed: false,\n        userRewardGroup: '0',\n        userCakeRewards: '0',\n        userPointReward: '0',\n        canClaimNFT: false,\n      })\n    }\n    fetchCompetitionInfoContract()\n  }, [account, registrationSuccessful, claimSuccessful, tradingCompetitionContract])\n\n  useEffect(() => {\n    const fetchUserTradingStats = async () => {\n      const res = await fetch(`${profileApiUrl}/api/users/${account}`)\n      const data = await res.json()\n      setUserLeaderboardInformation(data.leaderboard)\n    }\n    // If user has not registered, user trading information will not be displayed and should not be fetched\n    if (account && userTradingInformation.hasRegistered) {\n      fetchUserTradingStats()\n    }\n  }, [account, userTradingInformation, profileApiUrl])\n\n  useEffect(() => {\n    const fetchGlobalLeaderboardStats = async () => {\n      const res = await fetch(`${profileApiUrl}/api/leaderboard/global`)\n      const data = await res.json()\n      setGlobalLeaderboardInformation(data)\n    }\n\n    const fetchTeamsLeaderboardStats = async (teamId: number, callBack: (data: any) => void) => {\n      try {\n        const res = await fetch(`${profileApiUrl}/api/leaderboard/team/${teamId}`)\n        const data = await res.json()\n        callBack(data)\n      } catch (e) {\n        console.error(e)\n      }\n    }\n\n    fetchTeamsLeaderboardStats(1, (data) =>\n      setTeam1LeaderboardInformation((prevState) => {\n        return { ...prevState, leaderboardData: data }\n      }),\n    )\n    fetchTeamsLeaderboardStats(2, (data) =>\n      setTeam2LeaderboardInformation((prevState) => {\n        return { ...prevState, leaderboardData: data }\n      }),\n    )\n    fetchTeamsLeaderboardStats(3, (data) =>\n      setTeam3LeaderboardInformation((prevState) => {\n        return { ...prevState, leaderboardData: data }\n      }),\n    )\n    fetchGlobalLeaderboardStats()\n  }, [profileApiUrl])\n\n  // Don't hide when loading. Hide if the account is connected && the user hasn't registered && the competition is live or finished\n  const shouldHideCta =\n    !isLoading && account && !userTradingInformation.hasRegistered && (isCompetitionLive || hasCompetitionEnded)\n\n  return (\n    <CompetitionPage>\n      <BattleBannerSection background={DARKBG} hasCurvedDivider={false} index={1}>\n        <BannerFlex mb={shouldHideCta ? '0px' : '48px'}>\n          <Countdown currentPhase={currentPhase} hasCompetitionEnded={hasCompetitionEnded} />\n          <BattleBanner />\n        </BannerFlex>\n      </BattleBannerSection>\n      <PageSection\n        containerProps={{ style: { marginTop: '-30px' } }}\n        background={isDark ? MIDBLUEBG_DARK : MIDBLUEBG}\n        concaveDivider\n        clipFill={{ light: '#CCD8F0', dark: '#434575' }}\n        dividerPosition=\"top\"\n        index={2}\n        dividerComponent={\n          shouldHideCta ? null : (\n            <BattleCta\n              userTradingInformation={userTradingInformation}\n              currentPhase={currentPhase}\n              account={account}\n              isCompetitionLive={isCompetitionLive}\n              hasCompetitionEnded={hasCompetitionEnded}\n              userCanClaimPrizes={userCanClaimPrizes}\n              finishedAndPrizesClaimed={finishedAndPrizesClaimed}\n              finishedAndNothingToClaim={finishedAndNothingToClaim}\n              profile={profile}\n              isLoading={isLoading}\n              onRegisterSuccess={onRegisterSuccess}\n              onClaimSuccess={onClaimSuccess}\n            />\n          )\n        }\n      >\n        <Box mt={shouldHideCta ? '0px' : ['94px', null, '36px']} mb=\"64px\">\n          {/* If competition has not yet started, render HowToJoin component - if not, render YourScore */}\n          {currentPhase.state === REGISTRATION ? (\n            <HowToJoin />\n          ) : (\n            <YourScore\n              currentPhase={currentPhase}\n              hasRegistered={userTradingInformation.hasRegistered}\n              userTradingInformation={userTradingInformation}\n              account={account}\n              profile={profile}\n              isLoading={isLoading}\n              userLeaderboardInformation={userLeaderboardInformation}\n              userCanClaimPrizes={userCanClaimPrizes}\n              finishedAndPrizesClaimed={finishedAndPrizesClaimed}\n              finishedAndNothingToClaim={finishedAndNothingToClaim}\n              onClaimSuccess={onClaimSuccess}\n            />\n          )}\n        </Box>\n      </PageSection>\n      <PageSection\n        containerProps={{ style: { marginTop: '-30px' } }}\n        index={3}\n        concaveDivider\n        clipFill={{ light: theme.colors.background }}\n        dividerPosition=\"top\"\n        dividerComponent={\n          <RibbonWithImage imageComponent={<RanksIcon width=\"175px\" />} ribbonDirection=\"up\">\n            {t('Team Ranks')}\n          </RibbonWithImage>\n        }\n      >\n        <Box my=\"64px\">\n          <TeamRanks\n            team1LeaderboardInformation={team1LeaderboardInformation}\n            team2LeaderboardInformation={team2LeaderboardInformation}\n            team3LeaderboardInformation={team3LeaderboardInformation}\n            globalLeaderboardInformation={globalLeaderboardInformation}\n          />\n        </Box>\n      </PageSection>\n      <PageSection\n        containerProps={{ style: { marginTop: '-30px' } }}\n        dividerComponent={\n          <RibbonWithImage imageComponent={<PrizesIcon width=\"175px\" />} ribbonDirection=\"up\">\n            {t('Prizes')}\n          </RibbonWithImage>\n        }\n        concaveDivider\n        clipFill={{\n          light: 'linear-gradient(139.73deg, #e5fcfe 0%, #ecf6ff 100%)',\n          dark: 'linear-gradient(139.73deg, #303d5b 0%, #363457 100%)',\n        }}\n        dividerPosition=\"top\"\n        background={isDark ? LIGHTBLUEBG_DARK : LIGHTBLUEBG}\n        index={4}\n      >\n        <Box my=\"64px\">\n          <PrizesInfo />\n        </Box>\n      </PageSection>\n      <PageSection\n        containerProps={{ style: { marginTop: '-1px' } }}\n        index={5}\n        dividerPosition=\"top\"\n        clipFill={{\n          light: 'linear-gradient(139.73deg, #ecf5ff 0%, #f2effe 100%)',\n          dark: 'linear-gradient(139.73deg, #383357 0%, #3d2b53 100%)',\n        }}\n        dividerComponent={\n          <RibbonWithImage imageComponent={<RulesIcon width=\"175px\" />} ribbonDirection=\"up\">\n            {t('Rules')}\n          </RibbonWithImage>\n        }\n      >\n        <Box mt=\"64px\">\n          <Rules />\n        </Box>\n      </PageSection>\n      <PageSection\n        index={6}\n        dividerPosition=\"top\"\n        dividerFill={{ light: '#191326' }}\n        clipFill={{ light: theme.colors.background }}\n        background={DARKBG}\n      >\n        <Flex alignItems=\"center\">\n          {shouldHideCta ? null : (\n            <Flex height=\"fit-content\">\n              <BattleCta\n                userTradingInformation={userTradingInformation}\n                currentPhase={currentPhase}\n                account={account}\n                isCompetitionLive={isCompetitionLive}\n                hasCompetitionEnded={hasCompetitionEnded}\n                userCanClaimPrizes={userCanClaimPrizes}\n                finishedAndPrizesClaimed={finishedAndPrizesClaimed}\n                finishedAndNothingToClaim={finishedAndNothingToClaim}\n                profile={profile}\n                isLoading={isLoading}\n                onRegisterSuccess={onRegisterSuccess}\n                onClaimSuccess={onClaimSuccess}\n              />\n            </Flex>\n          )}\n          <BottomBunnyWrapper>\n            <Image src={StormBunny} width={147} height={200} />\n          </BottomBunnyWrapper>\n        </Flex>\n      </PageSection>\n    </CompetitionPage>\n  )\n}\n\nexport default TradingCompetition\n"]},"metadata":{},"sourceType":"module"}