{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/views/Pools/components/BountyCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport BigNumber from 'bignumber.js';\nimport styled from 'styled-components';\nimport { Card, CardBody, Text, Flex, HelpIcon, Button, Heading, Skeleton, useModal, Box, useTooltip } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { usePriceCakeBusd } from 'state/farms/hooks';\nimport { useCakeVault } from 'state/pools/hooks';\nimport Balance from 'components/Balance';\nimport BountyModal from './BountyModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`;\n_c = StyledCard;\n\nconst BountyCard = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    estimatedCakeBountyReward,\n    fees: {\n      callFee\n    }\n  } = useCakeVault();\n  const cakePriceBusd = usePriceCakeBusd();\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd);\n  }, [cakePriceBusd, estimatedCakeBountyReward]);\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0);\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false;\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0;\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0;\n\n  const TooltipComponent = ({\n    fee\n  }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      mb: \"16px\",\n      children: t('This bounty is given as a reward for providing a service to other users.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      mb: \"16px\",\n      children: t('Whenever you successfully claim the bounty, you’re also helping out by activating the Auto CAKE Pool’s compounding function for everyone.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      style: {\n        fontWeight: 'bold'\n      },\n      children: t('Auto-Compound Bounty: %fee%% of all Auto CAKE pool users pending yield', {\n        fee: fee / 100\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  const [onPresentBountyModal] = useModal( /*#__PURE__*/_jsxDEV(BountyModal, {\n    TooltipComponent: TooltipComponent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 43\n  }, this));\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip( /*#__PURE__*/_jsxDEV(TooltipComponent, {\n    fee: callFee\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 61\n  }, this), {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10]\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [tooltipVisible && tooltip, /*#__PURE__*/_jsxDEV(StyledCard, {\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          flexDirection: \"column\",\n          children: /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            mb: \"12px\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"16px\",\n              bold: true,\n              color: \"textSubtle\",\n              mr: \"4px\",\n              children: t('Auto CAKE Bounty')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              ref: targetRef,\n              children: /*#__PURE__*/_jsxDEV(HelpIcon, {\n                color: \"textSubtle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            flexDirection: \"column\",\n            mr: \"12px\",\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              children: hasFetchedCakeBounty ? /*#__PURE__*/_jsxDEV(Balance, {\n                fontSize: \"20px\",\n                bold: true,\n                value: cakeBountyToDisplay,\n                decimals: 3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n                height: 20,\n                width: 96,\n                mb: \"2px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), hasFetchedDollarBounty ? /*#__PURE__*/_jsxDEV(Balance, {\n              fontSize: \"12px\",\n              color: \"textSubtle\",\n              value: dollarBountyToDisplay,\n              decimals: 2,\n              unit: \" USD\",\n              prefix: \"~\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n              height: 16,\n              width: 62\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: !dollarBountyToDisplay || !cakeBountyToDisplay || !callFee,\n            onClick: onPresentBountyModal,\n            scale: \"sm\",\n            id: \"clickClaimVaultBounty\",\n            children: t('Claim')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BountyCard, \"R3pBkqP6cj84Vle3e2QEFhrbSzM=\", false, function () {\n  return [useTranslation, useCakeVault, usePriceCakeBusd, useModal, useTooltip];\n});\n\n_c2 = BountyCard;\nexport default BountyCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledCard\");\n$RefreshReg$(_c2, \"BountyCard\");","map":{"version":3,"sources":["/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/views/Pools/components/BountyCard.tsx"],"names":["React","useMemo","BigNumber","styled","Card","CardBody","Text","Flex","HelpIcon","Button","Heading","Skeleton","useModal","Box","useTooltip","useTranslation","getBalanceNumber","usePriceCakeBusd","useCakeVault","Balance","BountyModal","StyledCard","theme","mediaQueries","sm","BountyCard","t","estimatedCakeBountyReward","fees","callFee","cakePriceBusd","estimatedDollarBountyReward","multipliedBy","hasFetchedDollarBounty","gte","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","TooltipComponent","fee","fontWeight","onPresentBountyModal","targetRef","tooltip","tooltipVisible","placement","tooltipOffset"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SACEC,IADF,EAEEC,QAFF,EAGEC,IAHF,EAIEC,IAJF,EAKEC,QALF,EAMEC,MANF,EAOEC,OAPF,EAQEC,QARF,EASEC,QATF,EAUEC,GAVF,EAWEC,UAXF,QAYO,oBAZP;AAaA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,UAAU,GAAGlB,MAAM,CAACC,IAAD,CAAO;AAChC;AACA;AACA,IAAI,CAAC;AAAEkB,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA,CANA;KAAMH,U;;AAQN,MAAMI,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAQX,cAAc,EAA5B;AACA,QAAM;AACJY,IAAAA,yBADI;AAEJC,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AAFF,MAGFX,YAAY,EAHhB;AAIA,QAAMY,aAAa,GAAGb,gBAAgB,EAAtC;AAEA,QAAMc,2BAA2B,GAAG9B,OAAO,CAAC,MAAM;AAChD,WAAO,IAAIC,SAAJ,CAAcyB,yBAAd,EAAyCK,YAAzC,CAAsDF,aAAtD,CAAP;AACD,GAF0C,EAExC,CAACA,aAAD,EAAgBH,yBAAhB,CAFwC,CAA3C;AAIA,QAAMM,sBAAsB,GAAGF,2BAA2B,CAACG,GAA5B,CAAgC,CAAhC,CAA/B;AACA,QAAMC,oBAAoB,GAAGR,yBAAyB,GAAGA,yBAAyB,CAACO,GAA1B,CAA8B,CAA9B,CAAH,GAAsC,KAA5F;AACA,QAAME,qBAAqB,GAAGH,sBAAsB,GAAGjB,gBAAgB,CAACe,2BAAD,EAA8B,EAA9B,CAAnB,GAAuD,CAA3G;AACA,QAAMM,mBAAmB,GAAGF,oBAAoB,GAAGnB,gBAAgB,CAACW,yBAAD,EAA4B,EAA5B,CAAnB,GAAqD,CAArG;;AAEA,QAAMW,gBAAgB,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,kBACvB;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,MAAT;AAAA,gBAAiBb,CAAC,CAAC,0EAAD;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,MAAT;AAAA,gBACGA,CAAC,CACA,2IADA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEc,QAAAA,UAAU,EAAE;AAAd,OAAb;AAAA,gBACGd,CAAC,CAAC,wEAAD,EAA2E;AAAEa,QAAAA,GAAG,EAAEA,GAAG,GAAG;AAAb,OAA3E;AADJ;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;;AAcA,QAAM,CAACE,oBAAD,IAAyB7B,QAAQ,eAAC,QAAC,WAAD;AAAa,IAAA,gBAAgB,EAAE0B;AAA/B;AAAA;AAAA;AAAA;AAAA,UAAD,CAAvC;AAEA,QAAM;AAAEI,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA;AAAtB,MAAyC9B,UAAU,eAAC,QAAC,gBAAD;AAAkB,IAAA,GAAG,EAAEe;AAAvB;AAAA;AAAA;AAAA;AAAA,UAAD,EAAqC;AAC5FgB,IAAAA,SAAS,EAAE,YADiF;AAE5FC,IAAAA,aAAa,EAAE,CAAC,EAAD,EAAK,EAAL;AAF6E,GAArC,CAAzD;AAKA,sBACE;AAAA,eACGF,cAAc,IAAID,OADrB,eAEE,QAAC,UAAD;AAAA,6BACE,QAAC,QAAD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,aAAa,EAAC,QAApB;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,UAAU,EAAC,QAAjB;AAA0B,YAAA,EAAE,EAAC,MAA7B;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,QAAQ,EAAC,MAAf;AAAsB,cAAA,IAAI,MAA1B;AAA2B,cAAA,KAAK,EAAC,YAAjC;AAA8C,cAAA,EAAE,EAAC,KAAjD;AAAA,wBACGjB,CAAC,CAAC,kBAAD;AADJ;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,GAAD;AAAK,cAAA,GAAG,EAAEgB,SAAV;AAAA,qCACE,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,IAAD;AAAM,UAAA,UAAU,EAAC,QAAjB;AAA0B,UAAA,cAAc,EAAC,eAAzC;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,aAAa,EAAC,QAApB;AAA6B,YAAA,EAAE,EAAC,MAAhC;AAAA,oCACE,QAAC,OAAD;AAAA,wBACGP,oBAAoB,gBACnB,QAAC,OAAD;AAAS,gBAAA,QAAQ,EAAC,MAAlB;AAAyB,gBAAA,IAAI,MAA7B;AAA8B,gBAAA,KAAK,EAAEE,mBAArC;AAA0D,gBAAA,QAAQ,EAAE;AAApE;AAAA;AAAA;AAAA;AAAA,sBADmB,gBAGnB,QAAC,QAAD;AAAU,gBAAA,MAAM,EAAE,EAAlB;AAAsB,gBAAA,KAAK,EAAE,EAA7B;AAAiC,gBAAA,EAAE,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,oBADF,EAQGJ,sBAAsB,gBACrB,QAAC,OAAD;AACE,cAAA,QAAQ,EAAC,MADX;AAEE,cAAA,KAAK,EAAC,YAFR;AAGE,cAAA,KAAK,EAAEG,qBAHT;AAIE,cAAA,QAAQ,EAAE,CAJZ;AAKE,cAAA,IAAI,EAAC,MALP;AAME,cAAA,MAAM,EAAC;AANT;AAAA;AAAA;AAAA;AAAA,oBADqB,gBAUrB,QAAC,QAAD;AAAU,cAAA,MAAM,EAAE,EAAlB;AAAsB,cAAA,KAAK,EAAE;AAA7B;AAAA;AAAA;AAAA;AAAA,oBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAsBE,QAAC,MAAD;AACE,YAAA,QAAQ,EAAE,CAACA,qBAAD,IAA0B,CAACC,mBAA3B,IAAkD,CAACR,OAD/D;AAEE,YAAA,OAAO,EAAEY,oBAFX;AAGE,YAAA,KAAK,EAAC,IAHR;AAIE,YAAA,EAAE,EAAC,uBAJL;AAAA,sBAMGf,CAAC,CAAC,OAAD;AANJ;AAAA;AAAA;AAAA;AAAA,kBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAkDD,CAxFD;;GAAMD,U;UACUV,c,EAIVG,Y,EACkBD,gB,EAyBSL,Q,EAEgBE,U;;;MAjC3CW,U;AA0FN,eAAeA,UAAf","sourcesContent":["import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto CAKE Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto CAKE pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto CAKE Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n"]},"metadata":{},"sourceType":"module"}