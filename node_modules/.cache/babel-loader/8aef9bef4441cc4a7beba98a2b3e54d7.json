{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/views/Home/components/CompositeImage.tsx\";\nimport React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { Box } from '@pancakeswap/uikit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst floatingAnim = (x, y) => keyframes`\n  from {\n    transform: translate(0,  0px);\n  }\n  50% {\n    transform: translate(${x}, ${y});\n  }\n  to {\n    transform: translate(0, 0px);\n  }  \n`;\n\nconst Wrapper = styled(Box)`\n  position: relative;\n  max-height: ${({\n  maxHeight\n}) => maxHeight};\n\n  & :nth-child(2) {\n    animation: ${floatingAnim('3px', '15px')} 3s ease-in-out infinite;\n    animation-delay: 1s;\n  }\n\n  & :nth-child(3) {\n    animation: ${floatingAnim('5px', '10px')} 3s ease-in-out infinite;\n    animation-delay: 0.66s;\n  }\n\n  & :nth-child(4) {\n    animation: ${floatingAnim('6px', '5px')} 3s ease-in-out infinite;\n    animation-delay: 0.33s;\n  }\n\n  & :nth-child(5) {\n    animation: ${floatingAnim('4px', '12px')} 3s ease-in-out infinite;\n    animation-delay: 0s;\n  }\n`;\n_c = Wrapper;\nconst DummyImg = styled.img`\n  max-height: ${({\n  maxHeight\n}) => maxHeight};\n  visibility: hidden;\n`;\n_c2 = DummyImg;\nconst ImageWrapper = styled(Box)`\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  img {\n    max-height: 100%;\n    width: auto;\n  }\n`;\n_c3 = ImageWrapper;\nvar Resolution;\n\n(function (Resolution) {\n  Resolution[\"MD\"] = \"1.5x\";\n  Resolution[\"LG\"] = \"2x\";\n})(Resolution || (Resolution = {}));\n\nexport const getImageUrl = (base, imageSrc, resolution) => `${base}${imageSrc}${resolution ? `@${resolution}.png` : '.png'}`;\nexport const getSrcSet = (base, imageSrc) => {\n  return `${getImageUrl(base, imageSrc)} 512w, \n  ${getImageUrl(base, imageSrc, Resolution.MD)} 768w, \n  ${getImageUrl(base, imageSrc, Resolution.LG)} 1024w,`;\n};\n\nconst CompositeImage = ({\n  path,\n  attributes,\n  maxHeight = '512px'\n}) => {\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    maxHeight: maxHeight,\n    children: [/*#__PURE__*/_jsxDEV(DummyImg, {\n      src: getImageUrl(path, attributes[0].src),\n      maxHeight: maxHeight,\n      srcSet: getSrcSet(path, attributes[0].src)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), attributes.map(image => /*#__PURE__*/_jsxDEV(ImageWrapper, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: getImageUrl(path, image.src),\n        srcSet: getSrcSet(path, image.src),\n        alt: image.alt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, image.src, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = CompositeImage;\nexport default CompositeImage;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"DummyImg\");\n$RefreshReg$(_c3, \"ImageWrapper\");\n$RefreshReg$(_c4, \"CompositeImage\");","map":{"version":3,"sources":["/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/views/Home/components/CompositeImage.tsx"],"names":["React","styled","keyframes","Box","floatingAnim","x","y","Wrapper","maxHeight","DummyImg","img","ImageWrapper","Resolution","getImageUrl","base","imageSrc","resolution","getSrcSet","MD","LG","CompositeImage","path","attributes","src","map","image","alt"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst floatingAnim = (x: string, y: string) => keyframes`\n  from {\n    transform: translate(0,  0px);\n  }\n  50% {\n    transform: translate(${x}, ${y});\n  }\n  to {\n    transform: translate(0, 0px);\n  }  \n`\n\nconst Wrapper = styled(Box)<{ maxHeight: string }>`\n  position: relative;\n  max-height: ${({ maxHeight }) => maxHeight};\n\n  & :nth-child(2) {\n    animation: ${floatingAnim('3px', '15px')} 3s ease-in-out infinite;\n    animation-delay: 1s;\n  }\n\n  & :nth-child(3) {\n    animation: ${floatingAnim('5px', '10px')} 3s ease-in-out infinite;\n    animation-delay: 0.66s;\n  }\n\n  & :nth-child(4) {\n    animation: ${floatingAnim('6px', '5px')} 3s ease-in-out infinite;\n    animation-delay: 0.33s;\n  }\n\n  & :nth-child(5) {\n    animation: ${floatingAnim('4px', '12px')} 3s ease-in-out infinite;\n    animation-delay: 0s;\n  }\n`\n\nconst DummyImg = styled.img<{ maxHeight: string }>`\n  max-height: ${({ maxHeight }) => maxHeight};\n  visibility: hidden;\n`\n\nconst ImageWrapper = styled(Box)`\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  img {\n    max-height: 100%;\n    width: auto;\n  }\n`\n\nenum Resolution {\n  MD = '1.5x',\n  LG = '2x',\n}\ninterface ImageAttributes {\n  src: string\n  alt: string\n}\n\nexport interface CompositeImageProps {\n  path: string\n  attributes: ImageAttributes[]\n}\n\ninterface ComponentProps extends CompositeImageProps {\n  animate?: boolean\n  maxHeight?: string\n}\n\nexport const getImageUrl = (base: string, imageSrc: string, resolution?: Resolution): string =>\n  `${base}${imageSrc}${resolution ? `@${resolution}.png` : '.png'}`\n\nexport const getSrcSet = (base: string, imageSrc: string) => {\n  return `${getImageUrl(base, imageSrc)} 512w, \n  ${getImageUrl(base, imageSrc, Resolution.MD)} 768w, \n  ${getImageUrl(base, imageSrc, Resolution.LG)} 1024w,`\n}\n\nconst CompositeImage: React.FC<ComponentProps> = ({ path, attributes, maxHeight = '512px' }) => {\n  return (\n    <Wrapper maxHeight={maxHeight}>\n      <DummyImg\n        src={getImageUrl(path, attributes[0].src)}\n        maxHeight={maxHeight}\n        srcSet={getSrcSet(path, attributes[0].src)}\n      />\n      {attributes.map((image) => (\n        <ImageWrapper key={image.src}>\n          <img src={getImageUrl(path, image.src)} srcSet={getSrcSet(path, image.src)} alt={image.alt} />\n        </ImageWrapper>\n      ))}\n    </Wrapper>\n  )\n}\n\nexport default CompositeImage\n"]},"metadata":{},"sourceType":"module"}