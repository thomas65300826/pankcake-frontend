{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/views/Home/components/WinSection/PredictionCardContent.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Flex, Text, Skeleton, Link, Button, ArrowForwardIcon, Heading } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { formatLocalisedCompactNumber } from 'utils/formatBalance';\nimport useRefresh from 'hooks/useRefresh';\nimport useIntersectionObserver from 'hooks/useIntersectionObserver';\nimport { getTotalWon } from 'state/predictions/helpers';\nimport { usePriceBnbBusd } from 'state/farms/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledLink = styled(Link)`\n  width: 100%;\n`;\n_c = StyledLink;\n\nconst PredictionCardContent = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    slowRefresh\n  } = useRefresh();\n  const {\n    observerRef,\n    isIntersecting\n  } = useIntersectionObserver();\n  const [loadData, setLoadData] = useState(false);\n  const bnbBusdPrice = usePriceBnbBusd();\n  const [bnbWon, setBnbWon] = useState(0);\n  const [bnbWonInUsd, setBnbWonInUsd] = useState(0);\n  const localisedBnbUsdString = formatLocalisedCompactNumber(bnbWonInUsd);\n  const bnbWonText = t('$%bnbWonInUsd% in BNB won so far', {\n    bnbWonInUsd: localisedBnbUsdString\n  });\n  const [pretext, wonSoFar] = bnbWonText.split(localisedBnbUsdString);\n  useEffect(() => {\n    if (isIntersecting) {\n      setLoadData(true);\n    }\n  }, [isIntersecting]);\n  useEffect(() => {\n    const fetchMarketData = async () => {\n      const totalWon = await getTotalWon();\n      setBnbWon(totalWon);\n    };\n\n    if (loadData) {\n      fetchMarketData();\n    }\n  }, [slowRefresh, loadData]);\n  useEffect(() => {\n    if (bnbBusdPrice.gt(0) && bnbWon > 0) {\n      setBnbWonInUsd(bnbBusdPrice.times(bnbWon).toNumber());\n    }\n  }, [bnbBusdPrice, bnbWon]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      mt: \"48px\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: observerRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"#280D5F\",\n        bold: true,\n        fontSize: \"16px\",\n        children: t('Prediction')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), bnbWonInUsd ? /*#__PURE__*/_jsxDEV(Heading, {\n        color: \"#280D5F\",\n        my: \"8px\",\n        scale: \"xl\",\n        bold: true,\n        children: [pretext, localisedBnbUsdString]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n          width: 230,\n          height: 40,\n          my: \"8px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: observerRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"#280D5F\",\n        mb: \"24px\",\n        bold: true,\n        fontSize: \"16px\",\n        children: wonSoFar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"#280D5F\",\n        mb: \"40px\",\n        children: t('Will BNB price rise or fall? guess correctly to win!')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(StyledLink, {\n        href: \"/prediction\",\n        id: \"homepage-prediction-cta\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          width: \"100%\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            color: \"invertedContrast\",\n            children: t('Play')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n            ml: \"4px\",\n            color: \"invertedContrast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PredictionCardContent, \"PaUztQzNbwY6MStBypsijNjEvaM=\", false, function () {\n  return [useTranslation, useRefresh, useIntersectionObserver, usePriceBnbBusd];\n});\n\n_c2 = PredictionCardContent;\nexport default PredictionCardContent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledLink\");\n$RefreshReg$(_c2, \"PredictionCardContent\");","map":{"version":3,"sources":["/Users/thomas/Documents/PycharmProjects/pancake-frontend/src/views/Home/components/WinSection/PredictionCardContent.tsx"],"names":["React","useState","useEffect","styled","Flex","Text","Skeleton","Link","Button","ArrowForwardIcon","Heading","useTranslation","formatLocalisedCompactNumber","useRefresh","useIntersectionObserver","getTotalWon","usePriceBnbBusd","StyledLink","PredictionCardContent","t","slowRefresh","observerRef","isIntersecting","loadData","setLoadData","bnbBusdPrice","bnbWon","setBnbWon","bnbWonInUsd","setBnbWonInUsd","localisedBnbUsdString","bnbWonText","pretext","wonSoFar","split","fetchMarketData","totalWon","gt","times","toNumber"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Skeleton, Link, Button, ArrowForwardIcon, Heading } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { formatLocalisedCompactNumber } from 'utils/formatBalance'\nimport useRefresh from 'hooks/useRefresh'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport { getTotalWon } from 'state/predictions/helpers'\nimport { usePriceBnbBusd } from 'state/farms/hooks'\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst PredictionCardContent = () => {\n  const { t } = useTranslation()\n  const { slowRefresh } = useRefresh()\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const [loadData, setLoadData] = useState(false)\n  const bnbBusdPrice = usePriceBnbBusd()\n  const [bnbWon, setBnbWon] = useState(0)\n  const [bnbWonInUsd, setBnbWonInUsd] = useState(0)\n\n  const localisedBnbUsdString = formatLocalisedCompactNumber(bnbWonInUsd)\n  const bnbWonText = t('$%bnbWonInUsd% in BNB won so far', { bnbWonInUsd: localisedBnbUsdString })\n  const [pretext, wonSoFar] = bnbWonText.split(localisedBnbUsdString)\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setLoadData(true)\n    }\n  }, [isIntersecting])\n\n  useEffect(() => {\n    const fetchMarketData = async () => {\n      const totalWon = await getTotalWon()\n      setBnbWon(totalWon)\n    }\n\n    if (loadData) {\n      fetchMarketData()\n    }\n  }, [slowRefresh, loadData])\n\n  useEffect(() => {\n    if (bnbBusdPrice.gt(0) && bnbWon > 0) {\n      setBnbWonInUsd(bnbBusdPrice.times(bnbWon).toNumber())\n    }\n  }, [bnbBusdPrice, bnbWon])\n\n  return (\n    <>\n      <Flex flexDirection=\"column\" mt=\"48px\">\n        <div ref={observerRef} />\n        <Text color=\"#280D5F\" bold fontSize=\"16px\">\n          {t('Prediction')}\n        </Text>\n        {bnbWonInUsd ? (\n          <Heading color=\"#280D5F\" my=\"8px\" scale=\"xl\" bold>\n            {pretext}\n            {localisedBnbUsdString}\n          </Heading>\n        ) : (\n          <>\n            <Skeleton width={230} height={40} my=\"8px\" />\n            <div ref={observerRef} />\n          </>\n        )}\n        <Text color=\"#280D5F\" mb=\"24px\" bold fontSize=\"16px\">\n          {wonSoFar}\n        </Text>\n        <Text color=\"#280D5F\" mb=\"40px\">\n          {t('Will BNB price rise or fall? guess correctly to win!')}\n        </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"center\">\n        <StyledLink href=\"/prediction\" id=\"homepage-prediction-cta\">\n          <Button width=\"100%\">\n            <Text bold color=\"invertedContrast\">\n              {t('Play')}\n            </Text>\n            <ArrowForwardIcon ml=\"4px\" color=\"invertedContrast\" />\n          </Button>\n        </StyledLink>\n      </Flex>\n    </>\n  )\n}\n\nexport default PredictionCardContent\n"]},"metadata":{},"sourceType":"module"}