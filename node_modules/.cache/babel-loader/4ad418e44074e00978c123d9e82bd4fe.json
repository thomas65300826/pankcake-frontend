{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/pancake-frontend/src/components/SearchModal/CurrencySearchModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport { ModalContainer, ModalHeader, ModalTitle, ModalBackButton, ModalCloseButton, ModalBody, Heading, Button } from '@pancakeswap/uikit';\nimport styled from 'styled-components';\nimport usePrevious from 'hooks/usePreviousValue';\nimport { useTranslation } from 'contexts/Localization';\nimport CurrencySearch from './CurrencySearch';\nimport ImportToken from './ImportToken';\nimport Manage from './Manage';\nimport ImportList from './ImportList';\nimport { CurrencyModalView } from './types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({\n  theme\n}) => theme.colors.backgroundAlt};\n  text-align: center;\n`;\n_c = Footer;\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`;\n_c2 = StyledModalContainer;\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`;\n_c3 = StyledModalBody;\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false\n}) {\n  _s();\n\n  const [modalView, setModalView] = useState(CurrencyModalView.search);\n  const handleCurrencySelect = useCallback(currency => {\n    onDismiss();\n    onCurrencySelect(currency);\n  }, [onDismiss, onCurrencySelect]); // for token import view\n\n  const prevView = usePrevious(modalView); // used for import token flow\n\n  const [importToken, setImportToken] = useState(); // used for import list\n\n  const [importList, setImportList] = useState();\n  const [listURL, setListUrl] = useState();\n  const {\n    t\n  } = useTranslation();\n  const config = {\n    [CurrencyModalView.search]: {\n      title: t('Select a Token'),\n      onBack: undefined\n    },\n    [CurrencyModalView.manage]: {\n      title: t('Manage'),\n      onBack: () => setModalView(CurrencyModalView.search)\n    },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () => setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search)\n    },\n    [CurrencyModalView.importList]: {\n      title: t('Import List'),\n      onBack: () => setModalView(CurrencyModalView.search)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(StyledModalContainer, {\n    minWidth: \"320px\",\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      children: [/*#__PURE__*/_jsxDEV(ModalTitle, {\n        children: [config[modalView].onBack && /*#__PURE__*/_jsxDEV(ModalBackButton, {\n          onBack: config[modalView].onBack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          children: config[modalView].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {\n        onDismiss: onDismiss\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledModalBody, {\n      children: [modalView === CurrencyModalView.search ? /*#__PURE__*/_jsxDEV(CurrencySearch, {\n        onCurrencySelect: handleCurrencySelect,\n        selectedCurrency: selectedCurrency,\n        otherSelectedCurrency: otherSelectedCurrency,\n        showCommonBases: showCommonBases,\n        showImportView: () => setModalView(CurrencyModalView.importToken),\n        setImportToken: setImportToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this) : modalView === CurrencyModalView.importToken && importToken ? /*#__PURE__*/_jsxDEV(ImportToken, {\n        tokens: [importToken],\n        handleCurrencySelect: handleCurrencySelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this) : modalView === CurrencyModalView.importList && importList && listURL ? /*#__PURE__*/_jsxDEV(ImportList, {\n        list: importList,\n        listURL: listURL,\n        onImport: () => setModalView(CurrencyModalView.manage)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this) : modalView === CurrencyModalView.manage ? /*#__PURE__*/_jsxDEV(Manage, {\n        setModalView: setModalView,\n        setImportToken: setImportToken,\n        setImportList: setImportList,\n        setListUrl: setListUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this) : '', modalView === CurrencyModalView.search && /*#__PURE__*/_jsxDEV(Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          scale: \"sm\",\n          variant: \"text\",\n          onClick: () => setModalView(CurrencyModalView.manage),\n          className: \"list-token-manage-button\",\n          children: t('Manage Tokens')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CurrencySearchModal, \"R+p2CoTtdNKeV07W4y1qKV+GaSg=\", false, function () {\n  return [usePrevious, useTranslation];\n});\n\n_c4 = CurrencySearchModal;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Footer\");\n$RefreshReg$(_c2, \"StyledModalContainer\");\n$RefreshReg$(_c3, \"StyledModalBody\");\n$RefreshReg$(_c4, \"CurrencySearchModal\");","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/src/components/SearchModal/CurrencySearchModal.tsx"],"names":["React","useCallback","useState","ModalContainer","ModalHeader","ModalTitle","ModalBackButton","ModalCloseButton","ModalBody","Heading","Button","styled","usePrevious","useTranslation","CurrencySearch","ImportToken","Manage","ImportList","CurrencyModalView","Footer","div","theme","colors","backgroundAlt","StyledModalContainer","StyledModalBody","CurrencySearchModal","onDismiss","onCurrencySelect","selectedCurrency","otherSelectedCurrency","showCommonBases","modalView","setModalView","search","handleCurrencySelect","currency","prevView","importToken","setImportToken","importList","setImportList","listURL","setListUrl","t","config","title","onBack","undefined","manage"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showCommonBases={showCommonBases}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n        {modalView === CurrencyModalView.search && (\n          <Footer>\n            <Button\n              scale=\"sm\"\n              variant=\"text\"\n              onClick={() => setModalView(CurrencyModalView.manage)}\n              className=\"list-token-manage-button\"\n            >\n              {t('Manage Tokens')}\n            </Button>\n          </Footer>\n        )}\n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}