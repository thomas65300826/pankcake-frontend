{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/pancake-frontend/src/views/Voting/components/Proposals/TabMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { TabMenu as UIKitTabMenu, Tab, Flex, VerifiedIcon, CommunityIcon } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { ProposalType } from 'state/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTabMenu = styled.div`\n  background-color: ${({\n  theme\n}) => theme.colors.input};\n  padding-top: 16px;\n`;\n_c = StyledTabMenu;\n\nconst getIndexFromType = proposalType => {\n  switch (proposalType) {\n    case ProposalType.COMMUNITY:\n      return 1;\n\n    case ProposalType.ALL:\n      return 2;\n\n    case ProposalType.CORE:\n    default:\n      return 0;\n  }\n};\n\nconst getTypeFromIndex = index => {\n  switch (index) {\n    case 1:\n      return ProposalType.COMMUNITY;\n\n    case 2:\n      return ProposalType.ALL;\n\n    default:\n      return ProposalType.CORE;\n  }\n};\n\nconst TabMenu = ({\n  proposalType,\n  onTypeChange\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n\n  const handleItemClick = index => {\n    onTypeChange(getTypeFromIndex(index));\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledTabMenu, {\n    children: /*#__PURE__*/_jsxDEV(UIKitTabMenu, {\n      activeIndex: getIndexFromType(proposalType),\n      onItemClick: handleItemClick,\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(VerifiedIcon, {\n            color: \"currentColor\",\n            mr: \"4px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), t('Core')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        children: [' ', /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(CommunityIcon, {\n            color: \"currentColor\",\n            mr: \"4px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), t('Community')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TabMenu, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c2 = TabMenu;\nexport default TabMenu;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledTabMenu\");\n$RefreshReg$(_c2, \"TabMenu\");","map":{"version":3,"sources":["/Users/thomas/Documents/pancake-frontend/src/views/Voting/components/Proposals/TabMenu.tsx"],"names":["React","styled","TabMenu","UIKitTabMenu","Tab","Flex","VerifiedIcon","CommunityIcon","useTranslation","ProposalType","StyledTabMenu","div","theme","colors","input","getIndexFromType","proposalType","COMMUNITY","ALL","CORE","getTypeFromIndex","index","onTypeChange","t","handleItemClick"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAO,IAAIC,YAApB,EAAkCC,GAAlC,EAAuCC,IAAvC,EAA6CC,YAA7C,EAA2DC,aAA3D,QAAgF,oBAAhF;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,YAAT,QAA6B,aAA7B;;AAOA,MAAMC,aAAa,GAAGT,MAAM,CAACU,GAAI;AACjC,sBAAsB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,KAAM;AACxD;AACA,CAHA;KAAMJ,a;;AAKN,MAAMK,gBAAgB,GAAIC,YAAD,IAAgC;AACvD,UAAQA,YAAR;AACE,SAAKP,YAAY,CAACQ,SAAlB;AACE,aAAO,CAAP;;AACF,SAAKR,YAAY,CAACS,GAAlB;AACE,aAAO,CAAP;;AACF,SAAKT,YAAY,CAACU,IAAlB;AACA;AACE,aAAO,CAAP;AAPJ;AASD,CAVD;;AAYA,MAAMC,gBAAgB,GAAIC,KAAD,IAAmB;AAC1C,UAAQA,KAAR;AACE,SAAK,CAAL;AACE,aAAOZ,YAAY,CAACQ,SAApB;;AACF,SAAK,CAAL;AACE,aAAOR,YAAY,CAACS,GAApB;;AACF;AACE,aAAOT,YAAY,CAACU,IAApB;AANJ;AAQD,CATD;;AAWA,MAAMjB,OAA+B,GAAG,CAAC;AAAEc,EAAAA,YAAF;AAAgBM,EAAAA;AAAhB,CAAD,KAAoC;AAAA;;AAC1E,QAAM;AAAEC,IAAAA;AAAF,MAAQf,cAAc,EAA5B;;AACA,QAAMgB,eAAe,GAAIH,KAAD,IAAmB;AACzCC,IAAAA,YAAY,CAACF,gBAAgB,CAACC,KAAD,CAAjB,CAAZ;AACD,GAFD;;AAIA,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,YAAD;AAAc,MAAA,WAAW,EAAEN,gBAAgB,CAACC,YAAD,CAA3C;AAA2D,MAAA,WAAW,EAAEQ,eAAxE;AAAA,8BACE,QAAC,GAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,UAAU,EAAC,QAAjB;AAAA,kCACE,QAAC,YAAD;AAAc,YAAA,KAAK,EAAC,cAApB;AAAmC,YAAA,EAAE,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGD,CAAC,CAAC,MAAD,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,GAAD;AAAA,mBACG,GADH,eAEE,QAAC,IAAD;AAAM,UAAA,UAAU,EAAC,QAAjB;AAAA,kCACE,QAAC,aAAD;AAAe,YAAA,KAAK,EAAC,cAArB;AAAoC,YAAA,EAAE,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGA,CAAC,CAAC,WAAD,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAcE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA1BD;;GAAMrB,O;UACUM,c;;;MADVN,O;AA4BN,eAAeA,OAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { TabMenu as UIKitTabMenu, Tab, Flex, VerifiedIcon, CommunityIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { ProposalType } from 'state/types'\n\ninterface TabMenuProps {\n  proposalType: ProposalType\n  onTypeChange: (proposalType: ProposalType) => void\n}\n\nconst StyledTabMenu = styled.div`\n  background-color: ${({ theme }) => theme.colors.input};\n  padding-top: 16px;\n`\n\nconst getIndexFromType = (proposalType: ProposalType) => {\n  switch (proposalType) {\n    case ProposalType.COMMUNITY:\n      return 1\n    case ProposalType.ALL:\n      return 2\n    case ProposalType.CORE:\n    default:\n      return 0\n  }\n}\n\nconst getTypeFromIndex = (index: number) => {\n  switch (index) {\n    case 1:\n      return ProposalType.COMMUNITY\n    case 2:\n      return ProposalType.ALL\n    default:\n      return ProposalType.CORE\n  }\n}\n\nconst TabMenu: React.FC<TabMenuProps> = ({ proposalType, onTypeChange }) => {\n  const { t } = useTranslation()\n  const handleItemClick = (index: number) => {\n    onTypeChange(getTypeFromIndex(index))\n  }\n\n  return (\n    <StyledTabMenu>\n      <UIKitTabMenu activeIndex={getIndexFromType(proposalType)} onItemClick={handleItemClick}>\n        <Tab>\n          <Flex alignItems=\"center\">\n            <VerifiedIcon color=\"currentColor\" mr=\"4px\" />\n            {t('Core')}\n          </Flex>\n        </Tab>\n        <Tab>\n          {' '}\n          <Flex alignItems=\"center\">\n            <CommunityIcon color=\"currentColor\" mr=\"4px\" />\n            {t('Community')}\n          </Flex>\n        </Tab>\n        <Tab>All</Tab>\n      </UIKitTabMenu>\n    </StyledTabMenu>\n  )\n}\n\nexport default TabMenu\n"]},"metadata":{},"sourceType":"module"}